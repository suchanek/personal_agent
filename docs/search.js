window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"personal_agent": {"fullname": "personal_agent", "modulename": "personal_agent", "kind": "module", "doc": "<p>Personal AI Agent package initialization.</p>\n\n<p>This module serves as the main entry point for the Personal AI Agent package,\nproviding a comprehensive suite of AI-powered tools and capabilities including:</p>\n\n<ul>\n<li>Multi-framework support: LangChain, smolagents, and Agno frameworks</li>\n<li>Model Context Protocol (MCP) integration with multiple servers</li>\n<li>Weaviate vector database for persistent memory</li>\n<li>Advanced memory management with semantic deduplication</li>\n<li>Comprehensive tool suite for file operations, web research, and system tasks</li>\n<li>Multiple interface options: Streamlit, Flask, and CLI</li>\n<li>Modular architecture with organized code structure</li>\n</ul>\n\n<p>The package supports three main frameworks:</p>\n\n<ol>\n<li>LangChain ReAct (legacy support)</li>\n<li>Smolagents (multi-agent coordination)</li>\n<li>Agno (modern async agent framework) - primary interface</li>\n</ol>\n\n<p>Author: Personal Agent Development Team\nLast modified: 2025-08-09 14:52:45\nVersion: 0.11.38</p>\n"}, "personal_agent.mcp_client": {"fullname": "personal_agent.mcp_client", "modulename": "personal_agent", "qualname": "mcp_client", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;personal_agent.core.mcp_client.SimpleMCPClient object&gt;"}, "personal_agent.logger": {"fullname": "personal_agent.logger", "modulename": "personal_agent", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger personal_agent.utils.pag_logging (INFO)&gt;"}, "personal_agent.cli_main": {"fullname": "personal_agent.cli_main", "modulename": "personal_agent", "qualname": "cli_main", "kind": "function", "doc": "<p>Main entry point for CLI mode (used by poetry scripts).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.run_agno_cli": {"fullname": "personal_agent.run_agno_cli", "modulename": "personal_agent", "qualname": "run_agno_cli", "kind": "function", "doc": "<p>Run agno agent in CLI mode with enhanced interface.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>agent</strong>:  The initialized AgnoPersonalAgent instance</li>\n<li><strong>ollama_url</strong>:  The Ollama server URL being used</li>\n<li><strong>console</strong>:  Optional Rich console instance</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">agno_agent</span><span class=\"o\">.</span><span class=\"n\">AgnoPersonalAgent</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">console</span><span class=\"p\">:</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">Console</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.run_agno_cli_wrapper": {"fullname": "personal_agent.run_agno_cli_wrapper", "modulename": "personal_agent", "qualname": "run_agno_cli_wrapper", "kind": "function", "doc": "<p>Wrapper function to initialize system and run CLI.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query</strong>:  Initial query to run (currently unused)</li>\n<li><strong>use_remote_ollama</strong>:  Whether to use the remote Ollama server instead of local</li>\n<li><strong>recreate</strong>:  Whether to recreate the knowledge base</li>\n<li><strong>instruction_level</strong>:  The instruction level for the agent</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_remote_ollama</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">recreate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">instruction_level</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;STANDARD&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.cli": {"fullname": "personal_agent.cli", "modulename": "personal_agent.cli", "kind": "module", "doc": "<p>CLI package for the Personal AI Agent.</p>\n\n<p>This package provides command-line interface components including\nmemory management commands, CLI utilities, and command parsing.</p>\n"}, "personal_agent.cli.run_agno_cli": {"fullname": "personal_agent.cli.run_agno_cli", "modulename": "personal_agent.cli", "qualname": "run_agno_cli", "kind": "function", "doc": "<p>Run agno agent in CLI mode with enhanced interface.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>agent</strong>:  The initialized AgnoPersonalAgent instance</li>\n<li><strong>ollama_url</strong>:  The Ollama server URL being used</li>\n<li><strong>console</strong>:  Optional Rich console instance</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">agno_agent</span><span class=\"o\">.</span><span class=\"n\">AgnoPersonalAgent</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">console</span><span class=\"p\">:</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">Console</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.cli.show_all_memories": {"fullname": "personal_agent.cli.show_all_memories", "modulename": "personal_agent.cli", "qualname": "show_all_memories", "kind": "function", "doc": "<p>Show all memories for the user, using the agent's memory tools when available.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">agno_agent</span><span class=\"o\">.</span><span class=\"n\">AgnoPersonalAgent</span>,</span><span class=\"param\">\t<span class=\"n\">console</span><span class=\"p\">:</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">Console</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.cli.show_memories_by_topic_cli": {"fullname": "personal_agent.cli.show_memories_by_topic_cli", "modulename": "personal_agent.cli", "qualname": "show_memories_by_topic_cli", "kind": "function", "doc": "<p>Show memories by topic via the CLI, using the agent's memory tools when available.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">agno_agent</span><span class=\"o\">.</span><span class=\"n\">AgnoPersonalAgent</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">console</span><span class=\"p\">:</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">Console</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.cli.show_memory_analysis": {"fullname": "personal_agent.cli.show_memory_analysis", "modulename": "personal_agent.cli", "qualname": "show_memory_analysis", "kind": "function", "doc": "<p>Show detailed memory analysis, using the agent's memory tools when available.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">agno_agent</span><span class=\"o\">.</span><span class=\"n\">AgnoPersonalAgent</span>,</span><span class=\"param\">\t<span class=\"n\">console</span><span class=\"p\">:</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">Console</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.cli.show_memory_stats": {"fullname": "personal_agent.cli.show_memory_stats", "modulename": "personal_agent.cli", "qualname": "show_memory_stats", "kind": "function", "doc": "<p>Show memory statistics, using the agent's memory tools when available.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">agno_agent</span><span class=\"o\">.</span><span class=\"n\">AgnoPersonalAgent</span>,</span><span class=\"param\">\t<span class=\"n\">console</span><span class=\"p\">:</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">Console</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.cli.clear_all_memories": {"fullname": "personal_agent.cli.clear_all_memories", "modulename": "personal_agent.cli", "qualname": "clear_all_memories", "kind": "function", "doc": "<p>Clear all memories for the user from both SQLite and LightRAG storage.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">agno_agent</span><span class=\"o\">.</span><span class=\"n\">AgnoPersonalAgent</span>,</span><span class=\"param\">\t<span class=\"n\">console</span><span class=\"p\">:</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">Console</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.cli.store_immediate_memory": {"fullname": "personal_agent.cli.store_immediate_memory", "modulename": "personal_agent.cli", "qualname": "store_immediate_memory", "kind": "function", "doc": "<p>Store content immediately as a memory in both SQLite and LightRAG storage.</p>\n\n<p>This function uses the agent's store_user_memory method which already handles\ndual storage in both SQLite and LightRAG graph memory systems.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">agno_agent</span><span class=\"o\">.</span><span class=\"n\">AgnoPersonalAgent</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">console</span><span class=\"p\">:</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">Console</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.cli.delete_memory_by_id_cli": {"fullname": "personal_agent.cli.delete_memory_by_id_cli", "modulename": "personal_agent.cli", "qualname": "delete_memory_by_id_cli", "kind": "function", "doc": "<p>Delete a single memory by its ID from both SQLite and LightRAG storage.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">agno_agent</span><span class=\"o\">.</span><span class=\"n\">AgnoPersonalAgent</span>,</span><span class=\"param\">\t<span class=\"n\">memory_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">console</span><span class=\"p\">:</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">Console</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.cli.delete_memories_by_topic_cli": {"fullname": "personal_agent.cli.delete_memories_by_topic_cli", "modulename": "personal_agent.cli", "qualname": "delete_memories_by_topic_cli", "kind": "function", "doc": "<p>Delete memories by topic from both SQLite and LightRAG storage.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">agno_agent</span><span class=\"o\">.</span><span class=\"n\">AgnoPersonalAgent</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">console</span><span class=\"p\">:</span> <span class=\"n\">rich</span><span class=\"o\">.</span><span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">Console</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.config": {"fullname": "personal_agent.config", "modulename": "personal_agent.config", "kind": "module", "doc": "<p>Configuration package for Personal Agent.</p>\n"}, "personal_agent.config.AGNO_KNOWLEDGE_DIR": {"fullname": "personal_agent.config.AGNO_KNOWLEDGE_DIR", "modulename": "personal_agent.config", "qualname": "AGNO_KNOWLEDGE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/Shared/personal_agent_data/agno/grok/knowledge&#x27;"}, "personal_agent.config.AGNO_STORAGE_DIR": {"fullname": "personal_agent.config.AGNO_STORAGE_DIR", "modulename": "personal_agent.config", "qualname": "AGNO_STORAGE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/Shared/personal_agent_data/agno/grok&#x27;"}, "personal_agent.config.BASE_DIR": {"fullname": "personal_agent.config.BASE_DIR", "modulename": "personal_agent.config", "qualname": "BASE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "PosixPath(&#x27;/Users/egs/repos/personal_agent&#x27;)"}, "personal_agent.config.DATA_DIR": {"fullname": "personal_agent.config.DATA_DIR", "modulename": "personal_agent.config", "qualname": "DATA_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/Shared/personal_agent_data&#x27;"}, "personal_agent.config.USER_DATA_DIR": {"fullname": "personal_agent.config.USER_DATA_DIR", "modulename": "personal_agent.config", "qualname": "USER_DATA_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/Shared/personal_agent_data/agno/grok/data&#x27;"}, "personal_agent.config.HOME_DIR": {"fullname": "personal_agent.config.HOME_DIR", "modulename": "personal_agent.config", "qualname": "HOME_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "$HOME_DIR"}, "personal_agent.config.PERSAG_HOME": {"fullname": "personal_agent.config.PERSAG_HOME", "modulename": "personal_agent.config", "qualname": "PERSAG_HOME", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/egs/.persag&#x27;"}, "personal_agent.config.PERSAG_ROOT": {"fullname": "personal_agent.config.PERSAG_ROOT", "modulename": "personal_agent.config", "qualname": "PERSAG_ROOT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/Shared/personal_agent_data&#x27;"}, "personal_agent.config.REPO_DIR": {"fullname": "personal_agent.config.REPO_DIR", "modulename": "personal_agent.config", "qualname": "REPO_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "$REPO_DIR"}, "personal_agent.config.ROOT_DIR": {"fullname": "personal_agent.config.ROOT_DIR", "modulename": "personal_agent.config", "qualname": "ROOT_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/&#x27;"}, "personal_agent.config.STORAGE_BACKEND": {"fullname": "personal_agent.config.STORAGE_BACKEND", "modulename": "personal_agent.config", "qualname": "STORAGE_BACKEND", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;agno&#x27;"}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"fullname": "personal_agent.config.LIGHTRAG_INPUTS_DIR", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_INPUTS_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/Shared/personal_agent_data/agno/grok/inputs&#x27;"}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"fullname": "personal_agent.config.LIGHTRAG_MEMORY_DIR", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_MEMORY_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/egs/.persag/lightrag_memory_server&#x27;"}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"fullname": "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_MEMORY_INPUTS_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/Shared/personal_agent_data/agno/grok/memory_inputs&#x27;"}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"fullname": "personal_agent.config.LIGHTRAG_MEMORY_PORT", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_MEMORY_PORT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;9622&#x27;"}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"fullname": "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_MEMORY_STORAGE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/Shared/personal_agent_data/agno/grok/memory_rag_storage&#x27;"}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"fullname": "personal_agent.config.LIGHTRAG_MEMORY_URL", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_MEMORY_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;http://localhost:9622&#x27;"}, "personal_agent.config.LIGHTRAG_PORT": {"fullname": "personal_agent.config.LIGHTRAG_PORT", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_PORT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;9621&#x27;"}, "personal_agent.config.LIGHTRAG_SERVER": {"fullname": "personal_agent.config.LIGHTRAG_SERVER", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_SERVER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;http://localhost:9621&#x27;"}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"fullname": "personal_agent.config.LIGHTRAG_SERVER_DIR", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_SERVER_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/egs/.persag/lightrag_server&#x27;"}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"fullname": "personal_agent.config.LIGHTRAG_STORAGE_DIR", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_STORAGE_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;/Users/Shared/personal_agent_data/agno/grok/rag_storage&#x27;"}, "personal_agent.config.LIGHTRAG_URL": {"fullname": "personal_agent.config.LIGHTRAG_URL", "modulename": "personal_agent.config", "qualname": "LIGHTRAG_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;http://localhost:9621&#x27;"}, "personal_agent.config.LLM_MODEL": {"fullname": "personal_agent.config.LLM_MODEL", "modulename": "personal_agent.config", "qualname": "LLM_MODEL", "kind": "variable", "doc": "<p></p>\n", "default_value": "$LLM_MODEL"}, "personal_agent.config.LMSTUDIO_URL": {"fullname": "personal_agent.config.LMSTUDIO_URL", "modulename": "personal_agent.config", "qualname": "LMSTUDIO_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;https://localhost:1234/v1&#x27;"}, "personal_agent.config.OLLAMA_URL": {"fullname": "personal_agent.config.OLLAMA_URL", "modulename": "personal_agent.config", "qualname": "OLLAMA_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;http://localhost:11434&#x27;"}, "personal_agent.config.REMOTE_LMSTUDIO_URL": {"fullname": "personal_agent.config.REMOTE_LMSTUDIO_URL", "modulename": "personal_agent.config", "qualname": "REMOTE_LMSTUDIO_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "$REMOTE_OLLAMA_URL"}, "personal_agent.config.REMOTE_OLLAMA_URL": {"fullname": "personal_agent.config.REMOTE_OLLAMA_URL", "modulename": "personal_agent.config", "qualname": "REMOTE_OLLAMA_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "$REMOTE_OLLAMA_URL"}, "personal_agent.config.WEAVIATE_URL": {"fullname": "personal_agent.config.WEAVIATE_URL", "modulename": "personal_agent.config", "qualname": "WEAVIATE_URL", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;http://localhost:8080&#x27;"}, "personal_agent.config.EMBEDDING_TIMEOUT": {"fullname": "personal_agent.config.EMBEDDING_TIMEOUT", "modulename": "personal_agent.config", "qualname": "EMBEDDING_TIMEOUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;3600&#x27;"}, "personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"fullname": "personal_agent.config.HTTPX_CONNECT_TIMEOUT", "modulename": "personal_agent.config", "qualname": "HTTPX_CONNECT_TIMEOUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;600&#x27;"}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"fullname": "personal_agent.config.HTTPX_POOL_TIMEOUT", "modulename": "personal_agent.config", "qualname": "HTTPX_POOL_TIMEOUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;600&#x27;"}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"fullname": "personal_agent.config.HTTPX_READ_TIMEOUT", "modulename": "personal_agent.config", "qualname": "HTTPX_READ_TIMEOUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;7200&#x27;"}, "personal_agent.config.HTTPX_TIMEOUT": {"fullname": "personal_agent.config.HTTPX_TIMEOUT", "modulename": "personal_agent.config", "qualname": "HTTPX_TIMEOUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;7200&#x27;"}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"fullname": "personal_agent.config.HTTPX_WRITE_TIMEOUT", "modulename": "personal_agent.config", "qualname": "HTTPX_WRITE_TIMEOUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;600&#x27;"}, "personal_agent.config.LLM_TIMEOUT": {"fullname": "personal_agent.config.LLM_TIMEOUT", "modulename": "personal_agent.config", "qualname": "LLM_TIMEOUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;7200&#x27;"}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"fullname": "personal_agent.config.OLLAMA_KEEP_ALIVE", "modulename": "personal_agent.config", "qualname": "OLLAMA_KEEP_ALIVE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;3600&#x27;"}, "personal_agent.config.OLLAMA_NUM_PREDICT": {"fullname": "personal_agent.config.OLLAMA_NUM_PREDICT", "modulename": "personal_agent.config", "qualname": "OLLAMA_NUM_PREDICT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;16384&#x27;"}, "personal_agent.config.OLLAMA_TEMPERATURE": {"fullname": "personal_agent.config.OLLAMA_TEMPERATURE", "modulename": "personal_agent.config", "qualname": "OLLAMA_TEMPERATURE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;0.4&#x27;"}, "personal_agent.config.OLLAMA_TIMEOUT": {"fullname": "personal_agent.config.OLLAMA_TIMEOUT", "modulename": "personal_agent.config", "qualname": "OLLAMA_TIMEOUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;7200&#x27;"}, "personal_agent.config.PDF_CHUNK_SIZE": {"fullname": "personal_agent.config.PDF_CHUNK_SIZE", "modulename": "personal_agent.config", "qualname": "PDF_CHUNK_SIZE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;1024&#x27;"}, "personal_agent.config.LOG_LEVEL": {"fullname": "personal_agent.config.LOG_LEVEL", "modulename": "personal_agent.config", "qualname": "LOG_LEVEL", "kind": "variable", "doc": "<p></p>\n", "default_value": "20"}, "personal_agent.config.LOG_LEVEL_STR": {"fullname": "personal_agent.config.LOG_LEVEL_STR", "modulename": "personal_agent.config", "qualname": "LOG_LEVEL_STR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;INFO&#x27;"}, "personal_agent.config.PORT": {"fullname": "personal_agent.config.PORT", "modulename": "personal_agent.config", "qualname": "PORT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;9621&#x27;"}, "personal_agent.config.PROVIDER": {"fullname": "personal_agent.config.PROVIDER", "modulename": "personal_agent.config", "qualname": "PROVIDER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;ollama&#x27;"}, "personal_agent.config.SHOW_SPLASH_SCREEN": {"fullname": "personal_agent.config.SHOW_SPLASH_SCREEN", "modulename": "personal_agent.config", "qualname": "SHOW_SPLASH_SCREEN", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "personal_agent.config.USE_MCP": {"fullname": "personal_agent.config.USE_MCP", "modulename": "personal_agent.config", "qualname": "USE_MCP", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, "personal_agent.config.USE_WEAVIATE": {"fullname": "personal_agent.config.USE_WEAVIATE", "modulename": "personal_agent.config", "qualname": "USE_WEAVIATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "personal_agent.config.MCP_SERVERS": {"fullname": "personal_agent.config.MCP_SERVERS", "modulename": "personal_agent.config", "qualname": "MCP_SERVERS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;filesystem-home&#x27;: {&#x27;command&#x27;: &#x27;npx&#x27;, &#x27;args&#x27;: [&#x27;-y&#x27;, &#x27;@modelcontextprotocol/server-filesystem&#x27;, &#x27;/Users/egs&#x27;], &#x27;description&#x27;: &quot;Access user&#x27;s home directory filesystem operations&quot;}, &#x27;filesystem-data&#x27;: {&#x27;command&#x27;: &#x27;npx&#x27;, &#x27;args&#x27;: [&#x27;-y&#x27;, &#x27;@modelcontextprotocol/server-filesystem&#x27;, &#x27;/Users/Shared/personal_agent_data/agno/grok/data&#x27;], &#x27;description&#x27;: &#x27;Access user-specific data directory for vector database&#x27;}, &#x27;filesystem-root&#x27;: {&#x27;command&#x27;: &#x27;npx&#x27;, &#x27;args&#x27;: [&#x27;-y&#x27;, &#x27;@modelcontextprotocol/server-filesystem&#x27;, &#x27;/&#x27;], &#x27;description&#x27;: &#x27;Access full filesystem operations (root access)&#x27;}, &#x27;github&#x27;: {&#x27;command&#x27;: &#x27;npx&#x27;, &#x27;args&#x27;: [&#x27;-y&#x27;, &#x27;@modelcontextprotocol/server-github&#x27;], &#x27;description&#x27;: &#x27;GitHub repository operations and code search&#x27;, &#x27;env&#x27;: {&#x27;GITHUB_PERSONAL_ACCESS_TOKEN&#x27;: &#x27;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&#x27;}}, &#x27;brave-search&#x27;: {&#x27;command&#x27;: &#x27;npx&#x27;, &#x27;args&#x27;: [&#x27;-y&#x27;, &#x27;@modelcontextprotocol/server-brave-search&#x27;], &#x27;description&#x27;: &#x27;Web search for research and technical information&#x27;, &#x27;env&#x27;: {&#x27;BRAVE_API_KEY&#x27;: &#x27;BSAzjAuPynpGtJHeUF3S3a60wQEXYHx&#x27;}}, &#x27;puppeteer&#x27;: {&#x27;command&#x27;: &#x27;npx&#x27;, &#x27;args&#x27;: [&#x27;-y&#x27;, &#x27;@modelcontextprotocol/server-puppeteer&#x27;], &#x27;description&#x27;: &#x27;Browser automation and web content fetching&#x27;}}"}, "personal_agent.config.get_current_user_id": {"fullname": "personal_agent.config.get_current_user_id", "modulename": "personal_agent.config", "qualname": "get_current_user_id", "kind": "function", "doc": "<p>Get the current USER_ID dynamically from ~/.persag/env.userid.</p>\n\n<p>This function always reads from ~/.persag/env.userid to ensure we get the latest value\nafter user switching, rather than the cached value from module import time.</p>\n\n<p>Returns:\n    Current USER_ID from ~/.persag/env.userid or default fallback</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.config.get_env_bool": {"fullname": "personal_agent.config.get_env_bool", "modulename": "personal_agent.config", "qualname": "get_env_bool", "kind": "function", "doc": "<p>Parse environment variable as boolean with flexible string interpretation.</p>\n\n<p>Converts string environment variables to boolean values using common\nboolean representations. Accepts multiple formats for true values:\n'true', '1', 'yes', 'on' (case-insensitive).</p>\n\n<p>Args:\n    key: Environment variable name to retrieve and parse\n    fallback: Default boolean value if variable not found (default: True)</p>\n\n<p>Returns:\n    bool: Parsed boolean value or fallback if variable not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">fallback</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.config.get_env_var": {"fullname": "personal_agent.config.get_env_var", "modulename": "personal_agent.config", "qualname": "get_env_var", "kind": "function", "doc": "<p>Retrieve environment variable with intelligent fallback strategy.</p>\n\n<p>Prioritizes dotenv cache over os.environ to ensure consistent behavior.\nUses a two-tier lookup: first checks the cached .env values, then falls\nback to system environment variables if not found or if dotenv loading failed.</p>\n\n<p>Args:\n    key: Environment variable name to retrieve\n    fallback: Default value if variable not found (default: empty string)</p>\n\n<p>Returns:\n    str: Environment variable value or fallback if not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">fallback</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.config.get_mcp_servers": {"fullname": "personal_agent.config.get_mcp_servers", "modulename": "personal_agent.config", "qualname": "get_mcp_servers", "kind": "function", "doc": "<p>Get MCP server configurations.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.config.get_package_version": {"fullname": "personal_agent.config.get_package_version", "modulename": "personal_agent.config", "qualname": "get_package_version", "kind": "function", "doc": "<p>Retrieve package version with import path handling.</p>\n\n<p>Attempts to import the version from the package's __init__.py file,\nhandling both standalone script execution and module import scenarios.\nUses different import strategies based on execution context.</p>\n\n<p>Returns:\n    str: Package version string or 'unknown' if import fails</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.config.get_qwen_instruct_settings": {"fullname": "personal_agent.config.get_qwen_instruct_settings", "modulename": "personal_agent.config", "qualname": "get_qwen_instruct_settings", "kind": "function", "doc": "<p>Get Qwen instruct model settings as a dictionary.</p>\n\n<p>Returns:\n    dict: Dictionary containing instruct model parameters</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "personal_agent.config.get_qwen_thinking_settings": {"fullname": "personal_agent.config.get_qwen_thinking_settings", "modulename": "personal_agent.config", "qualname": "get_qwen_thinking_settings", "kind": "function", "doc": "<p>Get Qwen thinking model settings as a dictionary.</p>\n\n<p>Returns:\n    dict: Dictionary containing thinking model parameters</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "personal_agent.config.get_settings": {"fullname": "personal_agent.config.get_settings", "modulename": "personal_agent.config", "qualname": "get_settings", "kind": "function", "doc": "<p>Get configuration settings as a dictionary.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.config.get_user_storage_paths": {"fullname": "personal_agent.config.get_user_storage_paths", "modulename": "personal_agent.config", "qualname": "get_user_storage_paths", "kind": "function", "doc": "<p>Generate user-specific storage directory paths for current user.</p>\n\n<p>Creates a complete mapping of storage directories customized for the current\nuser ID, incorporating the configured storage backend and root paths.\nAll paths use environment variable expansion for flexibility.</p>\n\n<p>Returns:\n    dict: Dictionary mapping storage types to their full directory paths:\n        - DATA_DIR: General data storage\n        - AGNO_STORAGE_DIR: AGNO agent storage root\n        - AGNO_KNOWLEDGE_DIR: AGNO knowledge base\n        - LIGHTRAG_STORAGE_DIR: LightRAG document storage\n        - LIGHTRAG_INPUTS_DIR: LightRAG input files\n        - LIGHTRAG_MEMORY_STORAGE_DIR: LightRAG memory storage\n        - LIGHTRAG_MEMORY_INPUTS_DIR: LightRAG memory input files</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.config.get_userid": {"fullname": "personal_agent.config.get_userid", "modulename": "personal_agent.config", "qualname": "get_userid", "kind": "function", "doc": "<p>Retrieve the current USER_ID dynamically from ~/.persag/env.userid.</p>\n\n<p>Always reads from the filesystem to ensure the most current user ID is returned,\nsupporting dynamic user switching without requiring module reload.</p>\n\n<p>Returns:\n    str: Current user ID from ~/.persag/env.userid or 'default_user' fallback</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.config.load_user_from_file": {"fullname": "personal_agent.config.load_user_from_file", "modulename": "personal_agent.config", "qualname": "load_user_from_file", "kind": "function", "doc": "<p>Initialize PERSAG environment and load user configuration.</p>\n\n<p>Creates the ~/.persag directory structure if it doesn't exist, copies default\nLightRAG server configurations from the project root, and manages the user ID\nfile (env.userid). Sets up the complete user environment on first run.</p>\n\n<p>Directory Setup:\n    - Creates ~/.persag/ if missing\n    - Copies lightrag_server/ and lightrag_memory_server/ directories\n    - Creates/manages env.userid file with USER_ID configuration</p>\n\n<p>Returns:\n    str: The current user ID (loaded from file or default 'default_user')</p>\n\n<p>Side Effects:\n    - Sets USER_ID in os.environ\n    - Creates directory structure and config files\n    - Logs setup progress and errors</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.config.refresh_user_dependent_settings": {"fullname": "personal_agent.config.refresh_user_dependent_settings", "modulename": "personal_agent.config", "qualname": "refresh_user_dependent_settings", "kind": "function", "doc": "<p>Refresh all USER_ID-dependent settings after user switching.</p>\n\n<p>This function recalculates all storage paths and settings that depend on USER_ID\nto ensure they reflect the current user after switching.</p>\n\n<p>Args:\n    user_id: Optional user_id to refresh settings for. If not provided,\n             the current user_id from ~/.persag will be used.</p>\n\n<p>Returns:\n    Dictionary with updated settings</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.core": {"fullname": "personal_agent.core", "modulename": "personal_agent.core", "kind": "module", "doc": "<p>Core package for Personal Agent.</p>\n"}, "personal_agent.core.SimpleMCPClient": {"fullname": "personal_agent.core.SimpleMCPClient", "modulename": "personal_agent.core", "qualname": "SimpleMCPClient", "kind": "class", "doc": "<p>Simple MCP client based on the working test_mcp.py implementation.</p>\n"}, "personal_agent.core.SimpleMCPClient.__init__": {"fullname": "personal_agent.core.SimpleMCPClient.__init__", "modulename": "personal_agent.core", "qualname": "SimpleMCPClient.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">server_configs</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span></span>)</span>"}, "personal_agent.core.SimpleMCPClient.server_configs": {"fullname": "personal_agent.core.SimpleMCPClient.server_configs", "modulename": "personal_agent.core", "qualname": "SimpleMCPClient.server_configs", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.SimpleMCPClient.active_servers": {"fullname": "personal_agent.core.SimpleMCPClient.active_servers", "modulename": "personal_agent.core", "qualname": "SimpleMCPClient.active_servers", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"fullname": "personal_agent.core.SimpleMCPClient.start_server_sync", "modulename": "personal_agent.core", "qualname": "SimpleMCPClient.start_server_sync", "kind": "function", "doc": "<p>Start an MCP server process synchronously.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">server_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"fullname": "personal_agent.core.SimpleMCPClient.call_tool_sync", "modulename": "personal_agent.core", "qualname": "SimpleMCPClient.call_tool_sync", "kind": "function", "doc": "<p>Call a tool on an MCP server synchronously.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">server_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">tool_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">arguments</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"fullname": "personal_agent.core.SimpleMCPClient.list_tools_sync", "modulename": "personal_agent.core", "qualname": "SimpleMCPClient.list_tools_sync", "kind": "function", "doc": "<p>List available tools on an MCP server synchronously.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">server_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"fullname": "personal_agent.core.SimpleMCPClient.stop_server_sync", "modulename": "personal_agent.core", "qualname": "SimpleMCPClient.stop_server_sync", "kind": "function", "doc": "<p>Stop a specific MCP server.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">server_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SimpleMCPClient.start_servers": {"fullname": "personal_agent.core.SimpleMCPClient.start_servers", "modulename": "personal_agent.core", "qualname": "SimpleMCPClient.start_servers", "kind": "function", "doc": "<p>Start all configured MCP servers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">server_configs</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"fullname": "personal_agent.core.SimpleMCPClient.stop_all_servers", "modulename": "personal_agent.core", "qualname": "SimpleMCPClient.stop_all_servers", "kind": "function", "doc": "<p>Stop all active MCP servers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.core.setup_weaviate": {"fullname": "personal_agent.core.setup_weaviate", "modulename": "personal_agent.core", "qualname": "setup_weaviate", "kind": "function", "doc": "<p>Setup Weaviate client and vector store. Returns True if successful.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if Weaviate setup succeeded, False otherwise</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.is_weaviate_connected": {"fullname": "personal_agent.core.is_weaviate_connected", "modulename": "personal_agent.core", "qualname": "is_weaviate_connected", "kind": "function", "doc": "<p>Check if Weaviate is available and connected.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if Weaviate is connected and ready, False otherwise</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.reset_weaviate_if_corrupted": {"fullname": "personal_agent.core.reset_weaviate_if_corrupted", "modulename": "personal_agent.core", "qualname": "reset_weaviate_if_corrupted", "kind": "function", "doc": "<p>Check for Weaviate database corruption and attempt recovery.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if reset was successful or not needed, False if reset failed</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.is_agno_storage_connected": {"fullname": "personal_agent.core.is_agno_storage_connected", "modulename": "personal_agent.core", "qualname": "is_agno_storage_connected", "kind": "function", "doc": "<p>Check if Agno storage is available and connected.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if Agno storage directories exist and are accessible, False otherwise</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.is_memory_connected": {"fullname": "personal_agent.core.is_memory_connected", "modulename": "personal_agent.core", "qualname": "is_memory_connected", "kind": "function", "doc": "<p>Check if the configured memory backend is connected.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the configured memory backend is connected, False otherwise</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_agent_executor": {"fullname": "personal_agent.core.create_agent_executor", "modulename": "personal_agent.core", "qualname": "create_agent_executor", "kind": "function", "doc": "<p>Create the ReAct agent executor with the provided tools.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">tools</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">langchain_core</span><span class=\"o\">.</span><span class=\"n\">tools</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseTool</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">agents</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">AgentExecutor</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_simple_personal_agent": {"fullname": "personal_agent.core.create_simple_personal_agent", "modulename": "personal_agent.core", "qualname": "create_simple_personal_agent", "kind": "function", "doc": "<p>Create a simple personal agent following the working pattern from knowledge_agent_example.py</p>\n\n<p>This function creates an agent with knowledge base integration using the simple\npattern that avoids async initialization complexity.</p>\n\n<p>Args:\n    storage_dir: Directory for storage files (defaults to PERSAG_ROOT/agno)\n    knowledge_dir: Directory containing knowledge files (defaults to PERSAG_ROOT/knowledge)\n    model_provider: LLM provider ('ollama' or 'openai')\n    model_name: Model name to use</p>\n\n<p>Returns:\n    Tuple of (Agent instance, knowledge_base) or (Agent, None) if no knowledge</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">knowledge_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.core.load_agent_knowledge": {"fullname": "personal_agent.core.load_agent_knowledge", "modulename": "personal_agent.core", "qualname": "load_agent_knowledge", "kind": "function", "doc": "<p>Load knowledge base content asynchronously.</p>\n\n<p>This should be called after creating the agent to load the knowledge content.</p>\n\n<p>Args:\n    knowledge_base: Knowledge base instance to load\n    recreate: Whether to recreate the knowledge base from scratch</p>\n\n<p>Returns:\n    None</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">knowledge_base</span>, </span><span class=\"param\"><span class=\"n\">recreate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentKnowledgeManager": {"fullname": "personal_agent.core.AgentKnowledgeManager", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager", "kind": "class", "doc": "<p>Manages knowledge operations including storage, retrieval, and updates.</p>\n"}, "personal_agent.core.AgentKnowledgeManager.__init__": {"fullname": "personal_agent.core.AgentKnowledgeManager.__init__", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.__init__", "kind": "function", "doc": "<p>Initialize the knowledge manager.</p>\n\n<p>Args:\n    user_id: User identifier for knowledge operations\n    storage_dir: Directory for storage files\n    lightrag_url: Optional URL for LightRAG API\n    lightrag_memory_url: Optional URL for LightRAG Memory API</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">lightrag_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lightrag_memory_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "personal_agent.core.AgentKnowledgeManager.user_id": {"fullname": "personal_agent.core.AgentKnowledgeManager.user_id", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.user_id", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"fullname": "personal_agent.core.AgentKnowledgeManager.storage_dir", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.storage_dir", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"fullname": "personal_agent.core.AgentKnowledgeManager.lightrag_url", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.lightrag_url", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"fullname": "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.lightrag_memory_url", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"fullname": "personal_agent.core.AgentKnowledgeManager.knowledge_base_file", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.knowledge_base_file", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"fullname": "personal_agent.core.AgentKnowledgeManager.knowledge_base", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.knowledge_base", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"fullname": "personal_agent.core.AgentKnowledgeManager.add_fact", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.add_fact", "kind": "function", "doc": "<p>Add a fact to the knowledge base.</p>\n\n<p>Args:\n    fact: The fact to add\n    source: Source of the fact (user, inference, etc.)\n    confidence: Confidence score (0.0-1.0)</p>\n\n<p>Returns:\n    True if fact was added successfully</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fact</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;user&#39;</span>, </span><span class=\"param\"><span class=\"n\">confidence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"fullname": "personal_agent.core.AgentKnowledgeManager.get_facts", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.get_facts", "kind": "function", "doc": "<p>Get facts from the knowledge base with optional filtering.</p>\n\n<p>Args:\n    filter_source: Optional source to filter by\n    min_confidence: Minimum confidence threshold</p>\n\n<p>Returns:\n    List of fact objects</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">filter_source</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">min_confidence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"fullname": "personal_agent.core.AgentKnowledgeManager.set_preference", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.set_preference", "kind": "function", "doc": "<p>Set a user preference.</p>\n\n<p>Args:\n    category: Preference category (e.g., 'communication', 'interface')\n    key: Preference key\n    value: Preference value</p>\n\n<p>Returns:\n    True if preference was set successfully</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"fullname": "personal_agent.core.AgentKnowledgeManager.get_preference", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.get_preference", "kind": "function", "doc": "<p>Get a user preference.</p>\n\n<p>Args:\n    category: Preference category\n    key: Preference key\n    default: Default value if preference doesn't exist</p>\n\n<p>Returns:\n    Preference value or default</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"fullname": "personal_agent.core.AgentKnowledgeManager.get_all_preferences", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.get_all_preferences", "kind": "function", "doc": "<p>Get all preferences, optionally filtered by category.</p>\n\n<p>Args:\n    category: Optional category to filter by</p>\n\n<p>Returns:\n    Dictionary of preferences</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"fullname": "personal_agent.core.AgentKnowledgeManager.add_entity", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.add_entity", "kind": "function", "doc": "<p>Add an entity to the knowledge base.</p>\n\n<p>Args:\n    entity_name: Name of the entity\n    entity_type: Type of the entity (person, place, thing, etc.)\n    properties: Optional properties of the entity</p>\n\n<p>Returns:\n    True if entity was added successfully</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">entity_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">entity_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"fullname": "personal_agent.core.AgentKnowledgeManager.get_entity", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.get_entity", "kind": "function", "doc": "<p>Get an entity from the knowledge base.</p>\n\n<p>Args:\n    entity_name: Name of the entity</p>\n\n<p>Returns:\n    Entity object or None if not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">entity_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"fullname": "personal_agent.core.AgentKnowledgeManager.update_entity", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.update_entity", "kind": "function", "doc": "<p>Update an entity's properties.</p>\n\n<p>Args:\n    entity_name: Name of the entity\n    properties: Properties to update</p>\n\n<p>Returns:\n    True if entity was updated successfully</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">entity_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"fullname": "personal_agent.core.AgentKnowledgeManager.add_relationship", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.add_relationship", "kind": "function", "doc": "<p>Add a relationship between entities.</p>\n\n<p>Args:\n    entity1: First entity name\n    relation: Relationship type\n    entity2: Second entity name\n    properties: Optional properties of the relationship</p>\n\n<p>Returns:\n    True if relationship was added successfully</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">entity1</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">relation</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">entity2</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"fullname": "personal_agent.core.AgentKnowledgeManager.get_relationships", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.get_relationships", "kind": "function", "doc": "<p>Get relationships, optionally filtered by entity or relation type.</p>\n\n<p>Args:\n    entity: Optional entity to filter by (either entity1 or entity2)\n    relation: Optional relation type to filter by</p>\n\n<p>Returns:\n    List of relationship objects</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">entity</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">relation</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"fullname": "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.clear_knowledge_base", "kind": "function", "doc": "<p>Clear the entire knowledge base.</p>\n\n<p>Returns:\n    True if knowledge base was cleared successfully</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"fullname": "personal_agent.core.AgentKnowledgeManager.sync_with_graph", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.sync_with_graph", "kind": "function", "doc": "<p>Synchronize the local knowledge base with the graph database.</p>\n\n<p>This method syncs entities and relationships from the local knowledge base\nto the LightRAG graph database.</p>\n\n<p>Returns:\n    Status message</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"fullname": "personal_agent.core.AgentKnowledgeManager.query_graph", "modulename": "personal_agent.core", "qualname": "AgentKnowledgeManager.query_graph", "kind": "function", "doc": "<p>Query the graph database.</p>\n\n<p>Args:\n    query: Cypher query</p>\n\n<p>Returns:\n    Query results</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager": {"fullname": "personal_agent.core.AgentMemoryManager", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager", "kind": "class", "doc": "<p>Manages memory operations including storage, retrieval, and updates.</p>\n"}, "personal_agent.core.AgentMemoryManager.__init__": {"fullname": "personal_agent.core.AgentMemoryManager.__init__", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.__init__", "kind": "function", "doc": "<p>Initialize the memory manager.</p>\n\n<p>Args:\n    user_id: User identifier for memory operations\n    storage_dir: Directory for storage files\n    agno_memory: Optional initialized agno memory instance\n    lightrag_url: Optional URL for LightRAG API\n    lightrag_memory_url: Optional URL for LightRAG Memory API\n    enable_memory: Whether memory is enabled</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">agno_memory</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lightrag_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lightrag_memory_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">enable_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "personal_agent.core.AgentMemoryManager.user_id": {"fullname": "personal_agent.core.AgentMemoryManager.user_id", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.user_id", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentMemoryManager.storage_dir": {"fullname": "personal_agent.core.AgentMemoryManager.storage_dir", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.storage_dir", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentMemoryManager.agno_memory": {"fullname": "personal_agent.core.AgentMemoryManager.agno_memory", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.agno_memory", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"fullname": "personal_agent.core.AgentMemoryManager.lightrag_url", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.lightrag_url", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"fullname": "personal_agent.core.AgentMemoryManager.lightrag_memory_url", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.lightrag_memory_url", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentMemoryManager.enable_memory": {"fullname": "personal_agent.core.AgentMemoryManager.enable_memory", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.enable_memory", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentMemoryManager.initialize": {"fullname": "personal_agent.core.AgentMemoryManager.initialize", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.initialize", "kind": "function", "doc": "<p>Initialize the memory manager with agno_memory.</p>\n\n<p>Args:\n    agno_memory: The initialized agno memory instance</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">agno_memory</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"fullname": "personal_agent.core.AgentMemoryManager.direct_search_memories", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.direct_search_memories", "kind": "function", "doc": "<p>Direct semantic search without agentic retrieval.</p>\n\n<p>Args:\n    query: The search query\n    limit: Maximum number of results to return\n    similarity_threshold: Minimum similarity score for results</p>\n\n<p>Returns:\n    List of memory results</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">similarity_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.3</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"fullname": "personal_agent.core.AgentMemoryManager.store_user_memory", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.store_user_memory", "kind": "function", "doc": "<p>Store information as a user memory in BOTH local SQLite and LightRAG graph systems.</p>\n\n<p>Args:\n    content: The information to store as a memory\n    topics: Optional list of topics/categories for the memory (None = auto-classify)</p>\n\n<p>Returns:\n    MemoryStorageResult: Structured result with detailed status information</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">semantic_memory_manager</span><span class=\"o\">.</span><span class=\"n\">MemoryStorageResult</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"fullname": "personal_agent.core.AgentMemoryManager.restate_user_fact", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.restate_user_fact", "kind": "function", "doc": "<p>Restate a user fact from first-person to third-person.</p>\n\n<p>This method converts statements like \"I have a PhD\" to \"{user_id} has a PhD\"\nto ensure correct entity mapping in the knowledge graph.</p>\n\n<p>Args:\n    content: The original fact from the user</p>\n\n<p>Returns:\n    The restated fact</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"fullname": "personal_agent.core.AgentMemoryManager.seed_entity_in_graph", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.seed_entity_in_graph", "kind": "function", "doc": "<p>Seed an entity into the graph by creating and uploading a physical file.</p>\n\n<p>Args:\n    entity_name: Name of the entity to create\n    entity_type: Type of the entity</p>\n\n<p>Returns:\n    True if entity was successfully seeded</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">entity_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">entity_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"fullname": "personal_agent.core.AgentMemoryManager.check_entity_exists", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.check_entity_exists", "kind": "function", "doc": "<p>Check if entity exists in the graph using the correct /graph/entity/exists endpoint.</p>\n\n<p>Args:\n    entity_name: Name of the entity to check</p>\n\n<p>Returns:\n    True if entity exists</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">entity_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"fullname": "personal_agent.core.AgentMemoryManager.clear_all_memories", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.clear_all_memories", "kind": "function", "doc": "<p>Clear all memories from both SQLite and LightRAG systems.</p>\n\n<p>This method provides a complete reset of the dual memory system by:</p>\n\n<ol>\n<li>Clearing all memories from the local SQLite database</li>\n<li>Clearing all documents from the LightRAG memory server</li>\n<li>Deleting the knowledge graph file</li>\n</ol>\n\n<p>Returns:\n    str: Success or error message</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.query_memory": {"fullname": "personal_agent.core.AgentMemoryManager.query_memory", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.query_memory", "kind": "function", "doc": "<p>Search user memories using direct SemanticMemoryManager calls.</p>\n\n<p>Args:\n    query: The query to search for in memories\n    limit: Maximum number of memories to return</p>\n\n<p>Returns:\n    str: Found memories or message if none found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.update_memory": {"fullname": "personal_agent.core.AgentMemoryManager.update_memory", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.update_memory", "kind": "function", "doc": "<p>Update an existing memory using direct SemanticMemoryManager calls.</p>\n\n<p>Args:\n    memory_id: ID of the memory to update\n    content: New memory content\n    topics: Optional list of topics/categories for the memory</p>\n\n<p>Returns:\n    str: Success or error message</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">memory_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.delete_memory": {"fullname": "personal_agent.core.AgentMemoryManager.delete_memory", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.delete_memory", "kind": "function", "doc": "<p>Delete a memory from both SQLite and LightRAG systems.</p>\n\n<p>Args:\n    memory_id: ID of the memory to delete</p>\n\n<p>Returns:\n    str: Success or error message</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">memory_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"fullname": "personal_agent.core.AgentMemoryManager.get_recent_memories", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.get_recent_memories", "kind": "function", "doc": "<p>Get recent memories by searching all memories and sorting by date.</p>\n\n<p>Args:\n    limit: Maximum number of memories to return</p>\n\n<p>Returns:\n    str: Formatted string of recent memories</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"fullname": "personal_agent.core.AgentMemoryManager.get_all_memories", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.get_all_memories", "kind": "function", "doc": "<p>Get all user memories.</p>\n\n<p>Returns:\n    str: Formatted string of all memories</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"fullname": "personal_agent.core.AgentMemoryManager.get_memory_stats", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.get_memory_stats", "kind": "function", "doc": "<p>Get memory statistics.</p>\n\n<p>Returns:\n    str: Formatted string with memory statistics</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"fullname": "personal_agent.core.AgentMemoryManager.get_memories_by_topic", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.get_memories_by_topic", "kind": "function", "doc": "<p>Get memories by topic without similarity search.</p>\n\n<p>Args:\n    topics: Topic or list of topics to filter memories by\n    limit: Maximum number of memories to return</p>\n\n<p>Returns:\n    str: Formatted string of memories matching the topics</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.list_memories": {"fullname": "personal_agent.core.AgentMemoryManager.list_memories", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.list_memories", "kind": "function", "doc": "<p>List all memories in a simple, user-friendly format.</p>\n\n<p>This method provides a more concise view of all memories compared to get_all_memories,\nfocusing on just the content and topics without additional metadata.</p>\n\n<p>PERFORMANCE OPTIMIZED: Returns raw memory data without interpretation instructions\nto avoid unnecessary LLM inference when user requests simple listing.</p>\n\n<p>Returns:\n    str: Simplified list of all memories without interpretation instructions</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"fullname": "personal_agent.core.AgentMemoryManager.store_graph_memory", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.store_graph_memory", "kind": "function", "doc": "<p>Store a memory in the LightRAG graph database to capture relationships.</p>\n\n<p>This method creates a text file with the memory content and uploads it to the LightRAG\nmemory server, which then processes it to extract entities and relationships.</p>\n\n<p>Args:\n    content: The memory content to store\n    topics: Optional list of topics/categories for the memory\n    memory_id: Optional memory ID to link with the SQLite memory</p>\n\n<p>Returns:\n    str: Success or error message</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">memory_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"fullname": "personal_agent.core.AgentMemoryManager.query_graph_memory", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.query_graph_memory", "kind": "function", "doc": "<p>Query the LightRAG memory graph to explore relationships between memories.</p>\n\n<p>This method sends a query to the LightRAG memory server to retrieve memories and their\nrelationships based on the query. It supports different query modes and response formats.</p>\n\n<p>Args:\n    query: The query to search for in the memory graph\n    mode: Query mode - \"semantic\" (vector search), \"graph\" (graph traversal), or \"mix\" (combined)\n    top_k: Maximum number of results to return\n    response_type: Format of the response - \"Multiple Paragraphs\", \"Single Paragraph\", etc.</p>\n\n<p>Returns:\n    dict: Query results with memories and their relationships</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mix&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">top_k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">response_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Multiple Paragraphs&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"fullname": "personal_agent.core.AgentMemoryManager.get_memory_graph_labels", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.get_memory_graph_labels", "kind": "function", "doc": "<p>Get the list of all entity and relation labels from the memory graph.</p>\n\n<p>This method retrieves all entity and relation labels from the LightRAG memory graph,\nproviding insights into the types of information stored in the graph.</p>\n\n<p>Returns:\n    str: Formatted string with entity and relation labels</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"fullname": "personal_agent.core.AgentMemoryManager.delete_memories_by_topic", "modulename": "personal_agent.core", "qualname": "AgentMemoryManager.delete_memories_by_topic", "kind": "function", "doc": "<p>Delete all memories associated with a specific topic or list of topics from both local and graph memory.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AgentModelManager": {"fullname": "personal_agent.core.AgentModelManager", "modulename": "personal_agent.core", "qualname": "AgentModelManager", "kind": "class", "doc": "<p>Manages model creation and configuration.</p>\n"}, "personal_agent.core.AgentModelManager.__init__": {"fullname": "personal_agent.core.AgentModelManager.__init__", "modulename": "personal_agent.core", "qualname": "AgentModelManager.__init__", "kind": "function", "doc": "<p>Initialize the model manager.</p>\n\n<p>Args:\n    model_provider: LLM provider ('ollama' or 'openai')\n    model_name: Model name to use\n    ollama_base_url: Base URL for Ollama API\n    seed: Optional seed for model reproducibility</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "personal_agent.core.AgentModelManager.model_provider": {"fullname": "personal_agent.core.AgentModelManager.model_provider", "modulename": "personal_agent.core", "qualname": "AgentModelManager.model_provider", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentModelManager.model_name": {"fullname": "personal_agent.core.AgentModelManager.model_name", "modulename": "personal_agent.core", "qualname": "AgentModelManager.model_name", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentModelManager.ollama_base_url": {"fullname": "personal_agent.core.AgentModelManager.ollama_base_url", "modulename": "personal_agent.core", "qualname": "AgentModelManager.ollama_base_url", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentModelManager.seed": {"fullname": "personal_agent.core.AgentModelManager.seed", "modulename": "personal_agent.core", "qualname": "AgentModelManager.seed", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AgentModelManager.create_model": {"fullname": "personal_agent.core.AgentModelManager.create_model", "modulename": "personal_agent.core", "qualname": "AgentModelManager.create_model", "kind": "function", "doc": "<p>Create the appropriate model instance based on provider.</p>\n\n<p>Returns:\n    Configured model instance (uses regular Ollama for Qwen3 compatibility)</p>\n\n<p>Raises:\n    ValueError: If unsupported model provider is specified</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">openai</span><span class=\"o\">.</span><span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">OpenAIChat</span><span class=\"p\">,</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ollama</span><span class=\"o\">.</span><span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">Ollama</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.MultiAgentSystem": {"fullname": "personal_agent.core.MultiAgentSystem", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem", "kind": "class", "doc": "<p>Multi-agent system with specialized tools for different domains.</p>\n\n<p>This system uses CodeAgent as a coordinator with all tools available directly:</p>\n\n<ul>\n<li>Filesystem operations: File reading, writing, directory listing</li>\n<li>Research operations: Web search, GitHub search, comprehensive research</li>\n<li>Memory operations: Knowledge base storage and retrieval</li>\n<li>System operations: Shell commands and system tasks</li>\n</ul>\n"}, "personal_agent.core.MultiAgentSystem.__init__": {"fullname": "personal_agent.core.MultiAgentSystem.__init__", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem.__init__", "kind": "function", "doc": "<p>Initialize the multi-agent system.</p>\n\n<p>Args:\n    mcp_client: MCP client instance for tool functionality\n    weaviate_client: Weaviate client for memory functionality\n    vector_store: Vector store for memory operations\n    model: Optional LiteLLM model instance</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">mcp_client</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">weaviate_client</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vector_store</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">smolagents</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">LiteLLMModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "personal_agent.core.MultiAgentSystem.model": {"fullname": "personal_agent.core.MultiAgentSystem.model", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem.model", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.MultiAgentSystem.mcp_client": {"fullname": "personal_agent.core.MultiAgentSystem.mcp_client", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem.mcp_client", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"fullname": "personal_agent.core.MultiAgentSystem.weaviate_client", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem.weaviate_client", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.MultiAgentSystem.vector_store": {"fullname": "personal_agent.core.MultiAgentSystem.vector_store", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem.vector_store", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.MultiAgentSystem.tool_groups": {"fullname": "personal_agent.core.MultiAgentSystem.tool_groups", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem.tool_groups", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.MultiAgentSystem.agent": {"fullname": "personal_agent.core.MultiAgentSystem.agent", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem.agent", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.MultiAgentSystem.run": {"fullname": "personal_agent.core.MultiAgentSystem.run", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem.run", "kind": "function", "doc": "<p>Process a query using the multi-agent system.</p>\n\n<p>Args:\n    query: User query to process</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Response from the coordinated agent system</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"fullname": "personal_agent.core.MultiAgentSystem.get_agent_info", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem.get_agent_info", "kind": "function", "doc": "<p>Get information about all available tool groups.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Dictionary with tool group names and descriptions</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"fullname": "personal_agent.core.MultiAgentSystem.list_available_tools", "modulename": "personal_agent.core", "qualname": "MultiAgentSystem.list_available_tools", "kind": "function", "doc": "<p>List all tools available across all groups.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>List of tool names</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_multi_agent_system": {"fullname": "personal_agent.core.create_multi_agent_system", "modulename": "personal_agent.core", "qualname": "create_multi_agent_system", "kind": "function", "doc": "<p>Create and configure the multi-agent system.</p>\n\n<p>Args:\n    mcp_client: MCP client instance for tool functionality\n    weaviate_client: Weaviate client for memory functionality\n    vector_store: Vector store for memory operations\n    model: Optional LiteLLM model instance</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured MultiAgentSystem instance</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">mcp_client</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">weaviate_client</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vector_store</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">smolagents</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">LiteLLMModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">multi_agent_system</span><span class=\"o\">.</span><span class=\"n\">MultiAgentSystem</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_smolagents_executor": {"fullname": "personal_agent.core.create_smolagents_executor", "modulename": "personal_agent.core", "qualname": "create_smolagents_executor", "kind": "function", "doc": "<p>Create smolagents CodeAgent with all tools and dependencies.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mcp_client</strong>:  MCP client instance for tool functionality</li>\n<li><strong>weaviate_client</strong>:  Weaviate client for memory functionality</li>\n<li><strong>vector_store</strong>:  Vector store for memory operations</li>\n<li><strong>tools</strong>:  Optional custom list of tools (uses ALL_TOOLS by default)</li>\n<li><strong>model</strong>:  Optional LiteLLM model instance</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured CodeAgent</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">mcp_client</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">weaviate_client</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vector_store</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tools</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">smolagents</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">LiteLLMModel</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">smolagents</span><span class=\"o\">.</span><span class=\"n\">agents</span><span class=\"o\">.</span><span class=\"n\">CodeAgent</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_smolagents_model": {"fullname": "personal_agent.core.create_smolagents_model", "modulename": "personal_agent.core", "qualname": "create_smolagents_model", "kind": "function", "doc": "<p>Create LiteLLM model for Ollama integration.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured LiteLLM model instance</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">smolagents</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">LiteLLMModel</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_agno_storage": {"fullname": "personal_agent.core.create_agno_storage", "modulename": "personal_agent.core", "qualname": "create_agno_storage", "kind": "function", "doc": "<p>Create SQLite storage for agent sessions.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>storage_dir</strong>:  Directory for storage files (defaults to DATA_DIR/agno)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured SQLite storage instance</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">sqlite</span><span class=\"o\">.</span><span class=\"n\">SqliteStorage</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_agno_memory": {"fullname": "personal_agent.core.create_agno_memory", "modulename": "personal_agent.core", "qualname": "create_agno_memory", "kind": "function", "doc": "<p>Create Memory instance with SemanticMemoryManager for LLM-free memory management.</p>\n\n<p>Uses the advanced SemanticMemoryManager that provides intelligent duplicate detection,\nautomatic topic classification, and semantic search capabilities without requiring\nLLM calls for memory operations.</p>\n\n<p>Features:</p>\n\n<ul>\n<li>LLM-free semantic duplicate detection (similarity threshold: 0.8)</li>\n<li>Automatic topic classification using rule-based patterns</li>\n<li>Enhanced semantic search with topic matching</li>\n<li>Memory deletion and clearing capabilities</li>\n<li>Rich memory statistics and analytics</li>\n<li>Debug mode for detailed logging</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>storage_dir</strong>:  Directory for storage files (defaults to DATA_DIR/agno)</li>\n<li><strong>debug_mode</strong>:  Enable debug logging for memory operations</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured Memory instance with SemanticMemoryManager</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">debug_mode</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">Memory</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_combined_knowledge_base": {"fullname": "personal_agent.core.create_combined_knowledge_base", "modulename": "personal_agent.core", "qualname": "create_combined_knowledge_base", "kind": "function", "doc": "<p>Create a combined knowledge base with text and PDF sources (synchronous creation).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>storage_dir</strong>:  Directory for storage files (defaults to DATA_DIR/agno)</li>\n<li><strong>knowledge_dir</strong>:  Directory containing knowledge files to load (defaults to DATA_DIR/knowledge)</li>\n<li><strong>db_url</strong>:  SqliteStorage for the database</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured CombinedKnowledgeBase instance or None if no knowledge found</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">knowledge_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">db_url</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">sqlite</span><span class=\"o\">.</span><span class=\"n\">SqliteStorage</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">knowledge</span><span class=\"o\">.</span><span class=\"n\">combined</span><span class=\"o\">.</span><span class=\"n\">CombinedKnowledgeBase</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.load_combined_knowledge_base": {"fullname": "personal_agent.core.load_combined_knowledge_base", "modulename": "personal_agent.core", "qualname": "load_combined_knowledge_base", "kind": "function", "doc": "<p>Load combined knowledge base content (async loading).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>knowledge_base</strong>:  CombinedKnowledgeBase instance to load</li>\n<li><strong>recreate</strong>:  Whether to recreate the knowledge base from scratch</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">knowledge_base</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">knowledge</span><span class=\"o\">.</span><span class=\"n\">combined</span><span class=\"o\">.</span><span class=\"n\">CombinedKnowledgeBase</span>,</span><span class=\"param\">\t<span class=\"n\">recreate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.load_lightrag_knowledge_base": {"fullname": "personal_agent.core.load_lightrag_knowledge_base", "modulename": "personal_agent.core", "qualname": "load_lightrag_knowledge_base", "kind": "function", "doc": "<p>Load the LightRAG knowledge base metadata.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>base_url</strong>:  Base URL for the LightRAG server</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Dictionary with knowledge base status/info</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:9621&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.AntiDuplicateMemory": {"fullname": "personal_agent.core.AntiDuplicateMemory", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory", "kind": "class", "doc": "<p>Enhanced Memory class that prevents duplicate memory creation.</p>\n\n<p>This class extends Agno's Memory class with intelligent duplicate detection\nand prevention mechanisms specifically designed to address the memory\nduplication issues found in Ollama models.</p>\n", "bases": "agno.memory.v2.memory.Memory"}, "personal_agent.core.AntiDuplicateMemory.__init__": {"fullname": "personal_agent.core.AntiDuplicateMemory.__init__", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.__init__", "kind": "function", "doc": "<p>Initialize the anti-duplicate memory manager.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>model</strong>:  Model for memory operations</li>\n<li><strong>similarity_threshold</strong>:  Threshold for semantic similarity (0.0-1.0)</li>\n<li><strong>enable_semantic_dedup</strong>:  Enable semantic duplicate detection</li>\n<li><strong>enable_exact_dedup</strong>:  Enable exact duplicate detection</li>\n<li><strong>debug_mode</strong>:  Enable debug logging</li>\n<li><strong>delete_memories</strong>:  Allow the agent to delete memories when needed</li>\n<li><strong>clear_memories</strong>:  Allow the agent to clear all memories</li>\n<li><strong>enable_optimizations</strong>:  Enable performance optimizations using direct read_memories calls</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">similarity_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">enable_semantic_dedup</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">enable_exact_dedup</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">debug_mode</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">delete_memories</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">clear_memories</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">enable_optimizations</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"fullname": "personal_agent.core.AntiDuplicateMemory.similarity_threshold", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.similarity_threshold", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"fullname": "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.enable_semantic_dedup", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"fullname": "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.enable_exact_dedup", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AntiDuplicateMemory.debug_mode": {"fullname": "personal_agent.core.AntiDuplicateMemory.debug_mode", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.debug_mode", "kind": "variable", "doc": "<p></p>\n", "default_value": "False"}, "personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"fullname": "personal_agent.core.AntiDuplicateMemory.enable_optimizations", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.enable_optimizations", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"fullname": "personal_agent.core.AntiDuplicateMemory.add_user_memory", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.add_user_memory", "kind": "function", "doc": "<p>Add a user memory with duplicate prevention.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>memory</strong>:  UserMemory object to add</li>\n<li><strong>user_id</strong>:  User ID for the memory</li>\n<li><strong>refresh_from_db</strong>:  Whether to refresh from database before adding</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Memory ID if added, None if rejected</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">memory</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">UserMemory</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">refresh_from_db</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"fullname": "personal_agent.core.AntiDuplicateMemory.create_user_memories", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.create_user_memories", "kind": "function", "doc": "<p>Create user memories from messages with duplicate prevention.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>message</strong>:  Single message to create memories from</li>\n<li><strong>messages</strong>:  List of messages to create memories from</li>\n<li><strong>user_id</strong>:  User ID for the memories</li>\n<li><strong>refresh_from_db</strong>:  Whether to refresh from database before creating</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>List of successfully created memories</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">messages</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">refresh_from_db</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">UserMemory</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"fullname": "personal_agent.core.AntiDuplicateMemory.delete_user_memory", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.delete_user_memory", "kind": "function", "doc": "<p>Delete a specific user memory.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>memory_id</strong>:  ID of the memory to delete</li>\n<li><strong>user_id</strong>:  User ID for the memory</li>\n<li><strong>refresh_from_db</strong>:  Whether to refresh from database before deleting</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">memory_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">refresh_from_db</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"fullname": "personal_agent.core.AntiDuplicateMemory.get_memory_stats", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.get_memory_stats", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"fullname": "personal_agent.core.AntiDuplicateMemory.print_memory_analysis", "modulename": "personal_agent.core", "qualname": "AntiDuplicateMemory.print_memory_analysis", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.core.create_anti_duplicate_memory": {"fullname": "personal_agent.core.create_anti_duplicate_memory", "modulename": "personal_agent.core", "qualname": "create_anti_duplicate_memory", "kind": "function", "doc": "<p>Create an AntiDuplicateMemory instance with sensible defaults.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>model</strong>:  Model for memory operations</li>\n<li><strong>similarity_threshold</strong>:  Threshold for semantic similarity</li>\n<li><strong>debug_mode</strong>:  Enable debug output</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured AntiDuplicateMemory instance</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">db</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">similarity_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">debug_mode</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">anti_duplicate_memory</span><span class=\"o\">.</span><span class=\"n\">AntiDuplicateMemory</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager": {"fullname": "personal_agent.core.SemanticMemoryManager", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager", "kind": "class", "doc": "<p>Semantic Memory Manager that provides LLM-free memory management.</p>\n\n<p>This manager combines the structure of Agno's MemoryManager with semantic search\nand duplicate detection capabilities, without requiring LLM invocation.</p>\n"}, "personal_agent.core.SemanticMemoryManager.__init__": {"fullname": "personal_agent.core.SemanticMemoryManager.__init__", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.__init__", "kind": "function", "doc": "<p>Initialize the Semantic Memory Manager.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">semantic_memory_manager</span><span class=\"o\">.</span><span class=\"n\">SemanticMemoryManagerConfig</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">similarity_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">enable_semantic_dedup</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">enable_exact_dedup</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">enable_topic_classification</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">debug_mode</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "personal_agent.core.SemanticMemoryManager.model": {"fullname": "personal_agent.core.SemanticMemoryManager.model", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[agno.models.base.Model]", "default_value": "FieldInfo(annotation=NoneType, required=False, default=None)"}, "personal_agent.core.SemanticMemoryManager.config": {"fullname": "personal_agent.core.SemanticMemoryManager.config", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.config", "kind": "variable", "doc": "<p></p>\n", "annotation": ": personal_agent.core.semantic_memory_manager.SemanticMemoryManagerConfig", "default_value": "FieldInfo(annotation=NoneType, required=False, default_factory=SemanticMemoryManagerConfig)"}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"fullname": "personal_agent.core.SemanticMemoryManager.topic_classifier", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.topic_classifier", "kind": "variable", "doc": "<p></p>\n", "annotation": ": personal_agent.core.topic_classifier.TopicClassifier", "default_value": "FieldInfo(annotation=NoneType, required=False, default_factory=TopicClassifier)"}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"fullname": "personal_agent.core.SemanticMemoryManager.duplicate_detector", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.duplicate_detector", "kind": "variable", "doc": "<p></p>\n", "annotation": ": personal_agent.core.semantic_memory_manager.SemanticDuplicateDetector", "default_value": "FieldInfo(annotation=NoneType, required=False, default=None)"}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"fullname": "personal_agent.core.SemanticMemoryManager.memories_updated", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.memories_updated", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "FieldInfo(annotation=NoneType, required=False, default=False)"}, "personal_agent.core.SemanticMemoryManager.add_memory": {"fullname": "personal_agent.core.SemanticMemoryManager.add_memory", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.add_memory", "kind": "function", "doc": "<p>Add a memory with duplicate detection and topic classification.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>memory_text</strong>:  The memory text to add</li>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>user_id</strong>:  User ID for the memory</li>\n<li><strong>topics</strong>:  Optional list of topics (will be auto-classified if not provided)</li>\n<li><strong>input_text</strong>:  Optional input text that generated this memory</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>MemoryStorageResult with detailed status information</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">memory_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_text</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">semantic_memory_manager</span><span class=\"o\">.</span><span class=\"n\">MemoryStorageResult</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.update_memory": {"fullname": "personal_agent.core.SemanticMemoryManager.update_memory", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.update_memory", "kind": "function", "doc": "<p>Update an existing memory.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>memory_id</strong>:  ID of the memory to update</li>\n<li><strong>memory_text</strong>:  New memory text</li>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>user_id</strong>:  User ID for the memory</li>\n<li><strong>topics</strong>:  Optional list of topics (will be auto-classified if not provided)</li>\n<li><strong>input_text</strong>:  Optional input text that generated this memory</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Tuple of (success, message)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">memory_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">memory_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_text</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"fullname": "personal_agent.core.SemanticMemoryManager.delete_memory", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.delete_memory", "kind": "function", "doc": "<p>Delete a memory.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>memory_id</strong>:  ID of the memory to delete</li>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>user_id</strong>:  User ID for the memory</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Tuple of (success, message)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">memory_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"fullname": "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.delete_memories_by_topic", "kind": "function", "doc": "<p>Delete all memories associated with a specific topic or list of topics.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topics</strong>:  A list of topics to delete memories for.</li>\n<li><strong>db</strong>:  Memory database instance.</li>\n<li><strong>user_id</strong>:  User ID for the memories.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Tuple of (success, message).</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"fullname": "personal_agent.core.SemanticMemoryManager.clear_memories", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.clear_memories", "kind": "function", "doc": "<p>Clear all memories for a user.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>user_id</strong>:  User ID for the memories</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Tuple of (success, message)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.search_memories": {"fullname": "personal_agent.core.SemanticMemoryManager.search_memories", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.search_memories", "kind": "function", "doc": "<p>Search memories using semantic similarity and topic matching with enhanced query expansion.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query</strong>:  Search query</li>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>user_id</strong>:  User ID to search within</li>\n<li><strong>limit</strong>:  Maximum number of results</li>\n<li><strong>similarity_threshold</strong>:  Minimum similarity threshold for content</li>\n<li><strong>search_topics: Whether to include topic search (default</strong>:  True)</li>\n<li><strong>topic_boost: Score boost for topic matches (default</strong>:  0.5)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>List of (UserMemory, combined_score) tuples</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">similarity_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.3</span>,</span><span class=\"param\">\t<span class=\"n\">search_topics</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">topic_boost</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">UserMemory</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"fullname": "personal_agent.core.SemanticMemoryManager.get_memories_by_topic", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.get_memories_by_topic", "kind": "function", "doc": "<p>Get memories filtered by a list of topics, without similarity search.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>user_id</strong>:  User ID to search within</li>\n<li><strong>topics</strong>:  Optional list of topics to filter by. If None, returns all memories.</li>\n<li><strong>limit</strong>:  Maximum number of results to return</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>List of UserMemory objects matching the topics.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">UserMemory</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"fullname": "personal_agent.core.SemanticMemoryManager.get_all_memories", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.get_all_memories", "kind": "function", "doc": "<p>Get all memories for a user.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>user_id</strong>:  User ID to retrieve memories for</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>List of UserMemory objects</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">UserMemory</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"fullname": "personal_agent.core.SemanticMemoryManager.get_memory_stats", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.get_memory_stats", "kind": "function", "doc": "<p>Get statistics about memories for a user.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>user_id</strong>:  User ID to analyze</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Dictionary with memory statistics</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.process_input": {"fullname": "personal_agent.core.SemanticMemoryManager.process_input", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.process_input", "kind": "function", "doc": "<p>Process input text and extract memories without using LLM.</p>\n\n<p>This method uses simple heuristics to determine if the input contains\nmemorable information and extracts it accordingly.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>input_text</strong>:  Input text to process</li>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>user_id</strong>:  User ID for the memories</li>\n<li><strong>extract_multiple</strong>:  Whether to try extracting multiple memories from input</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Dictionary with processing results</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">input_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">extract_multiple</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"fullname": "personal_agent.core.SemanticMemoryManager.create_or_update_memories", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.create_or_update_memories", "kind": "function", "doc": "<p>Create or update memories based on messages - LLM-free implementation.</p>\n\n<p>This method provides the same interface as Agno's MemoryManager but uses\nsemantic analysis instead of LLM calls for better performance and reliability.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>messages</strong>:  List of Message objects to process</li>\n<li><strong>existing_memories</strong>:  List of existing memory dictionaries</li>\n<li><strong>user_id</strong>:  User ID for the memories</li>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>delete_memories</strong>:  Whether deletion is enabled (not used in our implementation)</li>\n<li><strong>clear_memories</strong>:  Whether clearing is enabled (not used in our implementation)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>String describing the actions taken</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">messages</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">existing_memories</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">delete_memories</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">clear_memories</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"fullname": "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.acreate_or_update_memories", "kind": "function", "doc": "<p>Async version of create_or_update_memories.</p>\n\n<p>Since our implementation doesn't use async operations, this just calls\nthe sync version. This maintains compatibility with Agno's async interface.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">messages</span><span class=\"p\">:</span> <span class=\"n\">List</span>,</span><span class=\"param\">\t<span class=\"n\">existing_memories</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">delete_memories</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">clear_memories</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"fullname": "personal_agent.core.SemanticMemoryManager.run_memory_task", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.run_memory_task", "kind": "function", "doc": "<p>Process a memory task without using LLM.</p>\n\n<p>This method provides the same interface as Agno's MemoryManager.run_memory_task\nbut uses semantic analysis instead of LLM calls for better performance and reliability.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>task</strong>:  The task/input text to process for memory extraction</li>\n<li><strong>existing_memories</strong>:  List of existing memory dictionaries</li>\n<li><strong>user_id</strong>:  User ID for the memories</li>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>delete_memories</strong>:  Whether deletion is enabled (not used in our implementation)</li>\n<li><strong>clear_memories</strong>:  Whether clearing is enabled (not used in our implementation)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>String describing the actions taken</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">existing_memories</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">delete_memories</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">clear_memories</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"fullname": "personal_agent.core.SemanticMemoryManager.arun_memory_task", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManager.arun_memory_task", "kind": "function", "doc": "<p>Async version of run_memory_task.</p>\n\n<p>Since our implementation doesn't use async operations, this just calls\nthe sync version. This maintains compatibility with Agno's async interface.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>task</strong>:  The task/input text to process for memory extraction</li>\n<li><strong>existing_memories</strong>:  List of existing memory dictionaries</li>\n<li><strong>user_id</strong>:  User ID for the memories</li>\n<li><strong>db</strong>:  Memory database instance</li>\n<li><strong>delete_memories</strong>:  Whether deletion is enabled (not used in our implementation)</li>\n<li><strong>clear_memories</strong>:  Whether clearing is enabled (not used in our implementation)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>String describing the actions taken</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">existing_memories</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"o\">.</span><span class=\"n\">v2</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">MemoryDb</span>,</span><span class=\"param\">\t<span class=\"n\">delete_memories</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">clear_memories</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.SemanticMemoryManagerConfig": {"fullname": "personal_agent.core.SemanticMemoryManagerConfig", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManagerConfig", "kind": "class", "doc": "<p>Configuration for the Semantic Memory Manager.</p>\n", "bases": "pydantic.main.BaseModel"}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"fullname": "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManagerConfig.similarity_threshold", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"fullname": "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManagerConfig.enable_semantic_dedup", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"fullname": "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManagerConfig.enable_exact_dedup", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"fullname": "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManagerConfig.enable_topic_classification", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"fullname": "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManagerConfig.max_memory_length", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"fullname": "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManagerConfig.recent_memory_limit", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"fullname": "personal_agent.core.SemanticMemoryManagerConfig.debug_mode", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManagerConfig.debug_mode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"fullname": "personal_agent.core.SemanticMemoryManagerConfig.model_config", "modulename": "personal_agent.core", "qualname": "SemanticMemoryManagerConfig.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "personal_agent.core.SemanticDuplicateDetector": {"fullname": "personal_agent.core.SemanticDuplicateDetector", "modulename": "personal_agent.core", "qualname": "SemanticDuplicateDetector", "kind": "class", "doc": "<p>Semantic duplicate detection without LLM using advanced text similarity.</p>\n"}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"fullname": "personal_agent.core.SemanticDuplicateDetector.__init__", "modulename": "personal_agent.core", "qualname": "SemanticDuplicateDetector.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">similarity_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span></span>)</span>"}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"fullname": "personal_agent.core.SemanticDuplicateDetector.similarity_threshold", "modulename": "personal_agent.core", "qualname": "SemanticDuplicateDetector.similarity_threshold", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"fullname": "personal_agent.core.SemanticDuplicateDetector.is_duplicate", "modulename": "personal_agent.core", "qualname": "SemanticDuplicateDetector.is_duplicate", "kind": "function", "doc": "<p>Check if new text is a duplicate of any existing texts.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>new_text</strong>:  New text to check</li>\n<li><strong>existing_texts</strong>:  List of existing texts to compare against</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Tuple of (is_duplicate, matching_text, similarity_score)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">new_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">existing_texts</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_semantic_memory_manager": {"fullname": "personal_agent.core.create_semantic_memory_manager", "modulename": "personal_agent.core", "qualname": "create_semantic_memory_manager", "kind": "function", "doc": "<p>Create a SemanticMemoryManager instance with sensible defaults.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model</strong>:  Optional model instance (required by Agno Memory class)</li>\n<li><strong>similarity_threshold</strong>:  Threshold for semantic similarity</li>\n<li><strong>enable_semantic_dedup</strong>:  Enable semantic duplicate detection</li>\n<li><strong>enable_exact_dedup</strong>:  Enable exact duplicate detection</li>\n<li><strong>enable_topic_classification</strong>:  Enable automatic topic classification</li>\n<li><strong>debug_mode</strong>:  Enable debug output</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured SemanticMemoryManager instance</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">similarity_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">enable_semantic_dedup</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">enable_exact_dedup</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">enable_topic_classification</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">debug_mode</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">semantic_memory_manager</span><span class=\"o\">.</span><span class=\"n\">SemanticMemoryManager</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.KnowledgeCoordinator": {"fullname": "personal_agent.core.KnowledgeCoordinator", "modulename": "personal_agent.core", "qualname": "KnowledgeCoordinator", "kind": "class", "doc": "<p>Coordinates queries between local semantic search and LightRAG graph systems.</p>\n\n<p>This class implements the Knowledge Coordinator shown in the architecture diagram,\nproviding intelligent routing based on mode parameters and query analysis.</p>\n"}, "personal_agent.core.KnowledgeCoordinator.__init__": {"fullname": "personal_agent.core.KnowledgeCoordinator.__init__", "modulename": "personal_agent.core", "qualname": "KnowledgeCoordinator.__init__", "kind": "function", "doc": "<p>Initialize the Knowledge Coordinator.</p>\n\n<p>Args:\n    agno_knowledge: Local semantic knowledge base (SQLite/LanceDB)\n    lightrag_url: URL for LightRAG server\n    debug: Enable debug logging</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agno_knowledge</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lightrag_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:9621&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"fullname": "personal_agent.core.KnowledgeCoordinator.agno_knowledge", "modulename": "personal_agent.core", "qualname": "KnowledgeCoordinator.agno_knowledge", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"fullname": "personal_agent.core.KnowledgeCoordinator.lightrag_url", "modulename": "personal_agent.core", "qualname": "KnowledgeCoordinator.lightrag_url", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.KnowledgeCoordinator.debug": {"fullname": "personal_agent.core.KnowledgeCoordinator.debug", "modulename": "personal_agent.core", "qualname": "KnowledgeCoordinator.debug", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.KnowledgeCoordinator.routing_stats": {"fullname": "personal_agent.core.KnowledgeCoordinator.routing_stats", "modulename": "personal_agent.core", "qualname": "KnowledgeCoordinator.routing_stats", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"fullname": "personal_agent.core.KnowledgeCoordinator.query_knowledge_base", "modulename": "personal_agent.core", "qualname": "KnowledgeCoordinator.query_knowledge_base", "kind": "function", "doc": "<p>Unified knowledge base query with intelligent routing.</p>\n\n<p>This is the main entry point for all knowledge queries. It intelligently\nroutes queries between local semantic search and LightRAG based on the\nmode parameter and query characteristics.</p>\n\n<p>Args:\n    query: The search query\n    mode: Routing mode:\n          - \"local\": Force local semantic search\n          - \"global\", \"hybrid\", \"mix\", \"naive\", \"bypass\": Use LightRAG\n          - \"auto\": Intelligent auto-detection (default)\n    limit: Maximum results for local search / top_k for LightRAG\n    response_type: Format for LightRAG responses</p>\n\n<p>Returns:\n    Formatted search results from the appropriate knowledge system</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;auto&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">response_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Multiple Paragraphs&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"fullname": "personal_agent.core.KnowledgeCoordinator.get_routing_stats", "modulename": "personal_agent.core", "qualname": "KnowledgeCoordinator.get_routing_stats", "kind": "function", "doc": "<p>Get statistics about query routing decisions.</p>\n\n<p>Returns:\n    Dictionary with routing statistics</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"fullname": "personal_agent.core.KnowledgeCoordinator.reset_stats", "modulename": "personal_agent.core", "qualname": "KnowledgeCoordinator.reset_stats", "kind": "function", "doc": "<p>Reset routing statistics.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_knowledge_coordinator": {"fullname": "personal_agent.core.create_knowledge_coordinator", "modulename": "personal_agent.core", "qualname": "create_knowledge_coordinator", "kind": "function", "doc": "<p>Create a Knowledge Coordinator instance.</p>\n\n<p>Args:\n    agno_knowledge: Local semantic knowledge base\n    lightrag_url: URL for LightRAG server\n    debug: Enable debug logging</p>\n\n<p>Returns:\n    Configured KnowledgeCoordinator instance</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">agno_knowledge</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lightrag_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:9621&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">knowledge_coordinator</span><span class=\"o\">.</span><span class=\"n\">KnowledgeCoordinator</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.extract_entities": {"fullname": "personal_agent.core.extract_entities", "modulename": "personal_agent.core", "qualname": "extract_entities", "kind": "function", "doc": "<p>Extracts meaningful named entities from text using spaCy with filtering.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.extract_relationships": {"fullname": "personal_agent.core.extract_relationships", "modulename": "personal_agent.core", "qualname": "extract_relationships", "kind": "function", "doc": "<p>Extracts meaningful subject-verb-object relationships from text using spaCy's dependency parser.\nThis version includes improved coreference resolution, entity linking, and relationship filtering.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.StructuredResponse": {"fullname": "personal_agent.core.StructuredResponse", "modulename": "personal_agent.core", "qualname": "StructuredResponse", "kind": "class", "doc": "<p>Complete structured response from the agent.</p>\n"}, "personal_agent.core.StructuredResponse.__init__": {"fullname": "personal_agent.core.StructuredResponse.__init__", "modulename": "personal_agent.core", "qualname": "StructuredResponse.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tool_calls</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">structured_response</span><span class=\"o\">.</span><span class=\"n\">ToolCall</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">structured_response</span><span class=\"o\">.</span><span class=\"n\">ResponseMetadata</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">structured_response</span><span class=\"o\">.</span><span class=\"n\">ResponseError</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "personal_agent.core.StructuredResponse.content": {"fullname": "personal_agent.core.StructuredResponse.content", "modulename": "personal_agent.core", "qualname": "StructuredResponse.content", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "personal_agent.core.StructuredResponse.tool_calls": {"fullname": "personal_agent.core.StructuredResponse.tool_calls", "modulename": "personal_agent.core", "qualname": "StructuredResponse.tool_calls", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[personal_agent.core.structured_response.ToolCall]"}, "personal_agent.core.StructuredResponse.metadata": {"fullname": "personal_agent.core.StructuredResponse.metadata", "modulename": "personal_agent.core", "qualname": "StructuredResponse.metadata", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[personal_agent.core.structured_response.ResponseMetadata]", "default_value": "None"}, "personal_agent.core.StructuredResponse.error": {"fullname": "personal_agent.core.StructuredResponse.error", "modulename": "personal_agent.core", "qualname": "StructuredResponse.error", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[personal_agent.core.structured_response.ResponseError]", "default_value": "None"}, "personal_agent.core.StructuredResponse.has_tool_calls": {"fullname": "personal_agent.core.StructuredResponse.has_tool_calls", "modulename": "personal_agent.core", "qualname": "StructuredResponse.has_tool_calls", "kind": "variable", "doc": "<p>Check if response contains tool calls.</p>\n", "annotation": ": bool"}, "personal_agent.core.StructuredResponse.tool_calls_count": {"fullname": "personal_agent.core.StructuredResponse.tool_calls_count", "modulename": "personal_agent.core", "qualname": "StructuredResponse.tool_calls_count", "kind": "variable", "doc": "<p>Get number of tool calls.</p>\n", "annotation": ": int"}, "personal_agent.core.StructuredResponseParser": {"fullname": "personal_agent.core.StructuredResponseParser", "modulename": "personal_agent.core", "qualname": "StructuredResponseParser", "kind": "class", "doc": "<p>Parser for converting JSON responses to StructuredResponse objects.</p>\n"}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"fullname": "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA", "modulename": "personal_agent.core", "qualname": "StructuredResponseParser.RESPONSE_SCHEMA", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;type&#x27;: &#x27;object&#x27;, &#x27;properties&#x27;: {&#x27;content&#x27;: {&#x27;type&#x27;: &#x27;string&#x27;, &#x27;description&#x27;: &#x27;Main response content for the user&#x27;}, &#x27;tool_calls&#x27;: {&#x27;type&#x27;: &#x27;array&#x27;, &#x27;items&#x27;: {&#x27;type&#x27;: &#x27;object&#x27;, &#x27;properties&#x27;: {&#x27;function_name&#x27;: {&#x27;type&#x27;: &#x27;string&#x27;}, &#x27;arguments&#x27;: {&#x27;type&#x27;: &#x27;object&#x27;}, &#x27;reasoning&#x27;: {&#x27;type&#x27;: &#x27;string&#x27;}}, &#x27;required&#x27;: [&#x27;function_name&#x27;, &#x27;arguments&#x27;]}}, &#x27;metadata&#x27;: {&#x27;type&#x27;: &#x27;object&#x27;, &#x27;properties&#x27;: {&#x27;confidence&#x27;: {&#x27;type&#x27;: &#x27;number&#x27;, &#x27;minimum&#x27;: 0, &#x27;maximum&#x27;: 1}, &#x27;sources&#x27;: {&#x27;type&#x27;: &#x27;array&#x27;, &#x27;items&#x27;: {&#x27;type&#x27;: &#x27;string&#x27;}}, &#x27;reasoning_steps&#x27;: {&#x27;type&#x27;: &#x27;array&#x27;, &#x27;items&#x27;: {&#x27;type&#x27;: &#x27;string&#x27;}}, &#x27;response_type&#x27;: {&#x27;type&#x27;: &#x27;string&#x27;}}}, &#x27;error&#x27;: {&#x27;type&#x27;: &#x27;object&#x27;, &#x27;properties&#x27;: {&#x27;code&#x27;: {&#x27;type&#x27;: &#x27;string&#x27;}, &#x27;message&#x27;: {&#x27;type&#x27;: &#x27;string&#x27;}, &#x27;recoverable&#x27;: {&#x27;type&#x27;: &#x27;boolean&#x27;}}}}, &#x27;required&#x27;: [&#x27;content&#x27;]}"}, "personal_agent.core.StructuredResponseParser.parse": {"fullname": "personal_agent.core.StructuredResponseParser.parse", "modulename": "personal_agent.core", "qualname": "StructuredResponseParser.parse", "kind": "function", "doc": "<p>Parse a response string into a StructuredResponse object.</p>\n\n<p>Args:\n    response_text: Raw response text (JSON or plain text)</p>\n\n<p>Returns:\n    StructuredResponse object</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">response_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">personal_agent</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">structured_response</span><span class=\"o\">.</span><span class=\"n\">StructuredResponse</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"fullname": "personal_agent.core.StructuredResponseParser.create_system_prompt", "modulename": "personal_agent.core", "qualname": "StructuredResponseParser.create_system_prompt", "kind": "function", "doc": "<p>Create a system prompt that instructs the model to use structured JSON output.</p>\n\n<p>Returns:\n    System prompt string</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.ToolCall": {"fullname": "personal_agent.core.ToolCall", "modulename": "personal_agent.core", "qualname": "ToolCall", "kind": "class", "doc": "<p>Represents a structured tool call.</p>\n"}, "personal_agent.core.ToolCall.__init__": {"fullname": "personal_agent.core.ToolCall.__init__", "modulename": "personal_agent.core", "qualname": "ToolCall.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">function_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">arguments</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">reasoning</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "personal_agent.core.ToolCall.function_name": {"fullname": "personal_agent.core.ToolCall.function_name", "modulename": "personal_agent.core", "qualname": "ToolCall.function_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "personal_agent.core.ToolCall.arguments": {"fullname": "personal_agent.core.ToolCall.arguments", "modulename": "personal_agent.core", "qualname": "ToolCall.arguments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, Any]"}, "personal_agent.core.ToolCall.reasoning": {"fullname": "personal_agent.core.ToolCall.reasoning", "modulename": "personal_agent.core", "qualname": "ToolCall.reasoning", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, "personal_agent.core.ResponseMetadata": {"fullname": "personal_agent.core.ResponseMetadata", "modulename": "personal_agent.core", "qualname": "ResponseMetadata", "kind": "class", "doc": "<p>Metadata associated with a structured response.</p>\n"}, "personal_agent.core.ResponseMetadata.__init__": {"fullname": "personal_agent.core.ResponseMetadata.__init__", "modulename": "personal_agent.core", "qualname": "ResponseMetadata.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">confidence</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sources</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">reasoning_steps</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">response_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;structured&#39;</span></span>)</span>"}, "personal_agent.core.ResponseMetadata.confidence": {"fullname": "personal_agent.core.ResponseMetadata.confidence", "modulename": "personal_agent.core", "qualname": "ResponseMetadata.confidence", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": "None"}, "personal_agent.core.ResponseMetadata.sources": {"fullname": "personal_agent.core.ResponseMetadata.sources", "modulename": "personal_agent.core", "qualname": "ResponseMetadata.sources", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[str]"}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"fullname": "personal_agent.core.ResponseMetadata.reasoning_steps", "modulename": "personal_agent.core", "qualname": "ResponseMetadata.reasoning_steps", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[str]"}, "personal_agent.core.ResponseMetadata.response_type": {"fullname": "personal_agent.core.ResponseMetadata.response_type", "modulename": "personal_agent.core", "qualname": "ResponseMetadata.response_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;structured&#x27;"}, "personal_agent.core.ResponseError": {"fullname": "personal_agent.core.ResponseError", "modulename": "personal_agent.core", "qualname": "ResponseError", "kind": "class", "doc": "<p>Error information in a structured response.</p>\n"}, "personal_agent.core.ResponseError.__init__": {"fullname": "personal_agent.core.ResponseError.__init__", "modulename": "personal_agent.core", "qualname": "ResponseError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">code</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">recoverable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "personal_agent.core.ResponseError.code": {"fullname": "personal_agent.core.ResponseError.code", "modulename": "personal_agent.core", "qualname": "ResponseError.code", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "personal_agent.core.ResponseError.message": {"fullname": "personal_agent.core.ResponseError.message", "modulename": "personal_agent.core", "qualname": "ResponseError.message", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, "personal_agent.core.ResponseError.recoverable": {"fullname": "personal_agent.core.ResponseError.recoverable", "modulename": "personal_agent.core", "qualname": "ResponseError.recoverable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, "personal_agent.core.get_ollama_format_schema": {"fullname": "personal_agent.core.get_ollama_format_schema", "modulename": "personal_agent.core", "qualname": "get_ollama_format_schema", "kind": "function", "doc": "<p>Get the format schema for Ollama structured outputs.</p>\n\n<p>Returns:\n    Dictionary containing the JSON schema for Ollama format parameter</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.create_structured_instructions": {"fullname": "personal_agent.core.create_structured_instructions", "modulename": "personal_agent.core", "qualname": "create_structured_instructions", "kind": "function", "doc": "<p>Combine base agent instructions with structured output requirements.</p>\n\n<p>Args:\n    base_instructions: Original agent instructions</p>\n\n<p>Returns:\n    Enhanced instructions with JSON structure requirements</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base_instructions</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.TopicClassifier": {"fullname": "personal_agent.core.TopicClassifier", "modulename": "personal_agent.core", "qualname": "TopicClassifier", "kind": "class", "doc": "<p></p>\n"}, "personal_agent.core.TopicClassifier.__init__": {"fullname": "personal_agent.core.TopicClassifier.__init__", "modulename": "personal_agent.core", "qualname": "TopicClassifier.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_path</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "personal_agent.core.TopicClassifier.stopwords": {"fullname": "personal_agent.core.TopicClassifier.stopwords", "modulename": "personal_agent.core", "qualname": "TopicClassifier.stopwords", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.TopicClassifier.confidence_threshold": {"fullname": "personal_agent.core.TopicClassifier.confidence_threshold", "modulename": "personal_agent.core", "qualname": "TopicClassifier.confidence_threshold", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.TopicClassifier.keyword_weight": {"fullname": "personal_agent.core.TopicClassifier.keyword_weight", "modulename": "personal_agent.core", "qualname": "TopicClassifier.keyword_weight", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.TopicClassifier.phrase_weight": {"fullname": "personal_agent.core.TopicClassifier.phrase_weight", "modulename": "personal_agent.core", "qualname": "TopicClassifier.phrase_weight", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.TopicClassifier.load_config": {"fullname": "personal_agent.core.TopicClassifier.load_config", "modulename": "personal_agent.core", "qualname": "TopicClassifier.load_config", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">config_path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.core.TopicClassifier.clean_text": {"fullname": "personal_agent.core.TopicClassifier.clean_text", "modulename": "personal_agent.core", "qualname": "TopicClassifier.clean_text", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.core.TopicClassifier.classify": {"fullname": "personal_agent.core.TopicClassifier.classify", "modulename": "personal_agent.core", "qualname": "TopicClassifier.classify", "kind": "function", "doc": "<p>Classify the topic(s) of a given text.</p>\n\n<p>Args:\n    text (str): Text to classify\n    return_list (bool): If True, returns list of topic names only.\n                       If False, returns dict with confidence scores.</p>\n\n<p>Returns:\n    Union[List[str], Dict[str, float]]: Topic classification results</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span>, </span><span class=\"param\"><span class=\"n\">return_list</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.core.RuleSet": {"fullname": "personal_agent.core.RuleSet", "modulename": "personal_agent.core", "qualname": "RuleSet", "kind": "class", "doc": "<p>Basic ruleset</p>\n"}, "personal_agent.core.RuleSet.__init__": {"fullname": "personal_agent.core.RuleSet.__init__", "modulename": "personal_agent.core", "qualname": "RuleSet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">keywords</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Pattern</span><span class=\"p\">]</span></span>)</span>"}, "personal_agent.core.RuleSet.keywords": {"fullname": "personal_agent.core.RuleSet.keywords", "modulename": "personal_agent.core", "qualname": "RuleSet.keywords", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[str]"}, "personal_agent.core.RuleSet.patterns": {"fullname": "personal_agent.core.RuleSet.patterns", "modulename": "personal_agent.core", "qualname": "RuleSet.patterns", "kind": "variable", "doc": "<p></p>\n", "annotation": ": List[Pattern]"}, "personal_agent.core.UserManager": {"fullname": "personal_agent.core.UserManager", "modulename": "personal_agent.core", "qualname": "UserManager", "kind": "class", "doc": "<p>Complete user management with LightRAG integration.</p>\n"}, "personal_agent.core.UserManager.__init__": {"fullname": "personal_agent.core.UserManager.__init__", "modulename": "personal_agent.core", "qualname": "UserManager.__init__", "kind": "function", "doc": "<p>Initialize the user manager.</p>\n\n<p>Args:\n    data_dir: Data directory path (defaults to config DATA_DIR)\n    storage_backend: Storage backend (defaults to config STORAGE_BACKEND)\n    project_root: Project root directory (deprecated, LightRAGManager now uses PERSAG_HOME)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">storage_backend</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">project_root</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "personal_agent.core.UserManager.registry": {"fullname": "personal_agent.core.UserManager.registry", "modulename": "personal_agent.core", "qualname": "UserManager.registry", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.UserManager.lightrag_manager": {"fullname": "personal_agent.core.UserManager.lightrag_manager", "modulename": "personal_agent.core", "qualname": "UserManager.lightrag_manager", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.UserManager.get_all_users": {"fullname": "personal_agent.core.UserManager.get_all_users", "modulename": "personal_agent.core", "qualname": "UserManager.get_all_users", "kind": "function", "doc": "<p>Get all users from the registry.</p>\n\n<p>Returns:\n    List of user dictionaries with current user marked</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserManager.get_user": {"fullname": "personal_agent.core.UserManager.get_user", "modulename": "personal_agent.core", "qualname": "UserManager.get_user", "kind": "function", "doc": "<p>Get a specific user from the registry.</p>\n\n<p>Args:\n    user_id: User identifier</p>\n\n<p>Returns:\n    User dictionary or None if not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserManager.create_user": {"fullname": "personal_agent.core.UserManager.create_user", "modulename": "personal_agent.core", "qualname": "UserManager.create_user", "kind": "function", "doc": "<p>Create a new user in the system.</p>\n\n<p>Args:\n    user_id: Unique user identifier\n    user_name: Display name for the user (defaults to user_id)\n    user_type: User type (Standard, Admin, Guest)</p>\n\n<p>Returns:\n    Dictionary containing result information</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">user_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">user_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Standard&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserManager.switch_user": {"fullname": "personal_agent.core.UserManager.switch_user", "modulename": "personal_agent.core", "qualname": "UserManager.switch_user", "kind": "function", "doc": "<p>Switch to a different user with complete system integration.</p>\n\n<p>Args:\n    user_id: User ID to switch to\n    restart_lightrag: Whether to restart LightRAG services\n    update_global_config: Whether to update global USER_ID configuration</p>\n\n<p>Returns:\n    Dictionary containing result information</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">restart_lightrag</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">update_global_config</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserManager.delete_user": {"fullname": "personal_agent.core.UserManager.delete_user", "modulename": "personal_agent.core", "qualname": "UserManager.delete_user", "kind": "function", "doc": "<p>Delete a user from the system with comprehensive data cleanup.</p>\n\n<p>Args:\n    user_id: User ID to delete\n    delete_data: Whether to delete persistent data directory (default: True)\n    backup_data: Whether to backup data before deletion (default: False)\n    dry_run: Preview mode - show what would be deleted without deleting (default: False)</p>\n\n<p>Returns:\n    Dictionary containing detailed result information</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">delete_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">backup_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">dry_run</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"fullname": "personal_agent.core.UserManager.restart_lightrag_for_current_user", "modulename": "personal_agent.core", "qualname": "UserManager.restart_lightrag_for_current_user", "kind": "function", "doc": "<p>Restart LightRAG services for the current user.</p>\n\n<p>Returns:\n    Dictionary containing result information</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserManager.get_lightrag_status": {"fullname": "personal_agent.core.UserManager.get_lightrag_status", "modulename": "personal_agent.core", "qualname": "UserManager.get_lightrag_status", "kind": "function", "doc": "<p>Get current LightRAG service status.</p>\n\n<p>Returns:\n    Dictionary with service status information</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserManager.ensure_current_user_registered": {"fullname": "personal_agent.core.UserManager.ensure_current_user_registered", "modulename": "personal_agent.core", "qualname": "UserManager.ensure_current_user_registered", "kind": "function", "doc": "<p>Ensure the current USER_ID is registered in the registry.</p>\n\n<p>Returns:\n    True if user was already registered or successfully added</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserManager.update_user": {"fullname": "personal_agent.core.UserManager.update_user", "modulename": "personal_agent.core", "qualname": "UserManager.update_user", "kind": "function", "doc": "<p>Update user information.</p>\n\n<p>Args:\n    user_id: User identifier\n    **kwargs: Fields to update (user_name, user_type, etc.)</p>\n\n<p>Returns:\n    Dictionary containing result information</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserManager.get_user_details": {"fullname": "personal_agent.core.UserManager.get_user_details", "modulename": "personal_agent.core", "qualname": "UserManager.get_user_details", "kind": "function", "doc": "<p>Get detailed information for a specific user.</p>\n\n<p>Args:\n    user_id: User ID to get details for</p>\n\n<p>Returns:\n    Dictionary containing user details</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserRegistry": {"fullname": "personal_agent.core.UserRegistry", "modulename": "personal_agent.core", "qualname": "UserRegistry", "kind": "class", "doc": "<p>Simple user registry for tracking Personal Agent users.</p>\n"}, "personal_agent.core.UserRegistry.__init__": {"fullname": "personal_agent.core.UserRegistry.__init__", "modulename": "personal_agent.core", "qualname": "UserRegistry.__init__", "kind": "function", "doc": "<p>Initialize the user registry.</p>\n\n<p>Args:\n    data_dir: Data directory path (defaults to config DATA_DIR)\n    storage_backend: Storage backend (defaults to config STORAGE_BACKEND)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">storage_backend</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "personal_agent.core.UserRegistry.registry_file": {"fullname": "personal_agent.core.UserRegistry.registry_file", "modulename": "personal_agent.core", "qualname": "UserRegistry.registry_file", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.UserRegistry.add_user": {"fullname": "personal_agent.core.UserRegistry.add_user", "modulename": "personal_agent.core", "qualname": "UserRegistry.add_user", "kind": "function", "doc": "<p>Add a new user to the registry.</p>\n\n<p>Args:\n    user_id: Unique user identifier\n    user_name: Display name for the user (defaults to user_id)\n    user_type: User type (Standard, Admin, Guest)</p>\n\n<p>Returns:\n    True if user was added, False if user already exists</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">user_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">user_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Standard&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserRegistry.get_all_users": {"fullname": "personal_agent.core.UserRegistry.get_all_users", "modulename": "personal_agent.core", "qualname": "UserRegistry.get_all_users", "kind": "function", "doc": "<p>Get all users from the registry.</p>\n\n<p>Returns:\n    List of user dictionaries</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserRegistry.get_user": {"fullname": "personal_agent.core.UserRegistry.get_user", "modulename": "personal_agent.core", "qualname": "UserRegistry.get_user", "kind": "function", "doc": "<p>Get a specific user from the registry.</p>\n\n<p>Args:\n    user_id: User identifier</p>\n\n<p>Returns:\n    User dictionary or None if not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserRegistry.remove_user": {"fullname": "personal_agent.core.UserRegistry.remove_user", "modulename": "personal_agent.core", "qualname": "UserRegistry.remove_user", "kind": "function", "doc": "<p>Remove a user from the registry.</p>\n\n<p>Args:\n    user_id: User identifier</p>\n\n<p>Returns:\n    True if user was removed, False if user not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserRegistry.update_last_seen": {"fullname": "personal_agent.core.UserRegistry.update_last_seen", "modulename": "personal_agent.core", "qualname": "UserRegistry.update_last_seen", "kind": "function", "doc": "<p>Update the last_seen timestamp for a user.</p>\n\n<p>Args:\n    user_id: User identifier</p>\n\n<p>Returns:\n    True if user was updated, False if user not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserRegistry.update_user": {"fullname": "personal_agent.core.UserRegistry.update_user", "modulename": "personal_agent.core", "qualname": "UserRegistry.update_user", "kind": "function", "doc": "<p>Update user information.</p>\n\n<p>Args:\n    user_id: User identifier\n    **kwargs: Fields to update (user_name, user_type, etc.)</p>\n\n<p>Returns:\n    True if user was updated, False if user not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserRegistry.user_exists": {"fullname": "personal_agent.core.UserRegistry.user_exists", "modulename": "personal_agent.core", "qualname": "UserRegistry.user_exists", "kind": "function", "doc": "<p>Check if a user exists in the registry.</p>\n\n<p>Args:\n    user_id: User identifier</p>\n\n<p>Returns:\n    True if user exists, False otherwise</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserRegistry.get_current_user": {"fullname": "personal_agent.core.UserRegistry.get_current_user", "modulename": "personal_agent.core", "qualname": "UserRegistry.get_current_user", "kind": "function", "doc": "<p>Get the current user from the single source of truth (user_id_mgr).</p>\n\n<p>Returns:\n    Current user dictionary or None if not found</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"fullname": "personal_agent.core.UserRegistry.ensure_current_user_registered", "modulename": "personal_agent.core", "qualname": "UserRegistry.ensure_current_user_registered", "kind": "function", "doc": "<p>Ensure the current USER_ID is registered in the registry.\nAuto-registers if not found.</p>\n\n<p>Returns:\n    True if user was already registered or successfully added</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.LightRAGManager": {"fullname": "personal_agent.core.LightRAGManager", "modulename": "personal_agent.core", "qualname": "LightRAGManager", "kind": "class", "doc": "<p>Manages LightRAG Docker services with Python implementation of restart-lightrag.sh.</p>\n"}, "personal_agent.core.LightRAGManager.__init__": {"fullname": "personal_agent.core.LightRAGManager.__init__", "modulename": "personal_agent.core", "qualname": "LightRAGManager.__init__", "kind": "function", "doc": "<p>Initialize the LightRAG manager.</p>\n\n<p>Args:\n    project_root: Project root directory (deprecated, now uses PERSAG_HOME)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">project_root</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"fullname": "personal_agent.core.LightRAGManager.lightrag_server_dir", "modulename": "personal_agent.core", "qualname": "LightRAGManager.lightrag_server_dir", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"fullname": "personal_agent.core.LightRAGManager.lightrag_memory_dir", "modulename": "personal_agent.core", "qualname": "LightRAGManager.lightrag_memory_dir", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.LightRAGManager.project_root": {"fullname": "personal_agent.core.LightRAGManager.project_root", "modulename": "personal_agent.core", "qualname": "LightRAGManager.project_root", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"fullname": "personal_agent.core.LightRAGManager.update_docker_compose_user_id", "modulename": "personal_agent.core", "qualname": "LightRAGManager.update_docker_compose_user_id", "kind": "function", "doc": "<p>Update USER_ID in docker-compose .env files and docker-compose.yml files.</p>\n\n<p>Args:\n    user_id: User ID to set in environment files</p>\n\n<p>Returns:\n    Dictionary with operation results</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"fullname": "personal_agent.core.LightRAGManager.restart_lightrag_services", "modulename": "personal_agent.core", "qualname": "LightRAGManager.restart_lightrag_services", "kind": "function", "doc": "<p>Restart LightRAG services with smart restart logic to handle port conflicts.\nImplements the same logic as smart-restart-lightrag.sh.</p>\n\n<p>Args:\n    user_id: User ID to set (optional, uses current USER_ID if not provided)</p>\n\n<p>Returns:\n    Dictionary with operation results</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.LightRAGManager.get_service_status": {"fullname": "personal_agent.core.LightRAGManager.get_service_status", "modulename": "personal_agent.core", "qualname": "LightRAGManager.get_service_status", "kind": "function", "doc": "<p>Get current docker-compose service status.\nEquivalent to: docker-compose ps</p>\n\n<p>Returns:\n    Dictionary with service status information</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.LightRAGManager.stop_services": {"fullname": "personal_agent.core.LightRAGManager.stop_services", "modulename": "personal_agent.core", "qualname": "LightRAGManager.stop_services", "kind": "function", "doc": "<p>Stop all LightRAG services.</p>\n\n<p>Returns:\n    Dictionary with operation results</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.LightRAGManager.start_services": {"fullname": "personal_agent.core.LightRAGManager.start_services", "modulename": "personal_agent.core", "qualname": "LightRAGManager.start_services", "kind": "function", "doc": "<p>Start all LightRAG services.</p>\n\n<p>Args:\n    user_id: User ID to set before starting (optional)</p>\n\n<p>Returns:\n    Dictionary with operation results</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.DockerIntegrationManager": {"fullname": "personal_agent.core.DockerIntegrationManager", "modulename": "personal_agent.core", "qualname": "DockerIntegrationManager", "kind": "class", "doc": "<p>Manages Docker integration for the personal agent system.</p>\n"}, "personal_agent.core.DockerIntegrationManager.__init__": {"fullname": "personal_agent.core.DockerIntegrationManager.__init__", "modulename": "personal_agent.core", "qualname": "DockerIntegrationManager.__init__", "kind": "function", "doc": "<p>Initialize the Docker integration manager.</p>\n\n<p>Args:\n    user_id: User ID to ensure consistency for (defaults to system USER_ID)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "personal_agent.core.DockerIntegrationManager.user_id": {"fullname": "personal_agent.core.DockerIntegrationManager.user_id", "modulename": "personal_agent.core", "qualname": "DockerIntegrationManager.user_id", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.DockerIntegrationManager.base_dir": {"fullname": "personal_agent.core.DockerIntegrationManager.base_dir", "modulename": "personal_agent.core", "qualname": "DockerIntegrationManager.base_dir", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"fullname": "personal_agent.core.DockerIntegrationManager.docker_sync", "modulename": "personal_agent.core", "qualname": "DockerIntegrationManager.docker_sync", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"fullname": "personal_agent.core.DockerIntegrationManager.check_docker_consistency", "modulename": "personal_agent.core", "qualname": "DockerIntegrationManager.check_docker_consistency", "kind": "function", "doc": "<p>Check if Docker configurations are consistent with system USER_ID.</p>\n\n<p>Returns:\n    Tuple of (is_consistent, message)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"fullname": "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency", "modulename": "personal_agent.core", "qualname": "DockerIntegrationManager.ensure_docker_consistency", "kind": "function", "doc": "<p>Ensure Docker configurations are consistent with system USER_ID.</p>\n\n<p>Args:\n    force_restart: If True, restart containers even if not running</p>\n\n<p>Returns:\n    Tuple of (success, message)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">force_restart</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"fullname": "personal_agent.core.DockerIntegrationManager.validate_system_consistency", "modulename": "personal_agent.core", "qualname": "DockerIntegrationManager.validate_system_consistency", "kind": "function", "doc": "<p>Perform comprehensive validation of system consistency.</p>\n\n<p>Returns:\n    Tuple of (is_consistent, message)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"fullname": "personal_agent.core.DockerIntegrationManager.pre_initialization_check", "modulename": "personal_agent.core", "qualname": "DockerIntegrationManager.pre_initialization_check", "kind": "function", "doc": "<p>Perform pre-initialization consistency check and optional auto-fix.</p>\n\n<p>This method should be called before initializing the personal agent system\nto ensure Docker configurations are consistent.</p>\n\n<p>Args:\n    auto_fix: If True, automatically fix inconsistencies\n    force_restart: If True, restart containers even if not running</p>\n\n<p>Returns:\n    Tuple of (ready_to_proceed, message)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">auto_fix</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">force_restart</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.check_docker_user_consistency": {"fullname": "personal_agent.core.check_docker_user_consistency", "modulename": "personal_agent.core", "qualname": "check_docker_user_consistency", "kind": "function", "doc": "<p>Convenience function to check Docker USER_ID consistency without fixing.</p>\n\n<p>Args:\n    user_id: User ID to check consistency for (defaults to system USER_ID)</p>\n\n<p>Returns:\n    Tuple of (is_consistent, message)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.ensure_docker_user_consistency": {"fullname": "personal_agent.core.ensure_docker_user_consistency", "modulename": "personal_agent.core", "qualname": "ensure_docker_user_consistency", "kind": "function", "doc": "<p>Convenience function to ensure Docker USER_ID consistency.</p>\n\n<p>This function can be called from agent initialization code to ensure\nDocker configurations are consistent before proceeding.</p>\n\n<p>Args:\n    user_id: User ID to ensure consistency for (defaults to system USER_ID)\n    auto_fix: If True, automatically fix inconsistencies\n    force_restart: If True, restart containers even if not running</p>\n\n<p>Returns:\n    Tuple of (ready_to_proceed, message)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">auto_fix</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">force_restart</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.extract_content_from_smollm2_response": {"fullname": "personal_agent.core.extract_content_from_smollm2_response", "modulename": "personal_agent.core", "qualname": "extract_content_from_smollm2_response", "kind": "function", "doc": "<p>Extract readable content from SmolLM2 response, handling tool response tags properly.</p>\n\n<p>SmolLM2 sometimes wraps the entire response in <tool_response> tags, so we need to\nextract the content from inside these tags rather than removing them entirely.</p>\n\n<p>Args:\n    text: Raw response text from SmolLM2</p>\n\n<p>Returns:\n    Clean content text without tool call/response XML tags</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.format_smollm2_system_prompt": {"fullname": "personal_agent.core.format_smollm2_system_prompt", "modulename": "personal_agent.core", "qualname": "format_smollm2_system_prompt", "kind": "function", "doc": "<p>Format a system prompt for SmolLM2 with tool definitions.</p>\n\n<p>Args:\n    tools: List of tool definitions in JSON schema format</p>\n\n<p>Returns:\n    Formatted system prompt string</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tools</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.is_smollm2_model": {"fullname": "personal_agent.core.is_smollm2_model", "modulename": "personal_agent.core", "qualname": "is_smollm2_model", "kind": "function", "doc": "<p>Check if the given model name is a SmolLM2 model.</p>\n\n<p>Args:\n    model_name: Name of the model to check</p>\n\n<p>Returns:\n    True if it's a SmolLM2 model, False otherwise</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.parse_smollm2_response": {"fullname": "personal_agent.core.parse_smollm2_response", "modulename": "personal_agent.core", "qualname": "parse_smollm2_response", "kind": "function", "doc": "<p>Parse a response from SmolLM2 model, extracting tool calls if present.</p>\n\n<p>SmolLM2 uses <tool_call> XML tags to wrap JSON tool call data.</p>\n\n<p>Args:\n    text: Response text from the SmolLM2 model</p>\n\n<p>Returns:\n    Either the original text (if no tool calls) or a list of tool call dictionaries</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.core.prepare_smollm2_messages": {"fullname": "personal_agent.core.prepare_smollm2_messages", "modulename": "personal_agent.core", "qualname": "prepare_smollm2_messages", "kind": "function", "doc": "<p>Prepare messages for SmolLM2 in the expected format.</p>\n\n<p>Args:\n    query: User query\n    tools: Available tools in JSON schema format\n    history: Previous conversation history</p>\n\n<p>Returns:\n    List of message dictionaries formatted for SmolLM2</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tools</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">history</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "personal_agent.readers": {"fullname": "personal_agent.readers", "modulename": "personal_agent.readers", "kind": "module", "doc": "<p></p>\n"}, "personal_agent.readers.url_reader": {"fullname": "personal_agent.readers.url_reader", "modulename": "personal_agent.readers.url_reader", "kind": "module", "doc": "<p></p>\n"}, "personal_agent.readers.url_reader.reader": {"fullname": "personal_agent.readers.url_reader.reader", "modulename": "personal_agent.readers.url_reader", "qualname": "reader", "kind": "variable", "doc": "<p></p>\n", "default_value": "URLReader(chunk=True, chunk_size=5000, separators=[&#x27;\\n&#x27;, &#x27;\\n\\n&#x27;, &#x27;\\r&#x27;, &#x27;\\r\\n&#x27;, &#x27;\\n\\r&#x27;, &#x27;\\t&#x27;, &#x27; &#x27;, &#x27;  &#x27;], chunking_strategy=&lt;agno.document.chunking.recursive.RecursiveChunking object&gt;)"}, "personal_agent.readers.web_reader": {"fullname": "personal_agent.readers.web_reader", "modulename": "personal_agent.readers.web_reader", "kind": "module", "doc": "<p>Web reader for scraping websites using Agno WebsiteReader.</p>\n"}, "personal_agent.readers.web_reader.create_web_reader": {"fullname": "personal_agent.readers.web_reader.create_web_reader", "modulename": "personal_agent.readers.web_reader", "qualname": "create_web_reader", "kind": "function", "doc": "<p>Create a WebsiteReader instance with specified parameters.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">max_depth</span><span class=\"o\">=</span><span class=\"mi\">3</span>, </span><span class=\"param\"><span class=\"n\">max_links</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.readers.web_reader.read_website": {"fullname": "personal_agent.readers.web_reader.read_website", "modulename": "personal_agent.readers.web_reader", "qualname": "read_website", "kind": "function", "doc": "<p>Read content from a website URL.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">max_depth</span><span class=\"o\">=</span><span class=\"mi\">3</span>, </span><span class=\"param\"><span class=\"n\">max_links</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.team": {"fullname": "personal_agent.team", "modulename": "personal_agent.team", "kind": "module", "doc": "<p>Personal Agent Team Module</p>\n\n<p>This module provides specialized agents that work together as a team,\nfollowing the reasoning_multi_purpose_team.py pattern from agno examples.</p>\n"}, "personal_agent.team.create_basic_memory_agent": {"fullname": "personal_agent.team.create_basic_memory_agent", "modulename": "personal_agent.team", "qualname": "create_basic_memory_agent", "kind": "function", "doc": "<p>Create a basic memory agent with just memory tools.</p>\n\n<p>This follows the working pattern from AgnoPersonalAgent but simplified\nfor use as a team member.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_provider</strong>:  LLM provider ('ollama' or 'openai')</li>\n<li><strong>model_name</strong>:  Model name to use</li>\n<li><strong>ollama_base_url</strong>:  Base URL for Ollama API</li>\n<li><strong>storage_dir</strong>:  Directory for storage files</li>\n<li><strong>user_id</strong>:  User identifier for memory operations</li>\n<li><strong>debug</strong>:  Enable debug mode</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured Agent instance with memory tools</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:11434&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;./data/agno&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default_user&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">Agent</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.create_personal_agent_team": {"fullname": "personal_agent.team.create_personal_agent_team", "modulename": "personal_agent.team", "qualname": "create_personal_agent_team", "kind": "function", "doc": "<p>Create a team of specialized personal agents.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_provider</strong>:  LLM provider ('ollama' or 'openai')</li>\n<li><strong>model_name</strong>:  Model name to use</li>\n<li><strong>ollama_base_url</strong>:  Base URL for Ollama API</li>\n<li><strong>storage_dir</strong>:  Directory for storage files</li>\n<li><strong>user_id</strong>:  User identifier for memory operations</li>\n<li><strong>debug</strong>:  Enable debug mode</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured team instance</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:11434&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/Users/Shared/personal_agent_data/agno/grok&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;test_user&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">team</span><span class=\"o\">.</span><span class=\"n\">team</span><span class=\"o\">.</span><span class=\"n\">Team</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.create_personal_agent_team_async": {"fullname": "personal_agent.team.create_personal_agent_team_async", "modulename": "personal_agent.team", "qualname": "create_personal_agent_team_async", "kind": "function", "doc": "<p>Async version of create_personal_agent_team.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_provider</strong>:  LLM provider ('ollama' or 'openai')</li>\n<li><strong>model_name</strong>:  Model name to use</li>\n<li><strong>ollama_base_url</strong>:  Base URL for Ollama API</li>\n<li><strong>storage_dir</strong>:  Directory for storage files</li>\n<li><strong>user_id</strong>:  User identifier for memory operations</li>\n<li><strong>debug</strong>:  Enable debug mode</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured team instance</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:11434&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;./data/agno&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default_user&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">team</span><span class=\"o\">.</span><span class=\"n\">team</span><span class=\"o\">.</span><span class=\"n\">Team</span>:</span></span>", "funcdef": "async def"}, "personal_agent.team.PersonalAgentTeamWrapper": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper", "kind": "class", "doc": "<p>Wrapper class to provide a similar interface to AgnoPersonalAgent for the team.</p>\n"}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.__init__", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.__init__", "kind": "function", "doc": "<p>Initialize the team wrapper.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_provider</strong>:  LLM provider ('ollama' or 'openai')</li>\n<li><strong>model_name</strong>:  Model name to use</li>\n<li><strong>ollama_base_url</strong>:  Base URL for Ollama API</li>\n<li><strong>storage_dir</strong>:  Directory for storage files</li>\n<li><strong>user_id</strong>:  User identifier for memory operations</li>\n<li><strong>debug</strong>:  Enable debug mode</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:11434&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;./data/agno&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default_user&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.model_provider", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.model_provider", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.model_name", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.model_name", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.ollama_base_url", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.storage_dir", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.storage_dir", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.user_id", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.user_id", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.team.PersonalAgentTeamWrapper.debug": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.debug", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.debug", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.team.PersonalAgentTeamWrapper.team": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.team", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.team", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.agno_memory", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.agno_memory", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.initialize", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.initialize", "kind": "function", "doc": "<p>Initialize the team.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if initialization successful</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "async def"}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.run", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.run", "kind": "function", "doc": "<p>Run a query through the team.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query</strong>:  User query to process</li>\n<li><strong>stream</strong>:  Whether to stream the response (not implemented yet)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Team response</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">stream</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "async def"}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.get_last_tool_calls", "kind": "function", "doc": "<p>Get tool call information from the last response.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Dictionary with tool call details</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.get_agent_info", "kind": "function", "doc": "<p>Get information about the team configuration.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Dictionary containing team information</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"fullname": "personal_agent.team.PersonalAgentTeamWrapper.cleanup", "modulename": "personal_agent.team", "qualname": "PersonalAgentTeamWrapper.cleanup", "kind": "function", "doc": "<p>Clean up team resources.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "personal_agent.team.create_ollama_model": {"fullname": "personal_agent.team.create_ollama_model", "modulename": "personal_agent.team", "qualname": "create_ollama_model", "kind": "function", "doc": "<p>Create an Ollama model using your AgentModelManager.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">use_remote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ollama</span><span class=\"o\">.</span><span class=\"n\">tools</span><span class=\"o\">.</span><span class=\"n\">OllamaTools</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.create_model": {"fullname": "personal_agent.team.create_model", "modulename": "personal_agent.team", "qualname": "create_model", "kind": "function", "doc": "<p>Create an Agent using AgentModelManager.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">use_remote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">Agent</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.create_openai_model": {"fullname": "personal_agent.team.create_openai_model", "modulename": "personal_agent.team", "qualname": "create_openai_model", "kind": "function", "doc": "<p>Create an OpenAI model using AgentModelManager.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">use_remote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">openai</span><span class=\"o\">.</span><span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">OpenAIChat</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.create_memory_agent": {"fullname": "personal_agent.team.create_memory_agent", "modulename": "personal_agent.team", "qualname": "create_memory_agent", "kind": "function", "doc": "<p>Create a memory agent that uses the shared memory system.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">use_remote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">recreate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">Agent</span>:</span></span>", "funcdef": "async def"}, "personal_agent.team.create_team": {"fullname": "personal_agent.team.create_team", "modulename": "personal_agent.team", "qualname": "create_team", "kind": "function", "doc": "<p>Create the team with shared memory context and your existing managers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">use_remote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.team.cleanup_team": {"fullname": "personal_agent.team.cleanup_team", "modulename": "personal_agent.team", "qualname": "cleanup_team", "kind": "function", "doc": "<p>Comprehensive cleanup of team resources to prevent ResourceWarnings.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">team</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.team.main": {"fullname": "personal_agent.team.main", "modulename": "personal_agent.team", "qualname": "main", "kind": "function", "doc": "<p>Main function to run the team with an enhanced CLI interface.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">use_remote</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "personal_agent.team.cli_main": {"fullname": "personal_agent.team.cli_main", "modulename": "personal_agent.team", "qualname": "cli_main", "kind": "function", "doc": "<p>Entry point for the paga_team_cli command.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.team.create_web_research_agent": {"fullname": "personal_agent.team.create_web_research_agent", "modulename": "personal_agent.team", "qualname": "create_web_research_agent", "kind": "function", "doc": "<p>Create a specialized web research agent.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_provider</strong>:  LLM provider ('ollama' or 'openai')</li>\n<li><strong>model_name</strong>:  Model name to use</li>\n<li><strong>ollama_base_url</strong>:  Base URL for Ollama API</li>\n<li><strong>debug</strong>:  Enable debug mode</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured web research agent</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:11434&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">Agent</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.create_finance_agent": {"fullname": "personal_agent.team.create_finance_agent", "modulename": "personal_agent.team", "qualname": "create_finance_agent", "kind": "function", "doc": "<p>Create a specialized finance agent.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_provider</strong>:  LLM provider ('ollama' or 'openai')</li>\n<li><strong>model_name</strong>:  Model name to use</li>\n<li><strong>ollama_base_url</strong>:  Base URL for Ollama API</li>\n<li><strong>debug</strong>:  Enable debug mode</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured finance agent</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:1.7b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:11434&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">Agent</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.create_calculator_agent": {"fullname": "personal_agent.team.create_calculator_agent", "modulename": "personal_agent.team", "qualname": "create_calculator_agent", "kind": "function", "doc": "<p>Create a specialized calculator agent.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_provider</strong>:  LLM provider ('ollama' or 'openai')</li>\n<li><strong>model_name</strong>:  Model name to use</li>\n<li><strong>ollama_base_url</strong>:  Base URL for Ollama API</li>\n<li><strong>debug</strong>:  Enable debug mode</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured calculator agent</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:1.7b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:11434&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">Agent</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.create_file_operations_agent": {"fullname": "personal_agent.team.create_file_operations_agent", "modulename": "personal_agent.team", "qualname": "create_file_operations_agent", "kind": "function", "doc": "<p>Create a specialized file operations agent.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_provider</strong>:  LLM provider ('ollama' or 'openai')</li>\n<li><strong>model_name</strong>:  Model name to use</li>\n<li><strong>ollama_base_url</strong>:  Base URL for Ollama API</li>\n<li><strong>debug</strong>:  Enable debug mode</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured file operations agent</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:1.7b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:11434&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">Agent</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.create_pubmed_agent": {"fullname": "personal_agent.team.create_pubmed_agent", "modulename": "personal_agent.team", "qualname": "create_pubmed_agent", "kind": "function", "doc": "<p>Create a specialized PubMed research agent.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_provider</strong>:  LLM provider ('ollama' or 'openai')</li>\n<li><strong>model_name</strong>:  Model name to use</li>\n<li><strong>ollama_base_url</strong>:  Base URL for Ollama API</li>\n<li><strong>debug</strong>:  Enable debug mode</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured PubMed research agent</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:11434&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">agno</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">Agent</span>:</span></span>", "funcdef": "def"}, "personal_agent.team.create_knowledge_memory_agent": {"fullname": "personal_agent.team.create_knowledge_memory_agent", "modulename": "personal_agent.team", "qualname": "create_knowledge_memory_agent", "kind": "function", "doc": "<p>Create a knowledge/memory agent using PersonalAgnoAgent with all_tools=False.</p>\n\n<p>This agent is specifically configured for knowledge and memory operations within\na team context, using the full PersonalAgnoAgent capabilities but without\nbuilt-in tools to avoid conflicts with team coordination.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_provider</strong>:  LLM provider ('ollama' or 'openai')</li>\n<li><strong>model_name</strong>:  Model name to use</li>\n<li><strong>ollama_base_url</strong>:  Base URL for Ollama API</li>\n<li><strong>storage_dir</strong>:  Directory for storage files</li>\n<li><strong>knowledge_dir</strong>:  Directory containing knowledge files to load</li>\n<li><strong>user_id</strong>:  User identifier for memory operations</li>\n<li><strong>debug</strong>:  Enable debug mode</li>\n<li><strong>recreate</strong>:  Recreate the knowledge base</li>\n<li><strong>all_tools</strong>:  Include all tools in the agent</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured PersonalAgnoAgent instance for knowledge/memory operations</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_provider</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ollama&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;qwen3:8b&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ollama_base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:11434&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">storage_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/Users/Shared/personal_agent_data/agno/grok&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">knowledge_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/Users/Shared/personal_agent_data/agno/grok/knowledge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;default_user&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">recreate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">all_tools</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;AgnoPersonalAgent&#39;</span>:</span></span>", "funcdef": "def"}, "personal_agent.tools": {"fullname": "personal_agent.tools", "modulename": "personal_agent.tools", "kind": "module", "doc": "<p>Personal Agent Tools Package</p>\n\n<p>This package contains utility tools and helper classes for the Personal Agent system.</p>\n"}, "personal_agent.tools.StreamlitMemoryHelper": {"fullname": "personal_agent.tools.StreamlitMemoryHelper", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper", "kind": "class", "doc": "<p></p>\n"}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.__init__", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">agent</span></span>)</span>"}, "personal_agent.tools.StreamlitMemoryHelper.agent": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.agent", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.agent", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.memory_manager", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.memory_manager", "kind": "variable", "doc": "<p>Dynamic property that always gets fresh memory manager.</p>\n"}, "personal_agent.tools.StreamlitMemoryHelper.db": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.db", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.db", "kind": "variable", "doc": "<p>Dynamic property that always gets fresh db.</p>\n"}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.search_memories", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.search_memories", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">similarity_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.3</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.get_all_memories", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.get_all_memories", "kind": "function", "doc": "<p>Get all memories using consistent SemanticMemoryManager interface</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.add_memory", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.add_memory", "kind": "function", "doc": "<p>Adds a memory by calling the agent's public store_user_memory method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">memory_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">input_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.clear_memories", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.clear_memories", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.get_memory_stats", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.delete_memory", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.delete_memory", "kind": "function", "doc": "<p>Delete a memory using the agent's built-in tool with comprehensive debugging.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">memory_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.update_memory", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.update_memory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">memory_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">memory_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.sync_memory_to_graph", "kind": "function", "doc": "<p>Sync a memory to the LightRAG graph system to maintain consistency</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">memory_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"fullname": "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status", "modulename": "personal_agent.tools", "qualname": "StreamlitMemoryHelper.get_memory_sync_status", "kind": "function", "doc": "<p>Check sync status between local SQLite and LightRAG graph memories</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.tools.StreamlitKnowledgeHelper": {"fullname": "personal_agent.tools.StreamlitKnowledgeHelper", "modulename": "personal_agent.tools", "qualname": "StreamlitKnowledgeHelper", "kind": "class", "doc": "<p></p>\n"}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"fullname": "personal_agent.tools.StreamlitKnowledgeHelper.__init__", "modulename": "personal_agent.tools", "qualname": "StreamlitKnowledgeHelper.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">agent</span></span>)</span>"}, "personal_agent.tools.StreamlitKnowledgeHelper.agent": {"fullname": "personal_agent.tools.StreamlitKnowledgeHelper.agent", "modulename": "personal_agent.tools", "qualname": "StreamlitKnowledgeHelper.agent", "kind": "variable", "doc": "<p></p>\n"}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"fullname": "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager", "modulename": "personal_agent.tools", "qualname": "StreamlitKnowledgeHelper.knowledge_manager", "kind": "variable", "doc": "<p>Dynamic property that always gets fresh knowledge manager.</p>\n"}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"fullname": "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge", "modulename": "personal_agent.tools", "qualname": "StreamlitKnowledgeHelper.search_knowledge", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"fullname": "personal_agent.tools.StreamlitKnowledgeHelper.search_rag", "modulename": "personal_agent.tools", "qualname": "StreamlitKnowledgeHelper.search_rag", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils": {"fullname": "personal_agent.utils", "modulename": "personal_agent.utils", "kind": "module", "doc": "<p>Utilities package for the Personal AI Agent.</p>\n\n<p>This package provides logging, cleanup, and other utility functions.\nLast update: 2025-06-02 23:17:39</p>\n"}, "personal_agent.utils.cleanup": {"fullname": "personal_agent.utils.cleanup", "modulename": "personal_agent.utils.cleanup", "kind": "module", "doc": "<p>Utilities module for the Personal AI Agent.</p>\n\n<p>This module provides logging setup, cleanup functions, signal handlers,\nand other utility functions.</p>\n"}, "personal_agent.utils.inject_dependencies": {"fullname": "personal_agent.utils.inject_dependencies", "modulename": "personal_agent.utils", "qualname": "inject_dependencies", "kind": "function", "doc": "<p>Inject dependencies for cleanup functions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">weaviate_cli</span>, </span><span class=\"param\"><span class=\"n\">vec_store</span>, </span><span class=\"param\"><span class=\"n\">mcp_cli</span>, </span><span class=\"param\"><span class=\"n\">log</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.register_cleanup_handlers": {"fullname": "personal_agent.utils.register_cleanup_handlers", "modulename": "personal_agent.utils", "qualname": "register_cleanup_handlers", "kind": "function", "doc": "<p>Register cleanup functions and signal handlers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.setup_logging": {"fullname": "personal_agent.utils.setup_logging", "modulename": "personal_agent.utils", "qualname": "setup_logging", "kind": "function", "doc": "<p>Returns a logger with the specified name, configured to use a RichHandler for console output.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name of the logger.</li>\n<li><strong>level</strong>:  The logging level, defaults to LOG_LEVEL from config</li>\n<li><strong>propagate</strong>:  Whether to propagate messages to parent loggers, defaults to False</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured logger instance.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;personal_agent.utils.pag_logging&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">propagate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Logger</span>:</span></span>", "funcdef": "def"}, "personal_agent.utils.setup_logging_filters": {"fullname": "personal_agent.utils.setup_logging_filters", "modulename": "personal_agent.utils", "qualname": "setup_logging_filters", "kind": "function", "doc": "<p>Set up logging configuration with Rich handler and configure agno loggers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "personal_agent.utils.setup_agno_rich_logging": {"fullname": "personal_agent.utils.setup_agno_rich_logging", "modulename": "personal_agent.utils", "qualname": "setup_agno_rich_logging", "kind": "function", "doc": "<p>Configure agno framework loggers to use Rich handlers.</p>\n\n<p>This function applies Rich logging configuration to all agno-related loggers\nto ensure consistent formatting and styling throughout the application.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>level</strong>:  The logging level to set for agno loggers</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "personal_agent.utils.configure_all_rich_logging": {"fullname": "personal_agent.utils.configure_all_rich_logging", "modulename": "personal_agent.utils", "qualname": "configure_all_rich_logging", "kind": "function", "doc": "<p>Configure all logging in the application to use Rich handlers.</p>\n\n<p>This includes both personal agent loggers and agno framework loggers.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>level</strong>:  The logging level to set</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">20</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "personal_agent.utils.configure_master_logger": {"fullname": "personal_agent.utils.configure_master_logger", "modulename": "personal_agent.utils", "qualname": "configure_master_logger", "kind": "function", "doc": "<p>Configures the root logger with the specified settings.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>log_level</strong>:  The logging level to set. Defaults to logging.ERROR.</li>\n<li><strong>disabled</strong>:  If True, the logger will be disabled. Defaults to False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">log_level</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">40</span>, </span><span class=\"param\"><span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"fullname": "personal_agent.utils.disable_stream_handlers_for_namespace", "modulename": "personal_agent.utils", "qualname": "disable_stream_handlers_for_namespace", "kind": "function", "doc": "<p>Disables all stream handlers for all loggers under the specified namespace.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>namespace</strong>:  The namespace whose stream handlers should be disabled.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">namespace</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.list_all_loggers": {"fullname": "personal_agent.utils.list_all_loggers", "modulename": "personal_agent.utils", "qualname": "list_all_loggers", "kind": "function", "doc": "<p>Lists all loggers that have been created in the application.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>List of logger names.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.list_handlers": {"fullname": "personal_agent.utils.list_handlers", "modulename": "personal_agent.utils", "qualname": "list_handlers", "kind": "function", "doc": "<p>Lists the handlers for the logger with the specified name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name of the logger.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>List of handler types and their configurations.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.set_logger_level": {"fullname": "personal_agent.utils.set_logger_level", "modulename": "personal_agent.utils", "qualname": "set_logger_level", "kind": "function", "doc": "<p>Sets the logging level for the logger with the specified name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name of the logger.</li>\n<li><strong>level</strong>:  The logging level to set. Must be one of [\"WARNING\", \"ERROR\", \"INFO\", \"DEBUG\"].</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>:  If the provided level is not one of the allowed values.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">level</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.set_logger_level_for_module": {"fullname": "personal_agent.utils.set_logger_level_for_module", "modulename": "personal_agent.utils", "qualname": "set_logger_level_for_module", "kind": "function", "doc": "<p>Set the logging level for all loggers within a specified package.</p>\n\n<p>This function iterates through all registered loggers and sets the logging\nlevel for those that belong to the specified package.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pkg_name</strong>:  The name of the package for which to set the logging level.</li>\n<li><strong>level</strong>:  The logging level to set (e.g., 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL').\nIf not specified, the logging level will not be changed.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of logger names that were found and had their levels set.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pkg_name</span>, </span><span class=\"param\"><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.set_logging_level_for_all_handlers": {"fullname": "personal_agent.utils.set_logging_level_for_all_handlers", "modulename": "personal_agent.utils", "qualname": "set_logging_level_for_all_handlers", "kind": "function", "doc": "<p>Sets the logging level for all handlers of all loggers in the proteusPy package.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>log_level</strong>:  The logging level to set.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">log_level</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.toggle_stream_handler": {"fullname": "personal_agent.utils.toggle_stream_handler", "modulename": "personal_agent.utils", "qualname": "toggle_stream_handler", "kind": "function", "doc": "<p>Enables or disables the StreamHandler for the logger with the specified name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name of the logger.</li>\n<li><strong>enable</strong>:  If True, enables the StreamHandler; if False, disables it.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">enable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.store_fact_in_knowledge_base": {"fullname": "personal_agent.utils.store_fact_in_knowledge_base", "modulename": "personal_agent.utils", "qualname": "store_fact_in_knowledge_base", "kind": "function", "doc": "<p>Store a fact in the Weaviate knowledge base.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fact</strong>:  The fact to store as a string</li>\n<li><strong>topic</strong>:  The topic category for the fact</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if successful, False otherwise</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fact</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;fact&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "personal_agent.utils.add_src_to_path": {"fullname": "personal_agent.utils.add_src_to_path", "modulename": "personal_agent.utils", "qualname": "add_src_to_path", "kind": "function", "doc": "<p>Adds the project's 'src' directory to the Python path to allow for absolute imports.\nThis is useful for scripts in subdirectories like tests/ or scripts/ that need to\nimport from the <code>personal_agent</code> package before it might be installed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"fullname": "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL", "modulename": "personal_agent.utils.cleanup", "qualname": "DEFAULT_LOG_LEVEL", "kind": "variable", "doc": "<p></p>\n", "default_value": "20"}, "personal_agent.utils.cleanup.weaviate_client": {"fullname": "personal_agent.utils.cleanup.weaviate_client", "modulename": "personal_agent.utils.cleanup", "qualname": "weaviate_client", "kind": "variable", "doc": "<p></p>\n", "annotation": ": weaviate.client.WeaviateClient", "default_value": "None"}, "personal_agent.utils.cleanup.vector_store": {"fullname": "personal_agent.utils.cleanup.vector_store", "modulename": "personal_agent.utils.cleanup", "qualname": "vector_store", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "personal_agent.utils.cleanup.mcp_client": {"fullname": "personal_agent.utils.cleanup.mcp_client", "modulename": "personal_agent.utils.cleanup", "qualname": "mcp_client", "kind": "variable", "doc": "<p></p>\n", "annotation": ": personal_agent.core.mcp_client.SimpleMCPClient", "default_value": "None"}, "personal_agent.utils.cleanup.logger": {"fullname": "personal_agent.utils.cleanup.logger", "modulename": "personal_agent.utils.cleanup", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "annotation": ": logging.Logger", "default_value": "&lt;Logger __name__ (INFO)&gt;"}, "personal_agent.utils.cleanup.inject_dependencies": {"fullname": "personal_agent.utils.cleanup.inject_dependencies", "modulename": "personal_agent.utils.cleanup", "qualname": "inject_dependencies", "kind": "function", "doc": "<p>Inject dependencies for cleanup functions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">weaviate_cli</span>, </span><span class=\"param\"><span class=\"n\">vec_store</span>, </span><span class=\"param\"><span class=\"n\">mcp_cli</span>, </span><span class=\"param\"><span class=\"n\">log</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.cleanup.cleanup": {"fullname": "personal_agent.utils.cleanup.cleanup", "modulename": "personal_agent.utils.cleanup", "qualname": "cleanup", "kind": "function", "doc": "<p>Clean up resources on shutdown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.cleanup.signal_handler": {"fullname": "personal_agent.utils.cleanup.signal_handler", "modulename": "personal_agent.utils.cleanup", "qualname": "signal_handler", "kind": "function", "doc": "<p>Handle shutdown signals gracefully.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">signum</span>, </span><span class=\"param\"><span class=\"n\">frame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"fullname": "personal_agent.utils.cleanup.register_cleanup_handlers", "modulename": "personal_agent.utils.cleanup", "qualname": "register_cleanup_handlers", "kind": "function", "doc": "<p>Register cleanup functions and signal handlers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.web": {"fullname": "personal_agent.web", "modulename": "personal_agent.web", "kind": "module", "doc": "<p>Web interface package for the Personal AI Agent.</p>\n\n<p>This package provides Flask-based web interfaces for both LangChain and smolagents.</p>\n"}, "personal_agent.web.create_app": {"fullname": "personal_agent.web.create_app", "modulename": "personal_agent.web", "qualname": "create_app", "kind": "function", "doc": "<p>Create and configure the Flask application.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured Flask application</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">Flask</span>:</span></span>", "funcdef": "def"}, "personal_agent.web.register_routes": {"fullname": "personal_agent.web.register_routes", "modulename": "personal_agent.web", "qualname": "register_routes", "kind": "function", "doc": "<p>Register Flask routes with the LangChain-compatible application.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>flask_app</strong>:  Flask application instance</li>\n<li><strong>executor</strong>:  LangChain agent executor</li>\n<li><strong>log</strong>:  Logger instance</li>\n<li><strong>query_kb_func</strong>:  Function to query knowledge base</li>\n<li><strong>store_int_func</strong>:  Function to store interactions</li>\n<li><strong>clear_kb_func</strong>:  Function to clear knowledge base</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">flask_app</span><span class=\"p\">:</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">Flask</span>,</span><span class=\"param\">\t<span class=\"n\">executor</span>,</span><span class=\"param\">\t<span class=\"n\">log</span>,</span><span class=\"param\">\t<span class=\"n\">query_kb_func</span>,</span><span class=\"param\">\t<span class=\"n\">store_int_func</span>,</span><span class=\"param\">\t<span class=\"n\">clear_kb_func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.web.create_smol_app": {"fullname": "personal_agent.web.create_smol_app", "modulename": "personal_agent.web", "qualname": "create_smol_app", "kind": "function", "doc": "<p>Create and configure the Flask application.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Configured Flask application</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">Flask</span>:</span></span>", "funcdef": "def"}, "personal_agent.web.register_smol_routes": {"fullname": "personal_agent.web.register_smol_routes", "modulename": "personal_agent.web", "qualname": "register_smol_routes", "kind": "function", "doc": "<p>Register Flask routes with the smolagents-compatible application.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>flask_app</strong>:  Flask application instance</li>\n<li><strong>agent</strong>:  Primary agent (MultiAgentSystem or ToolCallingAgent)</li>\n<li><strong>log</strong>:  Logger instance</li>\n<li><strong>query_kb_func</strong>:  Function to query knowledge base</li>\n<li><strong>store_int_func</strong>:  Function to store interactions</li>\n<li><strong>clear_kb_func</strong>:  Function to clear knowledge base</li>\n<li><strong>fallback_agent</strong>:  Optional fallback single agent</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">flask_app</span><span class=\"p\">:</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">Flask</span>,</span><span class=\"param\">\t<span class=\"n\">agent</span>,</span><span class=\"param\">\t<span class=\"n\">log</span>,</span><span class=\"param\">\t<span class=\"n\">query_kb_func</span>,</span><span class=\"param\">\t<span class=\"n\">store_int_func</span>,</span><span class=\"param\">\t<span class=\"n\">clear_kb_func</span>,</span><span class=\"param\">\t<span class=\"n\">fallback_agent</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.streamlit": {"fullname": "personal_agent.streamlit", "modulename": "personal_agent.streamlit", "kind": "module", "doc": "<p></p>\n"}, "personal_agent.streamlit.dashboard": {"fullname": "personal_agent.streamlit.dashboard", "modulename": "personal_agent.streamlit.dashboard", "kind": "module", "doc": "<p>Memory &amp; User Management Dashboard</p>\n\n<p>A comprehensive Streamlit dashboard for managing memories, users, and Docker services\nin the Personal Agent system.</p>\n\n<p>Author: Personal Agent Development Team</p>\n"}, "personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"fullname": "personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME", "modulename": "personal_agent.streamlit.dashboard", "qualname": "SESSION_KEY_DARK_THEME", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;dark_theme&#x27;"}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"fullname": "personal_agent.streamlit.dashboard.apply_custom_theme", "modulename": "personal_agent.streamlit.dashboard", "qualname": "apply_custom_theme", "kind": "function", "doc": "<p>Apply custom CSS for theme switching.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.streamlit.dashboard.initialize_session_state": {"fullname": "personal_agent.streamlit.dashboard.initialize_session_state", "modulename": "personal_agent.streamlit.dashboard", "qualname": "initialize_session_state", "kind": "function", "doc": "<p>Initialize session state variables.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "personal_agent.streamlit.dashboard.main": {"fullname": "personal_agent.streamlit.dashboard.main", "modulename": "personal_agent.streamlit.dashboard", "qualname": "main", "kind": "function", "doc": "<p>Main dashboard application.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"personal_agent": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 157}, "personal_agent.mcp_client": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.logger": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.cli_main": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 13}, "personal_agent.run_agno_cli": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 49}, "personal_agent.run_agno_cli_wrapper": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 70}, "personal_agent.cli": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "personal_agent.cli.run_agno_cli": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 49}, "personal_agent.cli.show_all_memories": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 17}, "personal_agent.cli.show_memories_by_topic_cli": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 18}, "personal_agent.cli.show_memory_analysis": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 15}, "personal_agent.cli.show_memory_stats": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 14}, "personal_agent.cli.clear_all_memories": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 15}, "personal_agent.cli.store_immediate_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 41}, "personal_agent.cli.delete_memory_by_id_cli": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 16}, "personal_agent.cli.delete_memories_by_topic_cli": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 13}, "personal_agent.config": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "personal_agent.config.AGNO_KNOWLEDGE_DIR": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.AGNO_STORAGE_DIR": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.BASE_DIR": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.DATA_DIR": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.USER_DATA_DIR": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.HOME_DIR": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.PERSAG_HOME": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.PERSAG_ROOT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.REPO_DIR": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.ROOT_DIR": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.STORAGE_BACKEND": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_PORT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_SERVER": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LIGHTRAG_URL": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LLM_MODEL": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LMSTUDIO_URL": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.OLLAMA_URL": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.REMOTE_LMSTUDIO_URL": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.REMOTE_OLLAMA_URL": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.WEAVIATE_URL": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.EMBEDDING_TIMEOUT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.HTTPX_TIMEOUT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LLM_TIMEOUT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.OLLAMA_NUM_PREDICT": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.OLLAMA_TEMPERATURE": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.OLLAMA_TIMEOUT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.PDF_CHUNK_SIZE": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LOG_LEVEL": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.LOG_LEVEL_STR": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.PORT": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.PROVIDER": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.SHOW_SPLASH_SCREEN": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.USE_MCP": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.USE_WEAVIATE": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.MCP_SERVERS": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 280, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.config.get_current_user_id": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 56}, "personal_agent.config.get_env_bool": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 73}, "personal_agent.config.get_env_var": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 81}, "personal_agent.config.get_mcp_servers": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 7}, "personal_agent.config.get_package_version": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 54}, "personal_agent.config.get_qwen_instruct_settings": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 20}, "personal_agent.config.get_qwen_thinking_settings": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 20}, "personal_agent.config.get_settings": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "personal_agent.config.get_user_storage_paths": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 102}, "personal_agent.config.get_userid": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 53}, "personal_agent.config.load_user_from_file": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 112}, "personal_agent.config.refresh_user_dependent_settings": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 70}, "personal_agent.core": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "personal_agent.core.SimpleMCPClient": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "personal_agent.core.SimpleMCPClient.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "personal_agent.core.SimpleMCPClient.server_configs": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SimpleMCPClient.active_servers": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 9}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 11}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 11}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 8}, "personal_agent.core.SimpleMCPClient.start_servers": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 8}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 8}, "personal_agent.core.setup_weaviate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 29}, "personal_agent.core.is_weaviate_connected": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 28}, "personal_agent.core.reset_weaviate_if_corrupted": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 32}, "personal_agent.core.is_agno_storage_connected": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 31}, "personal_agent.core.is_memory_connected": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 30}, "personal_agent.core.create_agent_executor": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 12}, "personal_agent.core.create_simple_personal_agent": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 88}, "personal_agent.core.load_agent_knowledge": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 47}, "personal_agent.core.AgentKnowledgeManager": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "personal_agent.core.AgentKnowledgeManager.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 39}, "personal_agent.core.AgentKnowledgeManager.user_id": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 43}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 34}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 32}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 31}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 25}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 44}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 29}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 30}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 37}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 39}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 18}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 36}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 18}, "personal_agent.core.AgentMemoryManager": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "personal_agent.core.AgentMemoryManager.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 52}, "personal_agent.core.AgentMemoryManager.user_id": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentMemoryManager.storage_dir": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentMemoryManager.agno_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentMemoryManager.enable_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentMemoryManager.initialize": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 20}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 37}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 50}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 56}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 42}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 33}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 65}, "personal_agent.core.AgentMemoryManager.query_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 39}, "personal_agent.core.AgentMemoryManager.update_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 42}, "personal_agent.core.AgentMemoryManager.delete_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 31}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 33}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 16}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 15}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 41}, "personal_agent.core.AgentMemoryManager.list_memories": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 74}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 80}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 91, "bases": 0, "doc": 100}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 54}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 21}, "personal_agent.core.AgentModelManager": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "personal_agent.core.AgentModelManager.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 37}, "personal_agent.core.AgentModelManager.model_provider": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentModelManager.model_name": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentModelManager.ollama_base_url": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentModelManager.seed": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AgentModelManager.create_model": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 34}, "personal_agent.core.MultiAgentSystem": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 67}, "personal_agent.core.MultiAgentSystem.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 38}, "personal_agent.core.MultiAgentSystem.model": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.MultiAgentSystem.mcp_client": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.MultiAgentSystem.vector_store": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.MultiAgentSystem.tool_groups": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.MultiAgentSystem.agent": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.MultiAgentSystem.run": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 34}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 26}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 23}, "personal_agent.core.create_multi_agent_system": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 52}, "personal_agent.core.create_smolagents_executor": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 88}, "personal_agent.core.create_smolagents_model": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 22}, "personal_agent.core.create_agno_storage": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 44}, "personal_agent.core.create_agno_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 144}, "personal_agent.core.create_combined_knowledge_base": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 82}, "personal_agent.core.load_combined_knowledge_base": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 40}, "personal_agent.core.load_lightrag_knowledge_base": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 42}, "personal_agent.core.AntiDuplicateMemory": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 40}, "personal_agent.core.AntiDuplicateMemory.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 215, "bases": 0, "doc": 120}, "personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AntiDuplicateMemory.debug_mode": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 67}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 134, "bases": 0, "doc": 80}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 62}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "personal_agent.core.create_anti_duplicate_memory": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 83, "bases": 0, "doc": 65}, "personal_agent.core.SemanticMemoryManager": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "personal_agent.core.SemanticMemoryManager.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 8}, "personal_agent.core.SemanticMemoryManager.model": {"qualname": 2, "fullname": 5, "annotation": 5, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManager.config": {"qualname": 2, "fullname": 5, "annotation": 8, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"qualname": 3, "fullname": 6, "annotation": 7, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"qualname": 3, "fullname": 6, "annotation": 8, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 8, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManager.add_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 153, "bases": 0, "doc": 93}, "personal_agent.core.SemanticMemoryManager.update_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 159, "bases": 0, "doc": 98}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 58}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 71}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 49}, "personal_agent.core.SemanticMemoryManager.search_memories": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 194, "bases": 0, "doc": 112}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 148, "bases": 0, "doc": 86}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 49}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 48}, "personal_agent.core.SemanticMemoryManager.process_input": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 95}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 140, "bases": 0, "doc": 133}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 140, "bases": 0, "doc": 35}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 140, "bases": 0, "doc": 135}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 140, "bases": 0, "doc": 130}, "personal_agent.core.SemanticMemoryManagerConfig": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 9}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"qualname": 3, "fullname": 6, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "personal_agent.core.SemanticDuplicateDetector": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 62}, "personal_agent.core.create_semantic_memory_manager": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 165, "bases": 0, "doc": 95}, "personal_agent.core.KnowledgeCoordinator": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 37}, "personal_agent.core.KnowledgeCoordinator.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 27}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.KnowledgeCoordinator.debug": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.KnowledgeCoordinator.routing_stats": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 90, "bases": 0, "doc": 99}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 16}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 6}, "personal_agent.core.create_knowledge_coordinator": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 33}, "personal_agent.core.extract_entities": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 13}, "personal_agent.core.extract_relationships": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 27}, "personal_agent.core.StructuredResponse": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "personal_agent.core.StructuredResponse.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 147, "bases": 0, "doc": 3}, "personal_agent.core.StructuredResponse.content": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.StructuredResponse.tool_calls": {"qualname": 3, "fullname": 6, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.StructuredResponse.metadata": {"qualname": 2, "fullname": 5, "annotation": 7, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.StructuredResponse.error": {"qualname": 2, "fullname": 5, "annotation": 7, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.StructuredResponse.has_tool_calls": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "personal_agent.core.StructuredResponse.tool_calls_count": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "personal_agent.core.StructuredResponseParser": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 290, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.StructuredResponseParser.parse": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 29}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 22}, "personal_agent.core.ToolCall": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "personal_agent.core.ToolCall.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 3}, "personal_agent.core.ToolCall.function_name": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.ToolCall.arguments": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.ToolCall.reasoning": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.ResponseMetadata": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "personal_agent.core.ResponseMetadata.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 3}, "personal_agent.core.ResponseMetadata.confidence": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.ResponseMetadata.sources": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.ResponseMetadata.response_type": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 5, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.ResponseError": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "personal_agent.core.ResponseError.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "personal_agent.core.ResponseError.code": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.ResponseError.message": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.ResponseError.recoverable": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.get_ollama_format_schema": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 23}, "personal_agent.core.create_structured_instructions": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 28}, "personal_agent.core.TopicClassifier": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.TopicClassifier.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "personal_agent.core.TopicClassifier.stopwords": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.TopicClassifier.confidence_threshold": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.TopicClassifier.keyword_weight": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.TopicClassifier.phrase_weight": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.TopicClassifier.load_config": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "personal_agent.core.TopicClassifier.clean_text": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "personal_agent.core.TopicClassifier.classify": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 49}, "personal_agent.core.RuleSet": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 4}, "personal_agent.core.RuleSet.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "personal_agent.core.RuleSet.keywords": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.RuleSet.patterns": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.UserManager": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "personal_agent.core.UserManager.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 41}, "personal_agent.core.UserManager.registry": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.UserManager.lightrag_manager": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.UserManager.get_all_users": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 20}, "personal_agent.core.UserManager.get_user": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 27}, "personal_agent.core.UserManager.create_user": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 44}, "personal_agent.core.UserManager.switch_user": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 46}, "personal_agent.core.UserManager.delete_user": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 64}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 17}, "personal_agent.core.UserManager.get_lightrag_status": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 16}, "personal_agent.core.UserManager.ensure_current_user_registered": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 25}, "personal_agent.core.UserManager.update_user": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 30}, "personal_agent.core.UserManager.get_user_details": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 28}, "personal_agent.core.UserRegistry": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "personal_agent.core.UserRegistry.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 30}, "personal_agent.core.UserRegistry.registry_file": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.UserRegistry.add_user": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 50}, "personal_agent.core.UserRegistry.get_all_users": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 16}, "personal_agent.core.UserRegistry.get_user": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 27}, "personal_agent.core.UserRegistry.remove_user": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 29}, "personal_agent.core.UserRegistry.update_last_seen": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 31}, "personal_agent.core.UserRegistry.update_user": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 36}, "personal_agent.core.UserRegistry.user_exists": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 27}, "personal_agent.core.UserRegistry.get_current_user": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 27}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 30}, "personal_agent.core.LightRAGManager": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "personal_agent.core.LightRAGManager.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 21}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.LightRAGManager.project_root": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 35}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 48}, "personal_agent.core.LightRAGManager.get_service_status": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 21}, "personal_agent.core.LightRAGManager.stop_services": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 14}, "personal_agent.core.LightRAGManager.start_services": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 27}, "personal_agent.core.DockerIntegrationManager": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "personal_agent.core.DockerIntegrationManager.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 25}, "personal_agent.core.DockerIntegrationManager.user_id": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.DockerIntegrationManager.base_dir": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 22}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 33}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 18}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 62}, "personal_agent.core.check_docker_user_consistency": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 39}, "personal_agent.core.ensure_docker_user_consistency": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 74}, "personal_agent.core.extract_content_from_smollm2_response": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 63}, "personal_agent.core.format_smollm2_system_prompt": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 31}, "personal_agent.core.is_smollm2_model": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 36}, "personal_agent.core.parse_smollm2_response": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 57}, "personal_agent.core.prepare_smollm2_messages": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 38}, "personal_agent.readers": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.readers.url_reader": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.readers.url_reader.reader": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 42, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.readers.web_reader": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "personal_agent.readers.web_reader.create_web_reader": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 10}, "personal_agent.readers.web_reader.read_website": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 9}, "personal_agent.team": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "personal_agent.team.create_basic_memory_agent": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 159, "bases": 0, "doc": 115}, "personal_agent.team.create_personal_agent_team": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 161, "bases": 0, "doc": 92}, "personal_agent.team.create_personal_agent_team_async": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 159, "bases": 0, "doc": 92}, "personal_agent.team.PersonalAgentTeamWrapper": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 139, "bases": 0, "doc": 77}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.team.PersonalAgentTeamWrapper.debug": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.team.PersonalAgentTeamWrapper.team": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 19}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 50}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 25}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 22}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 17}, "personal_agent.team.create_ollama_model": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 10}, "personal_agent.team.create_model": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 8}, "personal_agent.team.create_openai_model": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 9}, "personal_agent.team.create_memory_agent": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 13}, "personal_agent.team.create_team": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 14}, "personal_agent.team.cleanup_team": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "personal_agent.team.main": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 14}, "personal_agent.team.cli_main": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 11}, "personal_agent.team.create_web_research_agent": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 71}, "personal_agent.team.create_finance_agent": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 69}, "personal_agent.team.create_calculator_agent": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 69}, "personal_agent.team.create_file_operations_agent": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 71}, "personal_agent.team.create_pubmed_agent": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 71}, "personal_agent.team.create_knowledge_memory_agent": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 225, "bases": 0, "doc": 164}, "personal_agent.tools": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "personal_agent.tools.StreamlitMemoryHelper": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitMemoryHelper.agent": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "personal_agent.tools.StreamlitMemoryHelper.db": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 9}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 16}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 16}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 13}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "personal_agent.tools.StreamlitKnowledgeHelper": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitKnowledgeHelper.agent": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "personal_agent.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "personal_agent.utils.cleanup": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "personal_agent.utils.inject_dependencies": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 8}, "personal_agent.utils.register_cleanup_handlers": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "personal_agent.utils.setup_logging": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 78}, "personal_agent.utils.setup_logging_filters": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 14}, "personal_agent.utils.setup_agno_rich_logging": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 54}, "personal_agent.utils.configure_all_rich_logging": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 43}, "personal_agent.utils.configure_master_logger": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 50}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 35}, "personal_agent.utils.list_all_loggers": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 27}, "personal_agent.utils.list_handlers": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 48}, "personal_agent.utils.set_logger_level": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 77}, "personal_agent.utils.set_logger_level_for_module": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 114}, "personal_agent.utils.set_logging_level_for_all_handlers": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 36}, "personal_agent.utils.toggle_stream_handler": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 48}, "personal_agent.utils.store_fact_in_knowledge_base": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 55}, "personal_agent.utils.add_src_to_path": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 45}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.utils.cleanup.weaviate_client": {"qualname": 2, "fullname": 6, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.utils.cleanup.vector_store": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.utils.cleanup.mcp_client": {"qualname": 2, "fullname": 6, "annotation": 7, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.utils.cleanup.logger": {"qualname": 1, "fullname": 5, "annotation": 3, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.utils.cleanup.inject_dependencies": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 8}, "personal_agent.utils.cleanup.cleanup": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 8}, "personal_agent.utils.cleanup.signal_handler": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 7}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "personal_agent.web": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "personal_agent.web.create_app": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 21}, "personal_agent.web.register_routes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 77}, "personal_agent.web.create_smol_app": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 21}, "personal_agent.web.register_smol_routes": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 90}, "personal_agent.streamlit": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.streamlit.dashboard": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 9}, "personal_agent.streamlit.dashboard.initialize_session_state": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 7}, "personal_agent.streamlit.dashboard.main": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 6}}, "length": 423, "save": true}, "index": {"qualname": {"root": {"docs": {"personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.RuleSet.__init__": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1}}, "df": 22, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.mcp_client": {"tf": 1}, "personal_agent.config.USE_MCP": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.core.MultiAgentSystem.mcp_client": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.cli_main": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}, "personal_agent.streamlit.dashboard.main": {"tf": 1}}, "df": 4}}, "x": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.UserManager.lightrag_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.configure_master_logger": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1}}, "df": 23}}}, "y": {"docs": {"personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.agno_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.enable_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 49}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.StructuredResponse.metadata": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseError.message": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}}, "df": 2, "l": {"docs": {"personal_agent.config.LLM_MODEL": {"tf": 1}, "personal_agent.core.AgentModelManager.model_provider": {"tf": 1}, "personal_agent.core.AgentModelManager.model_name": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.MultiAgentSystem.model": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}}, "df": 14}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.core.create_multi_agent_system": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.model": {"tf": 1}, "personal_agent.core.MultiAgentSystem.mcp_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.vector_store": {"tf": 1}, "personal_agent.core.MultiAgentSystem.tool_groups": {"tf": 1}, "personal_agent.core.MultiAgentSystem.agent": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.cli_main": {"tf": 1}, "personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.mcp_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.mcp_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1}}, "df": 5}, "n": {"docs": {"personal_agent.core.TopicClassifier.clean_text": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.team.cleanup_team": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.cleanup.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}}, "df": 3}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent.core.SimpleMCPClient.server_configs": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseMetadata.confidence": {"tf": 1}, "personal_agent.core.TopicClassifier.confidence_threshold": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.StructuredResponse.content": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 5}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_knowledge_coordinator": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseError.code": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.team.create_calculator_agent": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}}, "df": 34}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.LOG_LEVEL": {"tf": 1}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.logger": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}}, "df": 5, "s": {"docs": {"personal_agent.utils.list_all_loggers": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1}, "personal_agent.config.LIGHTRAG_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"tf": 1}, "personal_agent.core.UserManager.lightrag_manager": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}}, "df": 23, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.project_root": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}}, "df": 10}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}}, "df": 5}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.config.LLM_MODEL": {"tf": 1}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.config.LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.LOG_LEVEL": {"tf": 1}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}}, "df": 6}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.RuleSet": {"tf": 1}, "personal_agent.core.RuleSet.__init__": {"tf": 1}, "personal_agent.core.RuleSet.keywords": {"tf": 1}, "personal_agent.core.RuleSet.patterns": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.PERSAG_ROOT": {"tf": 1}, "personal_agent.config.ROOT_DIR": {"tf": 1}, "personal_agent.core.LightRAGManager.project_root": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.KnowledgeCoordinator.routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.config.REPO_DIR": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.UserRegistry.remove_user": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.ToolCall.reasoning": {"tf": 1}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.team.create_web_research_agent": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.ResponseMetadata": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.confidence": {"tf": 1}, "personal_agent.core.ResponseMetadata.sources": {"tf": 1}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1}}, "df": 6}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.ResponseError.code": {"tf": 1}, "personal_agent.core.ResponseError.message": {"tf": 1}, "personal_agent.core.ResponseError.recoverable": {"tf": 1}}, "df": 5}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}}, "df": 2}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseError.recoverable": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.UserManager.registry": {"tf": 1}, "personal_agent.core.UserRegistry.registry_file": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.AgentMemoryManager.agno_memory": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 12}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.MultiAgentSystem.agent": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.agent": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.agent": {"tf": 1}}, "df": 19, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.user_id": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}}, "df": 21}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentMemoryManager.agno_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.enable_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}}, "df": 27}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentModelManager": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.model_provider": {"tf": 1}, "personal_agent.core.AgentModelManager.model_name": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.AgentModelManager.seed": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 13}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.core.create_anti_duplicate_memory": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}}, "df": 12}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SimpleMCPClient.active_servers": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 8}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.ToolCall.arguments": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.team.create_personal_agent_team_async": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.WEAVIATE_URL": {"tf": 1}, "personal_agent.config.USE_WEAVIATE": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.TopicClassifier.keyword_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.phrase_weight": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {"personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}}, "df": 8}, "u": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 3}}, "e": {"docs": {"personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.MultiAgentSystem.vector_store": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.utils.cleanup.vector_store": {"tf": 1}}, "df": 6}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.config.STORAGE_BACKEND": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentMemoryManager.storage_dir": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"tf": 1}}, "df": 10}}}}, "p": {"docs": {"personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.TopicClassifier.stopwords": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"personal_agent.config.LOG_LEVEL_STR": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.create_structured_instructions": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.StructuredResponse.content": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}}, "df": 8, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.StructuredResponseParser": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.tools.StreamlitMemoryHelper": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 14}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.tools.StreamlitKnowledgeHelper": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.agent": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.LIGHTRAG_SERVER": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}, "personal_agent.core.SimpleMCPClient.server_configs": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}}, "df": 6, "s": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.active_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentModelManager.seed": {"tf": 1}}, "df": 2}, "n": {"docs": {"personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 21, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.SimpleMCPClient.server_configs": {"tf": 1}, "personal_agent.core.SimpleMCPClient.active_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.utils.cleanup.signal_handler": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 8}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}}, "df": 4}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.web.create_smol_app": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "m": {"2": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 5}, "docs": {}, "df": 0}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.ResponseMetadata.sources": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.UserManager.switch_user": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.BASE_DIR": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.base_dir": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 12}, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.team.create_basic_memory_agent": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.STORAGE_BACKEND": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.TopicClassifier": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.stopwords": {"tf": 1}, "personal_agent.core.TopicClassifier.confidence_threshold": {"tf": 1}, "personal_agent.core.TopicClassifier.keyword_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.phrase_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}, "personal_agent.core.TopicClassifier.clean_text": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 9}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.MultiAgentSystem.tool_groups": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}}, "df": 6, "s": {"docs": {"personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.ToolCall": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ToolCall.function_name": {"tf": 1}, "personal_agent.core.ToolCall.arguments": {"tf": 1}, "personal_agent.core.ToolCall.reasoning": {"tf": 1}}, "df": 5}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.toggle_stream_handler": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1}}, "df": 8}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.TopicClassifier.clean_text": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.team": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.cleanup_team": {"tf": 1}}, "df": 5}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_qwen_thinking_settings": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"tf": 1}, "personal_agent.core.TopicClassifier.confidence_threshold": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseMetadata.response_type": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.user_id": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"tf": 1}}, "df": 7}, "n": {"docs": {"personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.create_structured_instructions": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.RuleSet.__init__": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1}}, "df": 22, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}}, "df": 2}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}}, "df": 5}, "f": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}}, "df": 9}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}}, "df": 2}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}}, "df": 4}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.debug": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.debug": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.UserManager.get_user_details": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.config.BASE_DIR": {"tf": 1}, "personal_agent.config.DATA_DIR": {"tf": 1}, "personal_agent.config.USER_DATA_DIR": {"tf": 1}, "personal_agent.config.HOME_DIR": {"tf": 1}, "personal_agent.config.REPO_DIR": {"tf": 1}, "personal_agent.config.ROOT_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentMemoryManager.storage_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.base_dir": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"tf": 1}}, "df": 20, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.config.DATA_DIR": {"tf": 1}, "personal_agent.config.USER_DATA_DIR": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.base_dir": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 15, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.debug": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1}}, "df": 1}}, "y": {"docs": {"personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.TopicClassifier.keyword_weight": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.RuleSet.keywords": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.USE_MCP": {"tf": 1}, "personal_agent.config.USE_WEAVIATE": {"tf": 1}}, "df": 2, "r": {"docs": {"personal_agent.config.USER_DATA_DIR": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.user_id": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"tf": 1}}, "df": 32, "i": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.get_userid": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.UserManager": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserManager.registry": {"tf": 1}, "personal_agent.core.UserManager.lightrag_manager": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}}, "df": 14}}}}}}}, "s": {"docs": {"personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.registry_file": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 12}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1}, "personal_agent.config.LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.OLLAMA_URL": {"tf": 1}, "personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}, "personal_agent.config.WEAVIATE_URL": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}}, "df": 14}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}}, "df": 10, "d": {"docs": {"personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.HOME_DIR": {"tf": 1}, "personal_agent.config.PERSAG_HOME": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "x": {"docs": {"personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.cleanup.signal_handler": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}}, "df": 5}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.PERSAG_HOME": {"tf": 1}, "personal_agent.config.PERSAG_ROOT": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.debug": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.team": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}}, "df": 15}}}}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_PORT": {"tf": 1}, "personal_agent.config.PORT": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.PROVIDER": {"tf": 1}, "personal_agent.core.AgentModelManager.model_provider": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}}, "df": 2}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.LightRAGManager.project_root": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.RuleSet.patterns": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.TopicClassifier.phrase_weight": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.team.create_pubmed_agent": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.config.OLLAMA_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1}, "personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1}, "personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}}, "df": 10}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.team.create_openai_model": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.team.create_file_operations_agent": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.extract_entities": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.enable_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}}, "df": 7}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 4}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.StructuredResponse.error": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentModelManager.model_name": {"tf": 1}, "personal_agent.core.ToolCall.function_name": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 40}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.MultiAgentSystem.tool_groups": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.MultiAgentSystem.vector_store": {"tf": 1}, "personal_agent.utils.cleanup.vector_store": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.UserRegistry.registry_file": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.utils.setup_logging_filters": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.team.create_finance_agent": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.ToolCall.function_name": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}}, "df": 2}}}}}}}}, "fullname": {"root": {"docs": {"personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.RuleSet.__init__": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1}}, "df": 22, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.mcp_client": {"tf": 1}, "personal_agent.logger": {"tf": 1}, "personal_agent.cli_main": {"tf": 1}, "personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.config": {"tf": 1}, "personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.config.BASE_DIR": {"tf": 1}, "personal_agent.config.DATA_DIR": {"tf": 1}, "personal_agent.config.USER_DATA_DIR": {"tf": 1}, "personal_agent.config.HOME_DIR": {"tf": 1}, "personal_agent.config.PERSAG_HOME": {"tf": 1}, "personal_agent.config.PERSAG_ROOT": {"tf": 1}, "personal_agent.config.REPO_DIR": {"tf": 1}, "personal_agent.config.ROOT_DIR": {"tf": 1}, "personal_agent.config.STORAGE_BACKEND": {"tf": 1}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1}, "personal_agent.config.LIGHTRAG_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1}, "personal_agent.config.LLM_MODEL": {"tf": 1}, "personal_agent.config.LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.OLLAMA_URL": {"tf": 1}, "personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}, "personal_agent.config.WEAVIATE_URL": {"tf": 1}, "personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1}, "personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1}, "personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1}, "personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1}, "personal_agent.config.LOG_LEVEL": {"tf": 1}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1}, "personal_agent.config.PORT": {"tf": 1}, "personal_agent.config.PROVIDER": {"tf": 1}, "personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1}, "personal_agent.config.USE_MCP": {"tf": 1}, "personal_agent.config.USE_WEAVIATE": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core": {"tf": 1}, "personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.SimpleMCPClient.server_configs": {"tf": 1}, "personal_agent.core.SimpleMCPClient.active_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.user_id": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentMemoryManager.agno_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.enable_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentModelManager": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.model_provider": {"tf": 1}, "personal_agent.core.AgentModelManager.model_name": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.AgentModelManager.seed": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.model": {"tf": 1}, "personal_agent.core.MultiAgentSystem.mcp_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.vector_store": {"tf": 1}, "personal_agent.core.MultiAgentSystem.tool_groups": {"tf": 1}, "personal_agent.core.MultiAgentSystem.agent": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.debug": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.StructuredResponse.content": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.core.StructuredResponseParser": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.ToolCall": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ToolCall.function_name": {"tf": 1}, "personal_agent.core.ToolCall.arguments": {"tf": 1}, "personal_agent.core.ToolCall.reasoning": {"tf": 1}, "personal_agent.core.ResponseMetadata": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.confidence": {"tf": 1}, "personal_agent.core.ResponseMetadata.sources": {"tf": 1}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1}, "personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.ResponseError.code": {"tf": 1}, "personal_agent.core.ResponseError.message": {"tf": 1}, "personal_agent.core.ResponseError.recoverable": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.core.TopicClassifier": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.stopwords": {"tf": 1}, "personal_agent.core.TopicClassifier.confidence_threshold": {"tf": 1}, "personal_agent.core.TopicClassifier.keyword_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.phrase_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}, "personal_agent.core.TopicClassifier.clean_text": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.RuleSet": {"tf": 1}, "personal_agent.core.RuleSet.__init__": {"tf": 1}, "personal_agent.core.RuleSet.keywords": {"tf": 1}, "personal_agent.core.RuleSet.patterns": {"tf": 1}, "personal_agent.core.UserManager": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserManager.registry": {"tf": 1}, "personal_agent.core.UserManager.lightrag_manager": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.registry_file": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.project_root": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.base_dir": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.readers": {"tf": 1}, "personal_agent.readers.url_reader": {"tf": 1}, "personal_agent.readers.url_reader.reader": {"tf": 1}, "personal_agent.readers.web_reader": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.debug": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.team": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.cleanup_team": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.tools": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.agent": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.vector_store": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.signal_handler": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}, "personal_agent.web": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}, "personal_agent.streamlit": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}, "personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}, "personal_agent.streamlit.dashboard.main": {"tf": 1}}, "df": 423, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.debug": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.team": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}}, "df": 15}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.PERSAG_HOME": {"tf": 1}, "personal_agent.config.PERSAG_ROOT": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_PORT": {"tf": 1}, "personal_agent.config.PORT": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.PROVIDER": {"tf": 1}, "personal_agent.core.AgentModelManager.model_provider": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}}, "df": 2}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.LightRAGManager.project_root": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.RuleSet.patterns": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.TopicClassifier.phrase_weight": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.team.create_pubmed_agent": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.mcp_client": {"tf": 1}, "personal_agent.logger": {"tf": 1}, "personal_agent.cli_main": {"tf": 1}, "personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.config": {"tf": 1}, "personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.config.BASE_DIR": {"tf": 1}, "personal_agent.config.DATA_DIR": {"tf": 1}, "personal_agent.config.USER_DATA_DIR": {"tf": 1}, "personal_agent.config.HOME_DIR": {"tf": 1}, "personal_agent.config.PERSAG_HOME": {"tf": 1}, "personal_agent.config.PERSAG_ROOT": {"tf": 1}, "personal_agent.config.REPO_DIR": {"tf": 1}, "personal_agent.config.ROOT_DIR": {"tf": 1}, "personal_agent.config.STORAGE_BACKEND": {"tf": 1}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1}, "personal_agent.config.LIGHTRAG_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1}, "personal_agent.config.LLM_MODEL": {"tf": 1}, "personal_agent.config.LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.OLLAMA_URL": {"tf": 1}, "personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}, "personal_agent.config.WEAVIATE_URL": {"tf": 1}, "personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1}, "personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1}, "personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1}, "personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1}, "personal_agent.config.LOG_LEVEL": {"tf": 1}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1}, "personal_agent.config.PORT": {"tf": 1}, "personal_agent.config.PROVIDER": {"tf": 1}, "personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1}, "personal_agent.config.USE_MCP": {"tf": 1}, "personal_agent.config.USE_WEAVIATE": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core": {"tf": 1}, "personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.SimpleMCPClient.server_configs": {"tf": 1}, "personal_agent.core.SimpleMCPClient.active_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.create_agent_executor": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.load_agent_knowledge": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.user_id": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentMemoryManager.agno_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.enable_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentModelManager": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.model_provider": {"tf": 1}, "personal_agent.core.AgentModelManager.model_name": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.AgentModelManager.seed": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.model": {"tf": 1}, "personal_agent.core.MultiAgentSystem.mcp_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.vector_store": {"tf": 1}, "personal_agent.core.MultiAgentSystem.tool_groups": {"tf": 1}, "personal_agent.core.MultiAgentSystem.agent": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.debug": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.StructuredResponse.content": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.core.StructuredResponseParser": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.ToolCall": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ToolCall.function_name": {"tf": 1}, "personal_agent.core.ToolCall.arguments": {"tf": 1}, "personal_agent.core.ToolCall.reasoning": {"tf": 1}, "personal_agent.core.ResponseMetadata": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.confidence": {"tf": 1}, "personal_agent.core.ResponseMetadata.sources": {"tf": 1}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1}, "personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.ResponseError.code": {"tf": 1}, "personal_agent.core.ResponseError.message": {"tf": 1}, "personal_agent.core.ResponseError.recoverable": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.core.TopicClassifier": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.stopwords": {"tf": 1}, "personal_agent.core.TopicClassifier.confidence_threshold": {"tf": 1}, "personal_agent.core.TopicClassifier.keyword_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.phrase_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}, "personal_agent.core.TopicClassifier.clean_text": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.RuleSet": {"tf": 1}, "personal_agent.core.RuleSet.__init__": {"tf": 1}, "personal_agent.core.RuleSet.keywords": {"tf": 1}, "personal_agent.core.RuleSet.patterns": {"tf": 1}, "personal_agent.core.UserManager": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserManager.registry": {"tf": 1}, "personal_agent.core.UserManager.lightrag_manager": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.registry_file": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.project_root": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.base_dir": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.readers": {"tf": 1}, "personal_agent.readers.url_reader": {"tf": 1}, "personal_agent.readers.url_reader.reader": {"tf": 1}, "personal_agent.readers.web_reader": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.debug": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.team": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.cleanup_team": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_finance_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_calculator_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.tools": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.agent": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.agent": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.vector_store": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.signal_handler": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}, "personal_agent.web": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}, "personal_agent.streamlit": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}, "personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}, "personal_agent.streamlit.dashboard.main": {"tf": 1}}, "df": 423, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.user_id": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}}, "df": 21}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentMemoryManager.agno_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.enable_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}}, "df": 27}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentModelManager": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.model_provider": {"tf": 1}, "personal_agent.core.AgentModelManager.model_name": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.AgentModelManager.seed": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.AgentMemoryManager.agno_memory": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 12}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 13}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.core.create_anti_duplicate_memory": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}}, "df": 12}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SimpleMCPClient.active_servers": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 8}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.ToolCall.arguments": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.team.create_personal_agent_team_async": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.mcp_client": {"tf": 1}, "personal_agent.config.USE_MCP": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.core.MultiAgentSystem.mcp_client": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.cli_main": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}, "personal_agent.streamlit.dashboard.main": {"tf": 1}}, "df": 4}}, "x": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.UserManager.lightrag_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.configure_master_logger": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1}}, "df": 23}}}, "y": {"docs": {"personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.agno_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.enable_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 49}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.StructuredResponse.metadata": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseError.message": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}}, "df": 2, "l": {"docs": {"personal_agent.config.LLM_MODEL": {"tf": 1}, "personal_agent.core.AgentModelManager.model_provider": {"tf": 1}, "personal_agent.core.AgentModelManager.model_name": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.MultiAgentSystem.model": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}}, "df": 14}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.core.create_multi_agent_system": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.model": {"tf": 1}, "personal_agent.core.MultiAgentSystem.mcp_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.vector_store": {"tf": 1}, "personal_agent.core.MultiAgentSystem.tool_groups": {"tf": 1}, "personal_agent.core.MultiAgentSystem.agent": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.cli_main": {"tf": 1}, "personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1.4142135623730951}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1.4142135623730951}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1.4142135623730951}, "personal_agent.team.cli_main": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.mcp_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.mcp_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1}}, "df": 5}, "n": {"docs": {"personal_agent.core.TopicClassifier.clean_text": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.team.cleanup_team": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.vector_store": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.cleanup": {"tf": 1.4142135623730951}, "personal_agent.utils.cleanup.signal_handler": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1.4142135623730951}}, "df": 13}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config": {"tf": 1}, "personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.config.BASE_DIR": {"tf": 1}, "personal_agent.config.DATA_DIR": {"tf": 1}, "personal_agent.config.USER_DATA_DIR": {"tf": 1}, "personal_agent.config.HOME_DIR": {"tf": 1}, "personal_agent.config.PERSAG_HOME": {"tf": 1}, "personal_agent.config.PERSAG_ROOT": {"tf": 1}, "personal_agent.config.REPO_DIR": {"tf": 1}, "personal_agent.config.ROOT_DIR": {"tf": 1}, "personal_agent.config.STORAGE_BACKEND": {"tf": 1}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1}, "personal_agent.config.LIGHTRAG_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1}, "personal_agent.config.LLM_MODEL": {"tf": 1}, "personal_agent.config.LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.OLLAMA_URL": {"tf": 1}, "personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}, "personal_agent.config.WEAVIATE_URL": {"tf": 1}, "personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1}, "personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1}, "personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1}, "personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1}, "personal_agent.config.LOG_LEVEL": {"tf": 1}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1}, "personal_agent.config.PORT": {"tf": 1}, "personal_agent.config.PROVIDER": {"tf": 1}, "personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1}, "personal_agent.config.USE_MCP": {"tf": 1}, "personal_agent.config.USE_WEAVIATE": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}}, "df": 64, "s": {"docs": {"personal_agent.core.SimpleMCPClient.server_configs": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseMetadata.confidence": {"tf": 1}, "personal_agent.core.TopicClassifier.confidence_threshold": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.StructuredResponse.content": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 5}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core": {"tf": 1}, "personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.SimpleMCPClient.server_configs": {"tf": 1}, "personal_agent.core.SimpleMCPClient.active_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.user_id": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentMemoryManager.agno_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.enable_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentModelManager": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.model_provider": {"tf": 1}, "personal_agent.core.AgentModelManager.model_name": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.AgentModelManager.seed": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.model": {"tf": 1}, "personal_agent.core.MultiAgentSystem.mcp_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"tf": 1}, "personal_agent.core.MultiAgentSystem.vector_store": {"tf": 1}, "personal_agent.core.MultiAgentSystem.tool_groups": {"tf": 1}, "personal_agent.core.MultiAgentSystem.agent": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.debug": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.StructuredResponse.content": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.core.StructuredResponseParser": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.ToolCall": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ToolCall.function_name": {"tf": 1}, "personal_agent.core.ToolCall.arguments": {"tf": 1}, "personal_agent.core.ToolCall.reasoning": {"tf": 1}, "personal_agent.core.ResponseMetadata": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.confidence": {"tf": 1}, "personal_agent.core.ResponseMetadata.sources": {"tf": 1}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1}, "personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.ResponseError.code": {"tf": 1}, "personal_agent.core.ResponseError.message": {"tf": 1}, "personal_agent.core.ResponseError.recoverable": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.core.TopicClassifier": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.stopwords": {"tf": 1}, "personal_agent.core.TopicClassifier.confidence_threshold": {"tf": 1}, "personal_agent.core.TopicClassifier.keyword_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.phrase_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}, "personal_agent.core.TopicClassifier.clean_text": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.RuleSet": {"tf": 1}, "personal_agent.core.RuleSet.__init__": {"tf": 1}, "personal_agent.core.RuleSet.keywords": {"tf": 1}, "personal_agent.core.RuleSet.patterns": {"tf": 1}, "personal_agent.core.UserManager": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserManager.registry": {"tf": 1}, "personal_agent.core.UserManager.lightrag_manager": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.registry_file": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.project_root": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.base_dir": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 248}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_knowledge_coordinator": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseError.code": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.team.create_calculator_agent": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}}, "df": 34}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.LOG_LEVEL": {"tf": 1}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}}, "df": 3, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.logger": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}}, "df": 5, "s": {"docs": {"personal_agent.utils.list_all_loggers": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1}, "personal_agent.config.LIGHTRAG_PORT": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"tf": 1}, "personal_agent.core.UserManager.lightrag_manager": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}}, "df": 23, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.project_root": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}}, "df": 10}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}}, "df": 5}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.config.LLM_MODEL": {"tf": 1}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.config.LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.LOG_LEVEL": {"tf": 1}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}}, "df": 6}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}}, "df": 6}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.RuleSet": {"tf": 1}, "personal_agent.core.RuleSet.__init__": {"tf": 1}, "personal_agent.core.RuleSet.keywords": {"tf": 1}, "personal_agent.core.RuleSet.patterns": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.PERSAG_ROOT": {"tf": 1}, "personal_agent.config.ROOT_DIR": {"tf": 1}, "personal_agent.core.LightRAGManager.project_root": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.KnowledgeCoordinator.routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.config.REPO_DIR": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.UserRegistry.remove_user": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.readers.url_reader": {"tf": 1}, "personal_agent.readers.url_reader.reader": {"tf": 1.4142135623730951}, "personal_agent.readers.web_reader": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1.4142135623730951}, "personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 5, "s": {"docs": {"personal_agent.readers": {"tf": 1}, "personal_agent.readers.url_reader": {"tf": 1}, "personal_agent.readers.url_reader.reader": {"tf": 1}, "personal_agent.readers.web_reader": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.ToolCall.reasoning": {"tf": 1}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.team.create_web_research_agent": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.ResponseMetadata": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.confidence": {"tf": 1}, "personal_agent.core.ResponseMetadata.sources": {"tf": 1}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1}}, "df": 6}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.ResponseError.code": {"tf": 1}, "personal_agent.core.ResponseError.message": {"tf": 1}, "personal_agent.core.ResponseError.recoverable": {"tf": 1}}, "df": 5}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}}, "df": 2}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseError.recoverable": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.UserManager.registry": {"tf": 1}, "personal_agent.core.UserRegistry.registry_file": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.WEAVIATE_URL": {"tf": 1}, "personal_agent.config.USE_WEAVIATE": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.TopicClassifier.keyword_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.phrase_weight": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {"personal_agent.readers.web_reader": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1.4142135623730951}, "personal_agent.readers.web_reader.read_website": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.web": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 9, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}}, "df": 8}, "u": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 3}}, "e": {"docs": {"personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.MultiAgentSystem.vector_store": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.utils.cleanup.vector_store": {"tf": 1}}, "df": 6}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.config.STORAGE_BACKEND": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentMemoryManager.storage_dir": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"tf": 1}}, "df": 10}}}}, "p": {"docs": {"personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.TopicClassifier.stopwords": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"personal_agent.config.LOG_LEVEL_STR": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.create_structured_instructions": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.StructuredResponse.content": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}}, "df": 8, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.StructuredResponseParser": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.streamlit": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}, "personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}, "personal_agent.streamlit.dashboard.main": {"tf": 1}}, "df": 6, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.tools.StreamlitMemoryHelper": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 14}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.tools.StreamlitKnowledgeHelper": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.agent": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.LIGHTRAG_SERVER": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}, "personal_agent.core.SimpleMCPClient.server_configs": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}}, "df": 6, "s": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.active_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentModelManager.seed": {"tf": 1}}, "df": 2}, "n": {"docs": {"personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 21, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.SimpleMCPClient.server_configs": {"tf": 1}, "personal_agent.core.SimpleMCPClient.active_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.utils.cleanup.signal_handler": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 8}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}}, "df": 4}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.web.create_smol_app": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "m": {"2": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 5}, "docs": {}, "df": 0}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.ResponseMetadata.sources": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.UserManager.switch_user": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.BASE_DIR": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.base_dir": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 12}, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.team.create_basic_memory_agent": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.STORAGE_BACKEND": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.TopicClassifier": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.stopwords": {"tf": 1}, "personal_agent.core.TopicClassifier.confidence_threshold": {"tf": 1}, "personal_agent.core.TopicClassifier.keyword_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.phrase_weight": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}, "personal_agent.core.TopicClassifier.clean_text": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 9}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.MultiAgentSystem.tool_groups": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}}, "df": 6, "s": {"docs": {"personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.tools": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.agent": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}}, "df": 23}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.ToolCall": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ToolCall.function_name": {"tf": 1}, "personal_agent.core.ToolCall.arguments": {"tf": 1}, "personal_agent.core.ToolCall.reasoning": {"tf": 1}}, "df": 5}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.toggle_stream_handler": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1}}, "df": 8}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.TopicClassifier.clean_text": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.team": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.debug": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.team": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1.4142135623730951}, "personal_agent.team.cleanup_team": {"tf": 1.4142135623730951}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 33}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_qwen_thinking_settings": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"tf": 1}, "personal_agent.core.TopicClassifier.confidence_threshold": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseMetadata.response_type": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.user_id": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"tf": 1}}, "df": 7}, "n": {"docs": {"personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.create_structured_instructions": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.RuleSet.__init__": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1}}, "df": 22, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}}, "df": 2}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}}, "df": 5}, "f": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}}, "df": 9}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}}, "df": 2}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}}, "df": 4}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.debug": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.debug": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.UserManager.get_user_details": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.config.BASE_DIR": {"tf": 1}, "personal_agent.config.DATA_DIR": {"tf": 1}, "personal_agent.config.USER_DATA_DIR": {"tf": 1}, "personal_agent.config.HOME_DIR": {"tf": 1}, "personal_agent.config.REPO_DIR": {"tf": 1}, "personal_agent.config.ROOT_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"tf": 1}, "personal_agent.core.AgentMemoryManager.storage_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.base_dir": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"tf": 1}}, "df": 20, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.config.DATA_DIR": {"tf": 1}, "personal_agent.config.USER_DATA_DIR": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.streamlit.dashboard": {"tf": 1}, "personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}, "personal_agent.streamlit.dashboard.main": {"tf": 1}}, "df": 5}}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.base_dir": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 15, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.debug": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1}}, "df": 1}}, "y": {"docs": {"personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.TopicClassifier.keyword_weight": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.RuleSet.keywords": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.USE_MCP": {"tf": 1}, "personal_agent.config.USE_WEAVIATE": {"tf": 1}}, "df": 2, "r": {"docs": {"personal_agent.config.USER_DATA_DIR": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.user_id": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.user_id": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"tf": 1}}, "df": 32, "i": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.get_userid": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.UserManager": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserManager.registry": {"tf": 1}, "personal_agent.core.UserManager.lightrag_manager": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}}, "df": 14}}}}}}}, "s": {"docs": {"personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.registry_file": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 12}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1}, "personal_agent.config.LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.OLLAMA_URL": {"tf": 1}, "personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}, "personal_agent.config.WEAVIATE_URL": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"tf": 1}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"tf": 1}, "personal_agent.readers.url_reader": {"tf": 1}, "personal_agent.readers.url_reader.reader": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}}, "df": 16}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}}, "df": 10, "d": {"docs": {"personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.utils": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.vector_store": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.signal_handler": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}}, "df": 27}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.HOME_DIR": {"tf": 1}, "personal_agent.config.PERSAG_HOME": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "x": {"docs": {"personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.cleanup.signal_handler": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}}, "df": 5}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.config.OLLAMA_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1}, "personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1}, "personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}}, "df": 10}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.team.create_openai_model": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.team.create_file_operations_agent": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.extract_entities": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.enable_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}}, "df": 7}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 4}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.StructuredResponse.error": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentModelManager.model_name": {"tf": 1}, "personal_agent.core.ToolCall.function_name": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 40}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}}, "df": 7}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.MultiAgentSystem.tool_groups": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.MultiAgentSystem.vector_store": {"tf": 1}, "personal_agent.utils.cleanup.vector_store": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1}, "personal_agent.core.UserRegistry.registry_file": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.utils.setup_logging_filters": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.team.create_finance_agent": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.ToolCall.function_name": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}}, "df": 2}}}}}}}}, "annotation": {"root": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.StructuredResponse.content": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.core.ToolCall.function_name": {"tf": 1}, "personal_agent.core.ToolCall.arguments": {"tf": 1}, "personal_agent.core.ToolCall.reasoning": {"tf": 1}, "personal_agent.core.ResponseMetadata.confidence": {"tf": 1}, "personal_agent.core.ResponseMetadata.sources": {"tf": 1}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1}, "personal_agent.core.ResponseError.code": {"tf": 1}, "personal_agent.core.ResponseError.message": {"tf": 1}, "personal_agent.core.ResponseError.recoverable": {"tf": 1}, "personal_agent.core.RuleSet.keywords": {"tf": 1}, "personal_agent.core.RuleSet.patterns": {"tf": 1}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}}, "df": 34, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.ToolCall.reasoning": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.ResponseMetadata.confidence": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.ResponseError.recoverable": {"tf": 1}}, "df": 7}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 4}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 7}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.ToolCall.arguments": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.cleanup.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManager.config": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.StructuredResponse.content": {"tf": 1}, "personal_agent.core.ToolCall.function_name": {"tf": 1}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1}, "personal_agent.core.ResponseError.code": {"tf": 1}, "personal_agent.core.ResponseError.message": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}}, "df": 3}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.RuleSet.patterns": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.ResponseMetadata.sources": {"tf": 1}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1}, "personal_agent.core.RuleSet.keywords": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.cleanup.logger": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.cleanup.logger": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponse.tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.StructuredResponse.metadata": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.StructuredResponse.error": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.ToolCall.arguments": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.cleanup.weaviate_client": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.cleanup.weaviate_client": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "default_value": {"root": {"0": {"docs": {"personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 2}, "1": {"0": {"2": {"4": {"docs": {"personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"3": {"8": {"4": {"docs": {"personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}, "2": {"0": {"docs": {"personal_agent.config.LOG_LEVEL": {"tf": 1}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "3": {"6": {"0": {"0": {"docs": {"personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"docs": {"personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1}}, "df": 1}, "5": {"0": {"0": {"0": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"0": {"0": {"docs": {"personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"2": {"0": {"0": {"docs": {"personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"6": {"2": {"1": {"docs": {"personal_agent.config.LIGHTRAG_PORT": {"tf": 1}, "personal_agent.config.PORT": {"tf": 1}}, "df": 2}, "2": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"personal_agent.mcp_client": {"tf": 1.4142135623730951}, "personal_agent.logger": {"tf": 1.4142135623730951}, "personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.BASE_DIR": {"tf": 1}, "personal_agent.config.DATA_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.USER_DATA_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.PERSAG_HOME": {"tf": 1.4142135623730951}, "personal_agent.config.PERSAG_ROOT": {"tf": 1.4142135623730951}, "personal_agent.config.ROOT_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.STORAGE_BACKEND": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_PORT": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_SERVER": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1.4142135623730951}, "personal_agent.config.LMSTUDIO_URL": {"tf": 1.4142135623730951}, "personal_agent.config.OLLAMA_URL": {"tf": 1.4142135623730951}, "personal_agent.config.WEAVIATE_URL": {"tf": 1.4142135623730951}, "personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1.4142135623730951}, "personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1.4142135623730951}, "personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1.4142135623730951}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1.4142135623730951}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1.4142135623730951}, "personal_agent.config.PORT": {"tf": 1.4142135623730951}, "personal_agent.config.PROVIDER": {"tf": 1.4142135623730951}, "personal_agent.config.MCP_SERVERS": {"tf": 7.483314773547883}, "personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 8.94427190999916}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1.4142135623730951}, "personal_agent.readers.url_reader.reader": {"tf": 1.7320508075688772}, "personal_agent.utils.cleanup.logger": {"tf": 1.4142135623730951}, "personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1.4142135623730951}}, "df": 52, "l": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.mcp_client": {"tf": 1}, "personal_agent.logger": {"tf": 1}, "personal_agent.readers.url_reader.reader": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.logger": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.logger": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.config.LLM_MODEL": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.mcp_client": {"tf": 1}, "personal_agent.logger": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.PERSAG_HOME": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.logger": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.config.BASE_DIR": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 2}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.mcp_client": {"tf": 1}, "personal_agent.logger": {"tf": 1}, "personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.config.BASE_DIR": {"tf": 1}, "personal_agent.config.DATA_DIR": {"tf": 1}, "personal_agent.config.USER_DATA_DIR": {"tf": 1}, "personal_agent.config.PERSAG_ROOT": {"tf": 1}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 13}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.config.STORAGE_BACKEND": {"tf": 1}, "personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 2.449489742783178}}, "df": 1}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1.7320508075688772}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 2.23606797749979}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.7320508075688772}}, "df": 1}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}}, "df": 5}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.mcp_client": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 2.449489742783178}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1.7320508075688772}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.mcp_client": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.mcp_client": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.LLM_MODEL": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 2.449489742783178}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.mcp_client": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 2}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManager.config": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 2.8284271247461903}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.ResponseMetadata.response_type": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.mcp_client": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 2.23606797749979}, "personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}, "personal_agent.config.PROVIDER": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.mcp_client": {"tf": 1}, "personal_agent.logger": {"tf": 1}, "personal_agent.readers.url_reader.reader": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 2}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.logger": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.4142135623730951}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}, "personal_agent.config.DATA_DIR": {"tf": 1}, "personal_agent.config.USER_DATA_DIR": {"tf": 1}, "personal_agent.config.PERSAG_ROOT": {"tf": 1}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 10}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.PERSAG_HOME": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.BASE_DIR": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.logger": {"tf": 1}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1}, "personal_agent.utils.cleanup.logger": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "t": {"4": {"5": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"2": {"6": {"6": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"0": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "w": {"2": {"docs": {}, "df": 0, "s": {"7": {"0": {"1": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "x": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}}}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "x": {"2": {"7": {"docs": {"personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.BASE_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.DATA_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.USER_DATA_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.PERSAG_HOME": {"tf": 1.4142135623730951}, "personal_agent.config.PERSAG_ROOT": {"tf": 1.4142135623730951}, "personal_agent.config.ROOT_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.STORAGE_BACKEND": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_PORT": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_SERVER": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1.4142135623730951}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1.4142135623730951}, "personal_agent.config.LMSTUDIO_URL": {"tf": 1.4142135623730951}, "personal_agent.config.OLLAMA_URL": {"tf": 1.4142135623730951}, "personal_agent.config.WEAVIATE_URL": {"tf": 1.4142135623730951}, "personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1.4142135623730951}, "personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1.4142135623730951}, "personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1.4142135623730951}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1.4142135623730951}, "personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1.4142135623730951}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1.4142135623730951}, "personal_agent.config.PORT": {"tf": 1.4142135623730951}, "personal_agent.config.PROVIDER": {"tf": 1.4142135623730951}, "personal_agent.config.MCP_SERVERS": {"tf": 10.63014581273465}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 11.489125293076057}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1.4142135623730951}, "personal_agent.readers.url_reader.reader": {"tf": 4}, "personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1.4142135623730951}}, "df": 43}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.config.DATA_DIR": {"tf": 1}, "personal_agent.config.PERSAG_ROOT": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1.4142135623730951}}, "df": 3, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.config.USER_DATA_DIR": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.HOME_DIR": {"tf": 1}, "personal_agent.config.REPO_DIR": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 2.449489742783178}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}}, "df": 5}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.HOME_DIR": {"tf": 1}, "personal_agent.config.MCP_SERVERS": {"tf": 1.4142135623730951}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"1": {"1": {"4": {"3": {"4": {"docs": {"personal_agent.config.OLLAMA_URL": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"8": {"0": {"docs": {"personal_agent.config.WEAVIATE_URL": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"6": {"2": {"1": {"docs": {"personal_agent.config.LIGHTRAG_SERVER": {"tf": 1}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1}}, "df": 2}, "2": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"1": {"2": {"3": {"4": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"1": {"docs": {"personal_agent.config.LMSTUDIO_URL": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}, "r": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.config.REPO_DIR": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.4142135623730951}}, "df": 1}}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1}, "personal_agent.config.USE_WEAVIATE": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1.4142135623730951}}, "df": 8}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 2.8284271247461903}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}}, "df": 5}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.4142135623730951}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.USE_MCP": {"tf": 1}, "personal_agent.core.ResponseError.recoverable": {"tf": 1}, "personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 4.358898943540674}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "x": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 2.449489742783178}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1}, "personal_agent.core.StructuredResponse.error": {"tf": 1}, "personal_agent.core.ToolCall.reasoning": {"tf": 1}, "personal_agent.core.ResponseMetadata.confidence": {"tf": 1}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1}, "personal_agent.utils.cleanup.vector_store": {"tf": 1}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1}}, "df": 9, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1.4142135623730951}, "personal_agent.utils.cleanup.logger": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}}, "\\": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1}, "r": {"docs": {"personal_agent.readers.url_reader.reader": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 2.449489742783178}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.4142135623730951}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.7320508075688772}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"3": {"docs": {}, "df": 0, "s": {"3": {"docs": {}, "df": 0, "a": {"6": {"0": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "x": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1.4142135623730951}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.MCP_SERVERS": {"tf": 1}}, "df": 1}}}}}, "signature": {"root": {"0": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}}, "df": 10}, "1": {"0": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}}, "df": 6}, "docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}}, "df": 1}, "2": {"0": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "3": {"9": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_var": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 2}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 2}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 2}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1.4142135623730951}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.create_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.add_user": {"tf": 1.4142135623730951}, "personal_agent.team.create_basic_memory_agent": {"tf": 3.1622776601683795}, "personal_agent.team.create_personal_agent_team": {"tf": 3.1622776601683795}, "personal_agent.team.create_personal_agent_team_async": {"tf": 3.1622776601683795}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 3.1622776601683795}, "personal_agent.team.create_ollama_model": {"tf": 1.4142135623730951}, "personal_agent.team.create_model": {"tf": 2}, "personal_agent.team.create_openai_model": {"tf": 1.4142135623730951}, "personal_agent.team.create_web_research_agent": {"tf": 2.449489742783178}, "personal_agent.team.create_finance_agent": {"tf": 2.449489742783178}, "personal_agent.team.create_calculator_agent": {"tf": 2.449489742783178}, "personal_agent.team.create_file_operations_agent": {"tf": 2.449489742783178}, "personal_agent.team.create_pubmed_agent": {"tf": 2.449489742783178}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 3.7416573867739413}, "personal_agent.utils.setup_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.4142135623730951}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1.4142135623730951}}, "df": 29}, "docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}}, "df": 5}, "4": {"0": {"docs": {"personal_agent.utils.configure_master_logger": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 3}, "7": {"docs": {}, "df": 0, "b": {"docs": {"personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}}, "df": 3}}, "8": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}}, "df": 5}, "docs": {"personal_agent.cli_main": {"tf": 2.6457513110645907}, "personal_agent.run_agno_cli": {"tf": 7.681145747868608}, "personal_agent.run_agno_cli_wrapper": {"tf": 8.246211251235321}, "personal_agent.cli.run_agno_cli": {"tf": 7.681145747868608}, "personal_agent.cli.show_all_memories": {"tf": 6.6332495807108}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 7.280109889280518}, "personal_agent.cli.show_memory_analysis": {"tf": 6.6332495807108}, "personal_agent.cli.show_memory_stats": {"tf": 6.6332495807108}, "personal_agent.cli.clear_all_memories": {"tf": 6.6332495807108}, "personal_agent.cli.store_immediate_memory": {"tf": 7.280109889280518}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 7.280109889280518}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 7.280109889280518}, "personal_agent.config.get_current_user_id": {"tf": 2.6457513110645907}, "personal_agent.config.get_env_bool": {"tf": 5.477225575051661}, "personal_agent.config.get_env_var": {"tf": 5.656854249492381}, "personal_agent.config.get_mcp_servers": {"tf": 4.358898943540674}, "personal_agent.config.get_package_version": {"tf": 2.6457513110645907}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 3}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 3}, "personal_agent.config.get_settings": {"tf": 2.6457513110645907}, "personal_agent.config.get_user_storage_paths": {"tf": 2.6457513110645907}, "personal_agent.config.get_userid": {"tf": 3}, "personal_agent.config.load_user_from_file": {"tf": 2.6457513110645907}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 4.47213595499958}, "personal_agent.core.SimpleMCPClient.__init__": {"tf": 5.477225575051661}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 4.47213595499958}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 6.782329983125268}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 5.744562646538029}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 4.47213595499958}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 6.855654600401044}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 3.1622776601683795}, "personal_agent.core.setup_weaviate": {"tf": 3}, "personal_agent.core.is_weaviate_connected": {"tf": 3}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 3}, "personal_agent.core.is_agno_storage_connected": {"tf": 3}, "personal_agent.core.is_memory_connected": {"tf": 3}, "personal_agent.core.create_agent_executor": {"tf": 6.782329983125268}, "personal_agent.core.create_simple_personal_agent": {"tf": 8.366600265340756}, "personal_agent.core.load_agent_knowledge": {"tf": 5.0990195135927845}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 7.874007874011811}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 7.0710678118654755}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 7.280109889280518}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 6}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 6.48074069840786}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 5.5677643628300215}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 6.782329983125268}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 5}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 5.291502622129181}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 7.416198487095663}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 7.615773105863909}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 3.4641016151377544}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 3.4641016151377544}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 4.47213595499958}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 9.273618495495704}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 3.7416573867739413}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 6.782329983125268}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 8.660254037844387}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 4.47213595499958}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 5.291502622129181}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 4.47213595499958}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 3.4641016151377544}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 6.244997998398398}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 8}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 4.47213595499958}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 5.0990195135927845}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 3.4641016151377544}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 3.4641016151377544}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 8.12403840463596}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 3.4641016151377544}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 8.366600265340756}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 8.426149773176359}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 3.4641016151377544}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 5.744562646538029}, "personal_agent.core.AgentModelManager.__init__": {"tf": 7.14142842854285}, "personal_agent.core.AgentModelManager.create_model": {"tf": 7.416198487095663}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 7.681145747868608}, "personal_agent.core.MultiAgentSystem.run": {"tf": 4.47213595499958}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 4.69041575982343}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 4.123105625617661}, "personal_agent.core.create_multi_agent_system": {"tf": 8.660254037844387}, "personal_agent.core.create_smolagents_executor": {"tf": 9.539392014169456}, "personal_agent.core.create_smolagents_model": {"tf": 4.123105625617661}, "personal_agent.core.create_agno_storage": {"tf": 5.830951894845301}, "personal_agent.core.create_agno_memory": {"tf": 7.3484692283495345}, "personal_agent.core.create_combined_knowledge_base": {"tf": 9.055385138137417}, "personal_agent.core.load_combined_knowledge_base": {"tf": 6.6332495807108}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 4.898979485566356}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 13.038404810405298}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 8.831760866327848}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 10.44030650891055}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 7.54983443527075}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 5.0990195135927845}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 4.898979485566356}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 8}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 11.958260743101398}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 11}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 11.313708498984761}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 8.717797887081348}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 9}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 8.18535277187245}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 12.449899597988733}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 11}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 8.831760866327848}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 8.18535277187245}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 9.539392014169456}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 10.583005244258363}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 10.583005244258363}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 10.583005244258363}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 10.583005244258363}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 4.242640687119285}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 7.3484692283495345}, "personal_agent.core.create_semantic_memory_manager": {"tf": 11.269427669584644}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 6.708203932499369}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 8.426149773176359}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 5.477225575051661}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 3.4641016151377544}, "personal_agent.core.create_knowledge_coordinator": {"tf": 7.810249675906654}, "personal_agent.core.extract_entities": {"tf": 5.385164807134504}, "personal_agent.core.extract_relationships": {"tf": 5.830951894845301}, "personal_agent.core.StructuredResponse.__init__": {"tf": 10.723805294763608}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 5.830951894845301}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 3.4641016151377544}, "personal_agent.core.ToolCall.__init__": {"tf": 7.211102550927978}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 9.643650760992955}, "personal_agent.core.ResponseError.__init__": {"tf": 5.830951894845301}, "personal_agent.core.get_ollama_format_schema": {"tf": 4.358898943540674}, "personal_agent.core.create_structured_instructions": {"tf": 4}, "personal_agent.core.TopicClassifier.__init__": {"tf": 3.4641016151377544}, "personal_agent.core.TopicClassifier.load_config": {"tf": 3.7416573867739413}, "personal_agent.core.TopicClassifier.clean_text": {"tf": 3.7416573867739413}, "personal_agent.core.TopicClassifier.classify": {"tf": 4.69041575982343}, "personal_agent.core.RuleSet.__init__": {"tf": 5.477225575051661}, "personal_agent.core.UserManager.__init__": {"tf": 7}, "personal_agent.core.UserManager.get_all_users": {"tf": 5}, "personal_agent.core.UserManager.get_user": {"tf": 5.744562646538029}, "personal_agent.core.UserManager.create_user": {"tf": 8}, "personal_agent.core.UserManager.switch_user": {"tf": 7.874007874011811}, "personal_agent.core.UserManager.delete_user": {"tf": 8.774964387392123}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 4.69041575982343}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 4.69041575982343}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 3.4641016151377544}, "personal_agent.core.UserManager.update_user": {"tf": 6}, "personal_agent.core.UserManager.get_user_details": {"tf": 5.477225575051661}, "personal_agent.core.UserRegistry.__init__": {"tf": 5.656854249492381}, "personal_agent.core.UserRegistry.add_user": {"tf": 7.3484692283495345}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 5}, "personal_agent.core.UserRegistry.get_user": {"tf": 5.744562646538029}, "personal_agent.core.UserRegistry.remove_user": {"tf": 4.47213595499958}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 4.47213595499958}, "personal_agent.core.UserRegistry.update_user": {"tf": 5.0990195135927845}, "personal_agent.core.UserRegistry.user_exists": {"tf": 4.47213595499958}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 5}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 3.4641016151377544}, "personal_agent.core.LightRAGManager.__init__": {"tf": 4.242640687119285}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 5.477225575051661}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 6}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 4.69041575982343}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 4.69041575982343}, "personal_agent.core.LightRAGManager.start_services": {"tf": 6}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 4.795831523312719}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 4.69041575982343}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 6}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 4.69041575982343}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 7.280109889280518}, "personal_agent.core.check_docker_user_consistency": {"tf": 6.082762530298219}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 8.246211251235321}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 4}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 6.164414002968976}, "personal_agent.core.is_smollm2_model": {"tf": 4}, "personal_agent.core.parse_smollm2_response": {"tf": 6.082762530298219}, "personal_agent.core.prepare_smollm2_messages": {"tf": 9.591663046625438}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 4.69041575982343}, "personal_agent.readers.web_reader.read_website": {"tf": 5.477225575051661}, "personal_agent.team.create_basic_memory_agent": {"tf": 10.954451150103322}, "personal_agent.team.create_personal_agent_team": {"tf": 10.954451150103322}, "personal_agent.team.create_personal_agent_team_async": {"tf": 10.954451150103322}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 10.198039027185569}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 3.4641016151377544}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 5.830951894845301}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 4.69041575982343}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 4.69041575982343}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 3.4641016151377544}, "personal_agent.team.create_ollama_model": {"tf": 7.483314773547883}, "personal_agent.team.create_model": {"tf": 8.306623862918075}, "personal_agent.team.create_openai_model": {"tf": 7.483314773547883}, "personal_agent.team.create_memory_agent": {"tf": 8.94427190999916}, "personal_agent.team.create_team": {"tf": 4.47213595499958}, "personal_agent.team.cleanup_team": {"tf": 3.1622776601683795}, "personal_agent.team.main": {"tf": 4.47213595499958}, "personal_agent.team.cli_main": {"tf": 2.6457513110645907}, "personal_agent.team.create_web_research_agent": {"tf": 9.273618495495704}, "personal_agent.team.create_finance_agent": {"tf": 9.273618495495704}, "personal_agent.team.create_calculator_agent": {"tf": 9.273618495495704}, "personal_agent.team.create_file_operations_agent": {"tf": 9.273618495495704}, "personal_agent.team.create_pubmed_agent": {"tf": 9.273618495495704}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 12.96148139681572}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 2.8284271247461903}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 6.782329983125268}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 3.1622776601683795}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 6.782329983125268}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 3.1622776601683795}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 3.1622776601683795}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 4.242640687119285}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 7.681145747868608}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 5.656854249492381}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 3.1622776601683795}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 2.8284271247461903}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 5.656854249492381}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 5.0990195135927845}, "personal_agent.utils.cleanup": {"tf": 2.6457513110645907}, "personal_agent.utils.inject_dependencies": {"tf": 4.69041575982343}, "personal_agent.utils.register_cleanup_handlers": {"tf": 2.6457513110645907}, "personal_agent.utils.setup_logging": {"tf": 7.681145747868608}, "personal_agent.utils.setup_logging_filters": {"tf": 3}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 4.69041575982343}, "personal_agent.utils.configure_all_rich_logging": {"tf": 4.69041575982343}, "personal_agent.utils.configure_master_logger": {"tf": 6}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 3.7416573867739413}, "personal_agent.utils.list_all_loggers": {"tf": 2.6457513110645907}, "personal_agent.utils.list_handlers": {"tf": 3.1622776601683795}, "personal_agent.utils.set_logger_level": {"tf": 3.7416573867739413}, "personal_agent.utils.set_logger_level_for_module": {"tf": 4.47213595499958}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 3.7416573867739413}, "personal_agent.utils.toggle_stream_handler": {"tf": 3.7416573867739413}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 5.656854249492381}, "personal_agent.utils.add_src_to_path": {"tf": 2.6457513110645907}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 4.69041575982343}, "personal_agent.utils.cleanup.cleanup": {"tf": 2.6457513110645907}, "personal_agent.utils.cleanup.signal_handler": {"tf": 3.7416573867739413}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 2.6457513110645907}, "personal_agent.web.create_app": {"tf": 4.123105625617661}, "personal_agent.web.register_routes": {"tf": 6.928203230275509}, "personal_agent.web.create_smol_app": {"tf": 4.123105625617661}, "personal_agent.web.register_smol_routes": {"tf": 7.54983443527075}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 2.6457513110645907}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 2.6457513110645907}, "personal_agent.streamlit.dashboard.main": {"tf": 2.6457513110645907}}, "df": 237, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.run_agno_cli": {"tf": 1.7320508075688772}, "personal_agent.cli.run_agno_cli": {"tf": 1.7320508075688772}, "personal_agent.cli.show_all_memories": {"tf": 1.7320508075688772}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1.7320508075688772}, "personal_agent.cli.show_memory_analysis": {"tf": 1.7320508075688772}, "personal_agent.cli.show_memory_stats": {"tf": 1.7320508075688772}, "personal_agent.cli.clear_all_memories": {"tf": 1.7320508075688772}, "personal_agent.cli.store_immediate_memory": {"tf": 1.7320508075688772}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1.7320508075688772}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1.7320508075688772}, "personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1.4142135623730951}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1.7320508075688772}, "personal_agent.team.create_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_web_research_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_finance_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_calculator_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_file_operations_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_pubmed_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 34, "s": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1.4142135623730951}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}}, "df": 50, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 11}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 38}, "t": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.core.create_anti_duplicate_memory": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.create_anti_duplicate_memory": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1.4142135623730951}, "personal_agent.web.create_smol_app": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}}, "df": 20}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 13}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.RuleSet.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.RuleSet.__init__": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}}, "df": 20}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli": {"tf": 1.7320508075688772}, "personal_agent.cli.run_agno_cli": {"tf": 1.7320508075688772}, "personal_agent.cli.show_all_memories": {"tf": 1.7320508075688772}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1.7320508075688772}, "personal_agent.cli.show_memory_analysis": {"tf": 1.7320508075688772}, "personal_agent.cli.show_memory_stats": {"tf": 1.7320508075688772}, "personal_agent.cli.clear_all_memories": {"tf": 1.7320508075688772}, "personal_agent.cli.store_immediate_memory": {"tf": 1.7320508075688772}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1.7320508075688772}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1.7320508075688772}}, "df": 10}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}}, "df": 6}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}}, "df": 4, "s": {"docs": {"personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseError.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.create_smolagents_executor": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}}, "df": 2, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_knowledge_coordinator": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.StructuredResponse.__init__": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1.4142135623730951}, "personal_agent.team.create_openai_model": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.utils.inject_dependencies": {"tf": 1.4142135623730951}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.MultiAgentSystem.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "s": {"docs": {"personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1.4142135623730951}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_finance_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_calculator_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 18, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.team.create_ollama_model": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1.4142135623730951}}, "df": 35}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}}, "df": 2}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 20}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.main": {"tf": 1}}, "df": 7, "r": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1.7320508075688772}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 47, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 8}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.UserManager.switch_user": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1.7320508075688772}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.SimpleMCPClient.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 2}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1.4142135623730951}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 2}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 2}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 2}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 2.23606797749979}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 2.23606797749979}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 2.449489742783178}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 2}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1.7320508075688772}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 2}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1.7320508075688772}, "personal_agent.core.extract_relationships": {"tf": 2}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseError.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1.4142135623730951}, "personal_agent.core.RuleSet.__init__": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.create_user": {"tf": 2}, "personal_agent.core.UserManager.switch_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.delete_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.get_user_details": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.add_user": {"tf": 1.7320508075688772}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1.4142135623730951}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1.4142135623730951}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1.4142135623730951}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1.4142135623730951}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1.7320508075688772}, "personal_agent.core.prepare_smollm2_messages": {"tf": 2.449489742783178}, "personal_agent.readers.web_reader.read_website": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 2.23606797749979}, "personal_agent.team.create_personal_agent_team": {"tf": 2.23606797749979}, "personal_agent.team.create_personal_agent_team_async": {"tf": 2.23606797749979}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 2.23606797749979}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1.4142135623730951}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_finance_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_calculator_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_file_operations_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_pubmed_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 2.449489742783178}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1.4142135623730951}}, "df": 159, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.StructuredResponse.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser.parse": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1.4142135623730951}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 13}}}, "e": {"docs": {"personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.ResponseMetadata.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SimpleMCPClient.__init__": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}}, "df": 6}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1}, "personal_agent.core.TopicClassifier.clean_text": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}}, "df": 112}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}}, "df": 5, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_semantic_memory_manager": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentModelManager.__init__": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.core.ResponseMetadata.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}}, "df": 8}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.utils.cleanup.signal_handler": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_model": {"tf": 1}}, "df": 4}}}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.create_multi_agent_system": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}}, "df": 5}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}}, "df": 10}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.main": {"tf": 1}}, "df": 7}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 5}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.ResponseError.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1.4142135623730951}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.StructuredResponse.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.StructuredResponse.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 2}, "personal_agent.core.create_multi_agent_system": {"tf": 2}, "personal_agent.core.create_smolagents_executor": {"tf": 2.23606797749979}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.7320508075688772}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 76, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1.4142135623730951}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}}, "df": 33, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 15}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"3": {"docs": {}, "df": 0, ":": {"1": {"docs": {"personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}}, "df": 3}, "8": {"docs": {}, "df": 0, "b": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 11}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 2.449489742783178}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 2}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.delete_user": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1.7320508075688772}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1.7320508075688772}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 80}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 33, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}}, "df": 32}}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1.4142135623730951}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}}, "df": 13}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.web.create_app": {"tf": 1.4142135623730951}, "personal_agent.web.register_routes": {"tf": 1.7320508075688772}, "personal_agent.web.create_smol_app": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.7320508075688772}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.cleanup.signal_handler": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.web.register_routes": {"tf": 1.7320508075688772}, "personal_agent.web.register_smol_routes": {"tf": 1.7320508075688772}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.ToolCall.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.create_structured_instructions": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 19}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}}, "df": 5}}}}, "d": {"docs": {"personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}}, "df": 52}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 8}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.RuleSet.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}}, "df": 37}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}}, "df": 5}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1}}, "df": 9}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}}, "df": 4}}}}}}}}}}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "t": {"docs": {"personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "o": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 6, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 6, "s": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}}, "df": 13}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 6}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.StructuredResponse.__init__": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 2.23606797749979}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseError.__init__": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}}, "df": 21}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}}, "df": 7}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1}}, "df": 8}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.TopicClassifier.clean_text": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}}, "df": 14, "s": {"docs": {"personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.team.create_personal_agent_team": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.team.create_personal_agent_team": {"tf": 1.7320508075688772}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.7320508075688772}, "personal_agent.team.cleanup_team": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 13}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}}, "df": 34, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "b": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 15}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.7320508075688772}}, "df": 5}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.ResponseError.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.StructuredResponse.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 7, "l": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_finance_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_calculator_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 23, "s": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}}, "df": 10}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}}, "df": 1}, "x": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}}, "df": 4}}}}}, "x": {"docs": {"personal_agent.readers.web_reader.create_web_reader": {"tf": 1.4142135623730951}, "personal_agent.readers.web_reader.read_website": {"tf": 1.4142135623730951}}, "df": 2}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.core.create_multi_agent_system": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.create_multi_agent_system": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}}, "df": 5}}}, "k": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}}, "df": 4, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.RuleSet.__init__": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 7, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_knowledge_coordinator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {"personal_agent.web.register_routes": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 2}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.core.SimpleMCPClient.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.ToolCall.__init__": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1}}, "df": 52}}, "r": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 13}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.utils.configure_master_logger": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 5}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 18}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}}, "df": 20}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_anti_duplicate_memory": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}}, "df": 3, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}}, "df": 3, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 1}}}, "v": {"2": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 18}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"1": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}}, "df": 1}, "2": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}}, "df": 1}, "docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.7320508075688772}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}}, "df": 5}}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.web.register_routes": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.StructuredResponse.__init__": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}}, "df": 5}}}}}}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"1": {"1": {"4": {"3": {"4": {"docs": {"personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 10}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"6": {"2": {"1": {"docs": {"personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.StructuredResponse.__init__": {"tf": 1}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.UserManager.switch_user": {"tf": 1}}, "df": 1}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}}, "df": 1}}}}, "v": {"2": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}}, "df": 1}}}}}}}}}}}, "doc": {"root": {"0": {"2": {"docs": {"personal_agent.utils": {"tf": 1}}, "df": 1}, "6": {"docs": {"personal_agent.utils": {"tf": 1}}, "df": 1}, "8": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}, "9": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}, "docs": {"personal_agent": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1.7320508075688772}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}}, "df": 5}, "1": {"1": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}, "4": {"docs": {}, "df": 0, ":": {"5": {"2": {"docs": {}, "df": 0, ":": {"4": {"5": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}}, "df": 3}, "2": {"0": {"2": {"5": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.utils": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"docs": {}, "df": 0, ":": {"1": {"7": {"docs": {}, "df": 0, ":": {"3": {"9": {"docs": {"personal_agent.utils": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "3": {"8": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}}, "df": 1}, "8": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1}}, "df": 1}, "docs": {"personal_agent": {"tf": 6.244997998398398}, "personal_agent.mcp_client": {"tf": 1.7320508075688772}, "personal_agent.logger": {"tf": 1.7320508075688772}, "personal_agent.cli_main": {"tf": 1.7320508075688772}, "personal_agent.run_agno_cli": {"tf": 4.58257569495584}, "personal_agent.run_agno_cli_wrapper": {"tf": 5.0990195135927845}, "personal_agent.cli": {"tf": 2.449489742783178}, "personal_agent.cli.run_agno_cli": {"tf": 4.58257569495584}, "personal_agent.cli.show_all_memories": {"tf": 1.7320508075688772}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1.7320508075688772}, "personal_agent.cli.show_memory_analysis": {"tf": 1.7320508075688772}, "personal_agent.cli.show_memory_stats": {"tf": 1.7320508075688772}, "personal_agent.cli.clear_all_memories": {"tf": 1.7320508075688772}, "personal_agent.cli.store_immediate_memory": {"tf": 2.449489742783178}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1.7320508075688772}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1.7320508075688772}, "personal_agent.config": {"tf": 1.7320508075688772}, "personal_agent.config.AGNO_KNOWLEDGE_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.AGNO_STORAGE_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.BASE_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.DATA_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.USER_DATA_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.HOME_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.PERSAG_HOME": {"tf": 1.7320508075688772}, "personal_agent.config.PERSAG_ROOT": {"tf": 1.7320508075688772}, "personal_agent.config.REPO_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.ROOT_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.STORAGE_BACKEND": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_INPUTS_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_MEMORY_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_MEMORY_INPUTS_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_MEMORY_PORT": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_MEMORY_STORAGE_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_MEMORY_URL": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_PORT": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_SERVER": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_SERVER_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_STORAGE_DIR": {"tf": 1.7320508075688772}, "personal_agent.config.LIGHTRAG_URL": {"tf": 1.7320508075688772}, "personal_agent.config.LLM_MODEL": {"tf": 1.7320508075688772}, "personal_agent.config.LMSTUDIO_URL": {"tf": 1.7320508075688772}, "personal_agent.config.OLLAMA_URL": {"tf": 1.7320508075688772}, "personal_agent.config.REMOTE_LMSTUDIO_URL": {"tf": 1.7320508075688772}, "personal_agent.config.REMOTE_OLLAMA_URL": {"tf": 1.7320508075688772}, "personal_agent.config.WEAVIATE_URL": {"tf": 1.7320508075688772}, "personal_agent.config.EMBEDDING_TIMEOUT": {"tf": 1.7320508075688772}, "personal_agent.config.HTTPX_CONNECT_TIMEOUT": {"tf": 1.7320508075688772}, "personal_agent.config.HTTPX_POOL_TIMEOUT": {"tf": 1.7320508075688772}, "personal_agent.config.HTTPX_READ_TIMEOUT": {"tf": 1.7320508075688772}, "personal_agent.config.HTTPX_TIMEOUT": {"tf": 1.7320508075688772}, "personal_agent.config.HTTPX_WRITE_TIMEOUT": {"tf": 1.7320508075688772}, "personal_agent.config.LLM_TIMEOUT": {"tf": 1.7320508075688772}, "personal_agent.config.OLLAMA_KEEP_ALIVE": {"tf": 1.7320508075688772}, "personal_agent.config.OLLAMA_NUM_PREDICT": {"tf": 1.7320508075688772}, "personal_agent.config.OLLAMA_TEMPERATURE": {"tf": 1.7320508075688772}, "personal_agent.config.OLLAMA_TIMEOUT": {"tf": 1.7320508075688772}, "personal_agent.config.PDF_CHUNK_SIZE": {"tf": 1.7320508075688772}, "personal_agent.config.LOG_LEVEL": {"tf": 1.7320508075688772}, "personal_agent.config.LOG_LEVEL_STR": {"tf": 1.7320508075688772}, "personal_agent.config.PORT": {"tf": 1.7320508075688772}, "personal_agent.config.PROVIDER": {"tf": 1.7320508075688772}, "personal_agent.config.SHOW_SPLASH_SCREEN": {"tf": 1.7320508075688772}, "personal_agent.config.USE_MCP": {"tf": 1.7320508075688772}, "personal_agent.config.USE_WEAVIATE": {"tf": 1.7320508075688772}, "personal_agent.config.MCP_SERVERS": {"tf": 1.7320508075688772}, "personal_agent.config.get_current_user_id": {"tf": 3.3166247903554}, "personal_agent.config.get_env_bool": {"tf": 3.3166247903554}, "personal_agent.config.get_env_var": {"tf": 3.3166247903554}, "personal_agent.config.get_mcp_servers": {"tf": 1.7320508075688772}, "personal_agent.config.get_package_version": {"tf": 2.8284271247461903}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 2.23606797749979}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 2.23606797749979}, "personal_agent.config.get_settings": {"tf": 1.7320508075688772}, "personal_agent.config.get_user_storage_paths": {"tf": 2.8284271247461903}, "personal_agent.config.get_userid": {"tf": 3.1622776601683795}, "personal_agent.config.load_user_from_file": {"tf": 3.872983346207417}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 3.4641016151377544}, "personal_agent.core": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient.server_configs": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient.active_servers": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1.7320508075688772}, "personal_agent.core.setup_weaviate": {"tf": 3.3166247903554}, "personal_agent.core.is_weaviate_connected": {"tf": 3.3166247903554}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 3.3166247903554}, "personal_agent.core.is_agno_storage_connected": {"tf": 3.3166247903554}, "personal_agent.core.is_memory_connected": {"tf": 3.3166247903554}, "personal_agent.core.create_agent_executor": {"tf": 1.7320508075688772}, "personal_agent.core.create_simple_personal_agent": {"tf": 3}, "personal_agent.core.load_agent_knowledge": {"tf": 3.1622776601683795}, "personal_agent.core.AgentKnowledgeManager": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 2.23606797749979}, "personal_agent.core.AgentKnowledgeManager.user_id": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.storage_dir": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.lightrag_url": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.lightrag_memory_url": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.knowledge_base_file": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.knowledge_base": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 2.8284271247461903}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 2.23606797749979}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 2.8284271247461903}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 2.6457513110645907}, "personal_agent.core.AgentMemoryManager": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 2.23606797749979}, "personal_agent.core.AgentMemoryManager.user_id": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.storage_dir": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.agno_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.lightrag_url": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.lightrag_memory_url": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.enable_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 2.23606797749979}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 2.6457513110645907}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 2.8284271247461903}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 3.1622776601683795}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 2.6457513110645907}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 2.6457513110645907}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 4.123105625617661}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 2.6457513110645907}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 2.6457513110645907}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 2.6457513110645907}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 2.6457513110645907}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 2.23606797749979}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 2.23606797749979}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 2.6457513110645907}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 3.3166247903554}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 3.1622776601683795}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 3.3166247903554}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 2.8284271247461903}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.AgentModelManager": {"tf": 1.7320508075688772}, "personal_agent.core.AgentModelManager.__init__": {"tf": 2.23606797749979}, "personal_agent.core.AgentModelManager.model_provider": {"tf": 1.7320508075688772}, "personal_agent.core.AgentModelManager.model_name": {"tf": 1.7320508075688772}, "personal_agent.core.AgentModelManager.ollama_base_url": {"tf": 1.7320508075688772}, "personal_agent.core.AgentModelManager.seed": {"tf": 1.7320508075688772}, "personal_agent.core.AgentModelManager.create_model": {"tf": 2.8284271247461903}, "personal_agent.core.MultiAgentSystem": {"tf": 4.123105625617661}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 2.23606797749979}, "personal_agent.core.MultiAgentSystem.model": {"tf": 1.7320508075688772}, "personal_agent.core.MultiAgentSystem.mcp_client": {"tf": 1.7320508075688772}, "personal_agent.core.MultiAgentSystem.weaviate_client": {"tf": 1.7320508075688772}, "personal_agent.core.MultiAgentSystem.vector_store": {"tf": 1.7320508075688772}, "personal_agent.core.MultiAgentSystem.tool_groups": {"tf": 1.7320508075688772}, "personal_agent.core.MultiAgentSystem.agent": {"tf": 1.7320508075688772}, "personal_agent.core.MultiAgentSystem.run": {"tf": 3.605551275463989}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 3.3166247903554}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 3.3166247903554}, "personal_agent.core.create_multi_agent_system": {"tf": 3.605551275463989}, "personal_agent.core.create_smolagents_executor": {"tf": 6.164414002968976}, "personal_agent.core.create_smolagents_model": {"tf": 3.3166247903554}, "personal_agent.core.create_agno_storage": {"tf": 4.69041575982343}, "personal_agent.core.create_agno_memory": {"tf": 6.928203230275509}, "personal_agent.core.create_combined_knowledge_base": {"tf": 5.5677643628300215}, "personal_agent.core.load_combined_knowledge_base": {"tf": 4.123105625617661}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 4.58257569495584}, "personal_agent.core.AntiDuplicateMemory": {"tf": 2.449489742783178}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 6.782329983125268}, "personal_agent.core.AntiDuplicateMemory.similarity_threshold": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.enable_semantic_dedup": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.enable_exact_dedup": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.debug_mode": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.enable_optimizations": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 5.385164807134504}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 5.744562646538029}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 5.385164807134504}, "personal_agent.core.AntiDuplicateMemory.get_memory_stats": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.print_memory_analysis": {"tf": 1.7320508075688772}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 5.744562646538029}, "personal_agent.core.SemanticMemoryManager": {"tf": 2.449489742783178}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.model": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.config": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.topic_classifier": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.duplicate_detector": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.memories_updated": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 6.164414002968976}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 6.557438524302}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 5.477225575051661}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 5.744562646538029}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 5.0990195135927845}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 6.855654600401044}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 5.916079783099616}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 5}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 5}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 6}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 6.782329983125268}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 2.449489742783178}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 6.782329983125268}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 6.782329983125268}, "personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManagerConfig.similarity_threshold": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManagerConfig.enable_semantic_dedup": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManagerConfig.enable_exact_dedup": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManagerConfig.enable_topic_classification": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManagerConfig.max_memory_length": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManagerConfig.recent_memory_limit": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManagerConfig.debug_mode": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 2}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticDuplicateDetector.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticDuplicateDetector.similarity_threshold": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 5.0990195135927845}, "personal_agent.core.create_semantic_memory_manager": {"tf": 6.48074069840786}, "personal_agent.core.KnowledgeCoordinator": {"tf": 2.449489742783178}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 2.23606797749979}, "personal_agent.core.KnowledgeCoordinator.agno_knowledge": {"tf": 1.7320508075688772}, "personal_agent.core.KnowledgeCoordinator.lightrag_url": {"tf": 1.7320508075688772}, "personal_agent.core.KnowledgeCoordinator.debug": {"tf": 1.7320508075688772}, "personal_agent.core.KnowledgeCoordinator.routing_stats": {"tf": 1.7320508075688772}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 3.7416573867739413}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 2.23606797749979}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1.7320508075688772}, "personal_agent.core.create_knowledge_coordinator": {"tf": 2.6457513110645907}, "personal_agent.core.extract_entities": {"tf": 1.7320508075688772}, "personal_agent.core.extract_relationships": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponse": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponse.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponse.content": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponse.tool_calls": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponse.metadata": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponse.error": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponseParser": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponseParser.RESPONSE_SCHEMA": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 2.8284271247461903}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 2.23606797749979}, "personal_agent.core.ToolCall": {"tf": 1.7320508075688772}, "personal_agent.core.ToolCall.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.ToolCall.function_name": {"tf": 1.7320508075688772}, "personal_agent.core.ToolCall.arguments": {"tf": 1.7320508075688772}, "personal_agent.core.ToolCall.reasoning": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseMetadata": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseMetadata.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseMetadata.confidence": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseMetadata.sources": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseMetadata.reasoning_steps": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseMetadata.response_type": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseError": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseError.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseError.code": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseError.message": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseError.recoverable": {"tf": 1.7320508075688772}, "personal_agent.core.get_ollama_format_schema": {"tf": 2.23606797749979}, "personal_agent.core.create_structured_instructions": {"tf": 2.6457513110645907}, "personal_agent.core.TopicClassifier": {"tf": 1.7320508075688772}, "personal_agent.core.TopicClassifier.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.TopicClassifier.stopwords": {"tf": 1.7320508075688772}, "personal_agent.core.TopicClassifier.confidence_threshold": {"tf": 1.7320508075688772}, "personal_agent.core.TopicClassifier.keyword_weight": {"tf": 1.7320508075688772}, "personal_agent.core.TopicClassifier.phrase_weight": {"tf": 1.7320508075688772}, "personal_agent.core.TopicClassifier.load_config": {"tf": 1.7320508075688772}, "personal_agent.core.TopicClassifier.clean_text": {"tf": 1.7320508075688772}, "personal_agent.core.TopicClassifier.classify": {"tf": 3.1622776601683795}, "personal_agent.core.RuleSet": {"tf": 1.4142135623730951}, "personal_agent.core.RuleSet.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.RuleSet.keywords": {"tf": 1.7320508075688772}, "personal_agent.core.RuleSet.patterns": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.__init__": {"tf": 2.449489742783178}, "personal_agent.core.UserManager.registry": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.lightrag_manager": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.get_all_users": {"tf": 2.23606797749979}, "personal_agent.core.UserManager.get_user": {"tf": 2.6457513110645907}, "personal_agent.core.UserManager.create_user": {"tf": 2.8284271247461903}, "personal_agent.core.UserManager.switch_user": {"tf": 2.6457513110645907}, "personal_agent.core.UserManager.delete_user": {"tf": 2.8284271247461903}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 2.23606797749979}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 2.23606797749979}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 2.23606797749979}, "personal_agent.core.UserManager.update_user": {"tf": 2.8284271247461903}, "personal_agent.core.UserManager.get_user_details": {"tf": 2.6457513110645907}, "personal_agent.core.UserRegistry": {"tf": 1.7320508075688772}, "personal_agent.core.UserRegistry.__init__": {"tf": 2.449489742783178}, "personal_agent.core.UserRegistry.registry_file": {"tf": 1.7320508075688772}, "personal_agent.core.UserRegistry.add_user": {"tf": 2.8284271247461903}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 2.23606797749979}, "personal_agent.core.UserRegistry.get_user": {"tf": 2.6457513110645907}, "personal_agent.core.UserRegistry.remove_user": {"tf": 2.6457513110645907}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 2.6457513110645907}, "personal_agent.core.UserRegistry.update_user": {"tf": 2.8284271247461903}, "personal_agent.core.UserRegistry.user_exists": {"tf": 2.6457513110645907}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 2.23606797749979}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 2.23606797749979}, "personal_agent.core.LightRAGManager": {"tf": 1.7320508075688772}, "personal_agent.core.LightRAGManager.__init__": {"tf": 2.449489742783178}, "personal_agent.core.LightRAGManager.lightrag_server_dir": {"tf": 1.7320508075688772}, "personal_agent.core.LightRAGManager.lightrag_memory_dir": {"tf": 1.7320508075688772}, "personal_agent.core.LightRAGManager.project_root": {"tf": 1.7320508075688772}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 2.6457513110645907}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 2.8284271247461903}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 2}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 2.23606797749979}, "personal_agent.core.LightRAGManager.start_services": {"tf": 2.8284271247461903}, "personal_agent.core.DockerIntegrationManager": {"tf": 1.7320508075688772}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 2.449489742783178}, "personal_agent.core.DockerIntegrationManager.user_id": {"tf": 1.7320508075688772}, "personal_agent.core.DockerIntegrationManager.base_dir": {"tf": 1.7320508075688772}, "personal_agent.core.DockerIntegrationManager.docker_sync": {"tf": 1.7320508075688772}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 2.449489742783178}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 2.8284271247461903}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 2.449489742783178}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 3.3166247903554}, "personal_agent.core.check_docker_user_consistency": {"tf": 3}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 3.3166247903554}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 3.4641016151377544}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 2.6457513110645907}, "personal_agent.core.is_smollm2_model": {"tf": 2.6457513110645907}, "personal_agent.core.parse_smollm2_response": {"tf": 3.4641016151377544}, "personal_agent.core.prepare_smollm2_messages": {"tf": 2.6457513110645907}, "personal_agent.readers": {"tf": 1.7320508075688772}, "personal_agent.readers.url_reader": {"tf": 1.7320508075688772}, "personal_agent.readers.url_reader.reader": {"tf": 1.7320508075688772}, "personal_agent.readers.web_reader": {"tf": 1.7320508075688772}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1.7320508075688772}, "personal_agent.readers.web_reader.read_website": {"tf": 1.7320508075688772}, "personal_agent.team": {"tf": 2.23606797749979}, "personal_agent.team.create_basic_memory_agent": {"tf": 6.708203932499369}, "personal_agent.team.create_personal_agent_team": {"tf": 6.48074069840786}, "personal_agent.team.create_personal_agent_team_async": {"tf": 6.48074069840786}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 5.830951894845301}, "personal_agent.team.PersonalAgentTeamWrapper.model_provider": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.model_name": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.ollama_base_url": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.storage_dir": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.user_id": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.debug": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.team": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.agno_memory": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 3.3166247903554}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 5.0990195135927845}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 3.3166247903554}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 3.3166247903554}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 3.3166247903554}, "personal_agent.team.create_ollama_model": {"tf": 1.7320508075688772}, "personal_agent.team.create_model": {"tf": 1.7320508075688772}, "personal_agent.team.create_openai_model": {"tf": 1.7320508075688772}, "personal_agent.team.create_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_team": {"tf": 1.7320508075688772}, "personal_agent.team.cleanup_team": {"tf": 1.7320508075688772}, "personal_agent.team.main": {"tf": 1.7320508075688772}, "personal_agent.team.cli_main": {"tf": 1.7320508075688772}, "personal_agent.team.create_web_research_agent": {"tf": 5.830951894845301}, "personal_agent.team.create_finance_agent": {"tf": 5.830951894845301}, "personal_agent.team.create_calculator_agent": {"tf": 5.830951894845301}, "personal_agent.team.create_file_operations_agent": {"tf": 5.830951894845301}, "personal_agent.team.create_pubmed_agent": {"tf": 5.830951894845301}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 7.54983443527075}, "personal_agent.tools": {"tf": 2.23606797749979}, "personal_agent.tools.StreamlitMemoryHelper": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.__init__": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.agent": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.search_memories": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.clear_memories": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_stats": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.update_memory": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitKnowledgeHelper": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitKnowledgeHelper.__init__": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitKnowledgeHelper.agent": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitKnowledgeHelper.search_knowledge": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitKnowledgeHelper.search_rag": {"tf": 1.7320508075688772}, "personal_agent.utils": {"tf": 2.23606797749979}, "personal_agent.utils.cleanup": {"tf": 2.449489742783178}, "personal_agent.utils.inject_dependencies": {"tf": 1.7320508075688772}, "personal_agent.utils.register_cleanup_handlers": {"tf": 1.7320508075688772}, "personal_agent.utils.setup_logging": {"tf": 5.5677643628300215}, "personal_agent.utils.setup_logging_filters": {"tf": 1.7320508075688772}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 4}, "personal_agent.utils.configure_all_rich_logging": {"tf": 4}, "personal_agent.utils.configure_master_logger": {"tf": 4.358898943540674}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 3.7416573867739413}, "personal_agent.utils.list_all_loggers": {"tf": 3.4641016151377544}, "personal_agent.utils.list_handlers": {"tf": 4.795831523312719}, "personal_agent.utils.set_logger_level": {"tf": 5.656854249492381}, "personal_agent.utils.set_logger_level_for_module": {"tf": 5.5677643628300215}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 3.7416573867739413}, "personal_agent.utils.toggle_stream_handler": {"tf": 4.358898943540674}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 5}, "personal_agent.utils.add_src_to_path": {"tf": 2.23606797749979}, "personal_agent.utils.cleanup.DEFAULT_LOG_LEVEL": {"tf": 1.7320508075688772}, "personal_agent.utils.cleanup.weaviate_client": {"tf": 1.7320508075688772}, "personal_agent.utils.cleanup.vector_store": {"tf": 1.7320508075688772}, "personal_agent.utils.cleanup.mcp_client": {"tf": 1.7320508075688772}, "personal_agent.utils.cleanup.logger": {"tf": 1.7320508075688772}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1.7320508075688772}, "personal_agent.utils.cleanup.cleanup": {"tf": 1.7320508075688772}, "personal_agent.utils.cleanup.signal_handler": {"tf": 1.7320508075688772}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1.7320508075688772}, "personal_agent.web": {"tf": 2.449489742783178}, "personal_agent.web.create_app": {"tf": 3.3166247903554}, "personal_agent.web.register_routes": {"tf": 5.744562646538029}, "personal_agent.web.create_smol_app": {"tf": 3.3166247903554}, "personal_agent.web.register_smol_routes": {"tf": 6.164414002968976}, "personal_agent.streamlit": {"tf": 1.7320508075688772}, "personal_agent.streamlit.dashboard": {"tf": 2.6457513110645907}, "personal_agent.streamlit.dashboard.SESSION_KEY_DARK_THEME": {"tf": 1.7320508075688772}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1.7320508075688772}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1.7320508075688772}, "personal_agent.streamlit.dashboard.main": {"tf": 1.7320508075688772}}, "df": 423, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent": {"tf": 1.7320508075688772}, "personal_agent.cli": {"tf": 1}, "personal_agent.config": {"tf": 1}, "personal_agent.core": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.tools": {"tf": 1.4142135623730951}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.web": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1.4142135623730951}}, "df": 18, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1.7320508075688772}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}}, "df": 5, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1.7320508075688772}, "personal_agent.config.get_userid": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}}, "df": 4}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1.7320508075688772}, "personal_agent.cli": {"tf": 1.4142135623730951}, "personal_agent.config": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1.7320508075688772}, "personal_agent.core": {"tf": 1}, "personal_agent.tools": {"tf": 1.4142135623730951}, "personal_agent.utils": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.7320508075688772}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}, "personal_agent.web": {"tf": 1.4142135623730951}}, "df": 11}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 57}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.cli": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 3, "d": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}}, "df": 1}, "r": {"docs": {"personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.StructuredResponseParser": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 4, "s": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 2}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.team.cli_main": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.cli_main": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}}, "df": 4}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.cli_main": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.web": {"tf": 1}}, "df": 11}, "d": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}}, "df": 6}, "r": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1.4142135623730951}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_finance_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_calculator_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 13}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 4}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1.4142135623730951}}, "df": 3}}}, "y": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1.4142135623730951}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1.4142135623730951}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 2.23606797749979}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 2.23606797749979}}, "df": 2, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.team.cleanup_team": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.team": {"tf": 1}}, "df": 4, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.StructuredResponseParser.parse": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1.4142135623730951}}, "df": 1}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}}, "df": 1}}, "s": {"docs": {"personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.team": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1.4142135623730951}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.ToolCall": {"tf": 1}, "personal_agent.core.ResponseMetadata": {"tf": 1}, "personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1.4142135623730951}, "personal_agent.core.parse_smollm2_response": {"tf": 1.4142135623730951}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.4142135623730951}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 81, "i": {"docs": {"personal_agent": {"tf": 1.7320508075688772}, "personal_agent.cli": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.web": {"tf": 1}}, "df": 5}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 2.23606797749979}, "personal_agent.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.config": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core": {"tf": 1}, "personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 2.23606797749979}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_finance_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_calculator_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.tools": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.web": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 2}, "personal_agent.streamlit.dashboard": {"tf": 1.4142135623730951}}, "df": 50, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}}, "df": 1}}, "s": {"docs": {"personal_agent.team": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent": {"tf": 1.4142135623730951}, "personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 2}, "personal_agent.core.is_agno_storage_connected": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.readers.web_reader": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1.7320508075688772}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}}, "df": 21, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 14, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.7320508075688772}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}}, "df": 6, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.load_agent_knowledge": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.ResponseMetadata": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {"personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.main": {"tf": 1}}, "df": 15, "d": {"docs": {"personal_agent": {"tf": 2}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1.4142135623730951}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 2.23606797749979}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1.4142135623730951}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentModelManager": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1.7320508075688772}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.tools": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.4142135623730951}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}, "personal_agent.web": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 65}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.create_anti_duplicate_memory": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}, "y": {"docs": {"personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}}, "df": 2}}}}}}}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 69}}, "e": {"docs": {"personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 5}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 2}}}, "o": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1.4142135623730951}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 7, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1.4142135623730951}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 2}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1.4142135623730951}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1.4142135623730951}}, "df": 35, "o": {"docs": {}, "df": 0, "w": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.utils.set_logger_level": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 4}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}}, "df": 5}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 11}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1.4142135623730951}, "personal_agent.core.load_agent_knowledge": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.is_agno_storage_connected": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 13}, "p": {"docs": {"personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1.4142135623730951}, "personal_agent.web.register_routes": {"tf": 1.4142135623730951}, "personal_agent.web.create_smol_app": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}, "personal_agent.streamlit.dashboard.main": {"tf": 1}}, "df": 8}}}}}}}, "y": {"docs": {"personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 1, "n": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1.4142135623730951}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1.4142135623730951}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 34, "i": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}}, "df": 17, "d": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.cli": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "t": {"docs": {"personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.UserManager": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}}, "df": 7}}}}}}}, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1.4142135623730951}, "personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.web": {"tf": 1}}, "df": 13, "s": {"docs": {"personal_agent.web": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1.4142135623730951}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {"personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.cli.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1.7320508075688772}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.7320508075688772}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1.4142135623730951}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 40}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1.4142135623730951}, "personal_agent.core.create_structured_instructions": {"tf": 2}}, "df": 2}}}}, "s": {"docs": {"personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 2.23606797749979}}, "df": 4, "s": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {"personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1.4142135623730951}}, "df": 17}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManager": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 2.23606797749979}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.7320508075688772}, "personal_agent.core.LightRAGManager": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {"personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.extract_relationships": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 8, "s": {"docs": {"personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {"personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1.4142135623730951}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1.7320508075688772}, "personal_agent.config.load_user_from_file": {"tf": 2}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 2.23606797749979}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.switch_user": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.delete_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.add_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1.7320508075688772}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1.7320508075688772}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 2}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 2}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 56, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 16}}}}}}}}}, "f": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_var": {"tf": 2}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1.4142135623730951}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1.4142135623730951}, "personal_agent.core.is_weaviate_connected": {"tf": 1.4142135623730951}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1.4142135623730951}, "personal_agent.core.is_agno_storage_connected": {"tf": 1.4142135623730951}, "personal_agent.core.is_memory_connected": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.update_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1.7320508075688772}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1.7320508075688772}, "personal_agent.core.is_smollm2_model": {"tf": 1.4142135623730951}, "personal_agent.core.parse_smollm2_response": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1.4142135623730951}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 55}, "s": {"docs": {"personal_agent.config.get_userid": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1.4142135623730951}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 20, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 4, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.cli": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.tools": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.web": {"tf": 1}}, "df": 40}, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_qwen_thinking_settings": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"personal_agent": {"tf": 1.7320508075688772}, "personal_agent.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.run_agno_cli_wrapper": {"tf": 2}, "personal_agent.cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.cli.show_all_memories": {"tf": 1.4142135623730951}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1.4142135623730951}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1.7320508075688772}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1.4142135623730951}, "personal_agent.config.get_user_storage_paths": {"tf": 1.4142135623730951}, "personal_agent.config.get_userid": {"tf": 1.7320508075688772}, "personal_agent.config.load_user_from_file": {"tf": 2.23606797749979}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1.4142135623730951}, "personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1.4142135623730951}, "personal_agent.core.create_agent_executor": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.load_agent_knowledge": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 2}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 2}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 2}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 2}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 2.449489742783178}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 2.449489742783178}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 2.23606797749979}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 2}, "personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 2}, "personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1.4142135623730951}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1.4142135623730951}, "personal_agent.core.is_smollm2_model": {"tf": 1.4142135623730951}, "personal_agent.core.parse_smollm2_response": {"tf": 1.4142135623730951}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.tools": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 2}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.configure_master_logger": {"tf": 2}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1.4142135623730951}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 2.23606797749979}, "personal_agent.utils.set_logger_level": {"tf": 2.8284271247461903}, "personal_agent.utils.set_logger_level_for_module": {"tf": 2.8284271247461903}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1.7320508075688772}, "personal_agent.utils.toggle_stream_handler": {"tf": 2.449489742783178}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 2}, "personal_agent.utils.add_src_to_path": {"tf": 1.7320508075688772}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.web": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 148, "n": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 4}}, "y": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1}}, "m": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1, "e": {"docs": {"personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}}, "df": 7}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 2}, "t": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.4142135623730951}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 16}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 2}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_var": {"tf": 1.7320508075688772}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.7320508075688772}, "personal_agent.core.load_agent_knowledge": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 2.23606797749979}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 2.23606797749979}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.7320508075688772}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1.4142135623730951}, "personal_agent.core.StructuredResponseParser": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 2.23606797749979}, "personal_agent.core.UserManager.delete_user": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.add_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1.4142135623730951}, "personal_agent.core.check_docker_user_consistency": {"tf": 1.7320508075688772}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 2.23606797749979}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1.4142135623730951}, "personal_agent.team.cleanup_team": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1.4142135623730951}, "personal_agent.utils.setup_logging": {"tf": 2.23606797749979}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 2}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.configure_master_logger": {"tf": 1.7320508075688772}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.7320508075688772}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1.7320508075688772}, "personal_agent.web.register_routes": {"tf": 1.7320508075688772}, "personal_agent.web.register_smol_routes": {"tf": 1.7320508075688772}}, "df": 104, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.core.ToolCall": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1.4142135623730951}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1.4142135623730951}, "personal_agent.core.parse_smollm2_response": {"tf": 2}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}}, "df": 15, "s": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 2}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1.4142135623730951}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 2}, "personal_agent.tools": {"tf": 1.4142135623730951}}, "df": 15}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "p": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 2}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}, "personal_agent.core.TopicClassifier.classify": {"tf": 1.7320508075688772}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 2}}, "df": 11, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.team": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 2}, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 2}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 2}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.team": {"tf": 1.7320508075688772}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.cleanup_team": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 17}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 2}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1.7320508075688772}, "personal_agent.core.TopicClassifier.classify": {"tf": 1.7320508075688772}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1.7320508075688772}, "personal_agent.core.parse_smollm2_response": {"tf": 1.7320508075688772}}, "df": 15, "s": {"docs": {"personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1.7320508075688772}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1.7320508075688772}, "personal_agent.core.setup_weaviate": {"tf": 1.4142135623730951}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1.4142135623730951}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1.4142135623730951}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 32}, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.UserRegistry.get_current_user": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.UserRegistry": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}}, "df": 10, "s": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 12, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.team": {"tf": 1.4142135623730951}, "personal_agent.utils.cleanup": {"tf": 1.4142135623730951}}, "df": 6}, "a": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"personal_agent.cli_main": {"tf": 1}, "personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 21, "l": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1.4142135623730951}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.7320508075688772}, "personal_agent.core.AgentModelManager": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 2.23606797749979}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1.7320508075688772}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_model": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 2.23606797749979}, "personal_agent.core.parse_smollm2_response": {"tf": 1.4142135623730951}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_personal_agent_team": {"tf": 1.7320508075688772}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.7320508075688772}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_finance_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_calculator_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_file_operations_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_pubmed_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}}, "df": 30, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}}, "s": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_userid": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent": {"tf": 1.4142135623730951}, "personal_agent.cli_main": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.streamlit.dashboard.main": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.cli": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.UserManager": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentModelManager": {"tf": 1}, "personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}}, "df": 6}, "r": {"docs": {"personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}}, "df": 13, "s": {"docs": {"personal_agent.team.create_team": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 2}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 8}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.UserManager.get_all_users": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.team": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.4142135623730951}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.set_logger_level": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient": {"tf": 1.4142135623730951}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}}, "df": 12}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent": {"tf": 1.4142135623730951}, "personal_agent.cli": {"tf": 1}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1.4142135623730951}, "personal_agent.cli.show_memory_stats": {"tf": 1.4142135623730951}, "personal_agent.cli.store_immediate_memory": {"tf": 1.7320508075688772}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 2}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 2.8284271247461903}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 2}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 2.23606797749979}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 2.8284271247461903}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}, "personal_agent.core.create_agno_memory": {"tf": 2.6457513110645907}, "personal_agent.core.AntiDuplicateMemory": {"tf": 2}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 2}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 2}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 2.449489742783178}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 2.8284271247461903}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 2.23606797749979}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 2.23606797749979}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 2}, "personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 2}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 65, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 2}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 2}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 2}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 2}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 2.23606797749979}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 2.23606797749979}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 2.23606797749979}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 2}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 28}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.team.create_basic_memory_agent": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}}, "df": 13}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.ResponseMetadata": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 19, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}}, "df": 3}}}}}, "x": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 2}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.UserRegistry.get_current_user": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 19, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}, "r": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1.7320508075688772}, "personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}}, "df": 15, "s": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.UserManager.get_lightrag_status": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 7}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.7320508075688772}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}}, "df": 18, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1.7320508075688772}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "t": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 2}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 11, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 2}, "personal_agent.utils.configure_master_logger": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1.4142135623730951}, "personal_agent.core.setup_weaviate": {"tf": 1.4142135623730951}, "personal_agent.utils.cleanup": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem": {"tf": 1.4142135623730951}, "personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 2.23606797749979}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 2.23606797749979}}, "df": 11, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.create_agno_storage": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_userid": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}}, "df": 9, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 10}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.setup_weaviate": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.extract_relationships": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.web": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "m": {"2": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1.7320508075688772}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1.4142135623730951}, "personal_agent.core.parse_smollm2_response": {"tf": 1.7320508075688772}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1.4142135623730951}}, "df": 5}, "docs": {}, "df": 0}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1.4142135623730951}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 2}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1.4142135623730951}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.tools": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 26, "s": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 4, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 16, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1.4142135623730951}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.toggle_stream_handler": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}}, "df": 4, "d": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.ToolCall": {"tf": 1}, "personal_agent.core.ResponseMetadata": {"tf": 1}, "personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}}, "df": 8, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.StructuredResponseParser": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 15}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1.4142135623730951}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}}, "df": 6}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 6, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient.start_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.LightRAGManager.start_services": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1.4142135623730951}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 3.3166247903554}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 2}, "personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.UserRegistry.__init__": {"tf": 1.7320508075688772}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 23}}}, "e": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1.4142135623730951}, "personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.web.register_routes": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 11, "d": {"docs": {"personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_all_servers": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}}, "df": 3}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.cli_main": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1.4142135623730951}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.readers.web_reader": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 4, "s": {"docs": {"personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.core.get_ollama_format_schema": {"tf": 1.4142135623730951}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {"personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "w": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 5, "n": {"docs": {"personal_agent.core.KnowledgeCoordinator": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.signal_handler": {"tf": 1}}, "df": 3}}}}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1.4142135623730951}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 10, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}}, "df": 1}}}}}}}, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 5}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.UserRegistry": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent.utils.cleanup.signal_handler": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.core.UserManager.switch_user": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1.4142135623730951}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 4}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.SimpleMCPClient.stop_server_sync": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}}, "df": 8, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.7320508075688772}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}}, "df": 9}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}}, "df": 8}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.cli_main": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"1": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}}, "df": 2}, "2": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}}, "df": 2}, "docs": {"personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 2}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 2}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 2.449489742783178}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 2}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1.7320508075688772}, "personal_agent.core.extract_relationships": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.team.main": {"tf": 1}}, "df": 7}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1.7320508075688772}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 12}}}}, "v": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1.7320508075688772}, "personal_agent.config.get_env_var": {"tf": 2}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}}, "df": 5}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 2.6457513110645907}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 2.6457513110645907}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}}, "df": 18, "d": {"docs": {"personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}}, "df": 4}, "s": {"docs": {"personal_agent.utils.toggle_stream_handler": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_package_version": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1.4142135623730951}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1.7320508075688772}, "personal_agent.team.create_team": {"tf": 1}}, "df": 7}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.team": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.4142135623730951}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 8, "s": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent": {"tf": 1.7320508075688772}, "personal_agent.cli_main": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli": {"tf": 1}, "personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.config": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1.7320508075688772}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 2}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 2}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.create_multi_agent_system": {"tf": 1.7320508075688772}, "personal_agent.core.create_smolagents_executor": {"tf": 1.7320508075688772}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1.4142135623730951}, "personal_agent.core.create_agno_memory": {"tf": 2.23606797749979}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 2}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponseParser": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1.4142135623730951}, "personal_agent.readers.web_reader": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 2}, "personal_agent.team.create_personal_agent_team": {"tf": 1.7320508075688772}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.7320508075688772}, "personal_agent.team.cli_main": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 2.23606797749979}, "personal_agent.tools": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.7320508075688772}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1.4142135623730951}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}, "personal_agent.web": {"tf": 1.4142135623730951}, "personal_agent.streamlit.dashboard": {"tf": 1}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 100, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1.4142135623730951}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1.4142135623730951}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_var": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1.4142135623730951}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 14}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.team": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"personal_agent.team.create_basic_memory_agent": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent": {"tf": 1.4142135623730951}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 2}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1.7320508075688772}, "personal_agent.config.load_user_from_file": {"tf": 1.4142135623730951}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 2.23606797749979}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1.7320508075688772}, "personal_agent.core.parse_smollm2_response": {"tf": 1.4142135623730951}, "personal_agent.readers.web_reader.read_website": {"tf": 1}, "personal_agent.team": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 44}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1.4142135623730951}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1.7320508075688772}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 14, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.config.get_userid": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {"personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1.7320508075688772}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.check_docker_user_consistency": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.team.create_finance_agent": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.web": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1.4142135623730951}, "personal_agent.web.register_routes": {"tf": 1.7320508075688772}, "personal_agent.web.create_smol_app": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.7320508075688772}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.web.register_routes": {"tf": 1.7320508075688772}, "personal_agent.web.register_smol_routes": {"tf": 1.7320508075688772}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1.4142135623730951}, "personal_agent.team.main": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1.7320508075688772}, "personal_agent.web.register_smol_routes": {"tf": 1.7320508075688772}}, "df": 12, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.MultiAgentSystem.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "s": {"docs": {"personal_agent.utils": {"tf": 1}, "personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1.4142135623730951}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}}, "df": 6}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_var": {"tf": 1.7320508075688772}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 5}}}}, "s": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 18}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}}, "df": 2}}, "s": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 2.23606797749979}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1.7320508075688772}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 2}}, "df": 4, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.team.cleanup_team": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 7}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.UserManager": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}}, "df": 6}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}}, "df": 1, "d": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.cli": {"tf": 1.4142135623730951}, "personal_agent.team.cli_main": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.cli": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_structured_instructions": {"tf": 1}}, "df": 1, "d": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}}, "df": 4, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "s": {"docs": {"personal_agent.core.SemanticMemoryManager": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.7320508075688772}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1.7320508075688772}, "personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 11}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 13}}}, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.tools": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.cli.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.utils.setup_logging": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 9}, "c": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1.4142135623730951}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}}, "df": 6}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1.4142135623730951}, "personal_agent.utils.setup_logging": {"tf": 1}}, "df": 6, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 10, "s": {"docs": {"personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}}, "df": 7}}}}}}, "e": {"docs": {"personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}}, "df": 6, "d": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.SimpleMCPClient.start_servers": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.utils.setup_logging": {"tf": 1.4142135623730951}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}}, "df": 25}, "s": {"docs": {"personal_agent.utils.configure_master_logger": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1.4142135623730951}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.StructuredResponseParser": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.is_weaviate_connected": {"tf": 1.4142135623730951}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.MultiAgentSystem.run": {"tf": 1}}, "df": 1}, "s": {"docs": {"personal_agent.core.KnowledgeCoordinator": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.extract_relationships": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 4}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1, "d": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.ToolCall": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 3}}, "s": {"docs": {"personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1.4142135623730951}}, "df": 11}, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.team.create_calculator_agent": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1.7320508075688772}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 4}}}}}}, "n": {"docs": {"personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.cli_main": {"tf": 1}, "personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.cli": {"tf": 1.4142135623730951}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.cli_main": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 2}, "personal_agent.core.create_multi_agent_system": {"tf": 2}, "personal_agent.core.create_smolagents_executor": {"tf": 2}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.cleanup": {"tf": 1}}, "df": 4, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.team.cleanup_team": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}}, "df": 8}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1.7320508075688772}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.tools": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1.4142135623730951}, "personal_agent.config.get_user_storage_paths": {"tf": 1.4142135623730951}, "personal_agent.config.get_userid": {"tf": 1.7320508075688772}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}}, "df": 13, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1.4142135623730951}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1.4142135623730951}, "personal_agent.core.is_smollm2_model": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 13, "s": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.7320508075688772}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}}, "df": 35, "s": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1.7320508075688772}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AgentModelManager": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.streamlit.dashboard.apply_custom_theme": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 2}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1.7320508075688772}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.cleanup_team": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level": {"tf": 1.7320508075688772}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}}, "df": 72}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}}, "df": 4, "s": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 2}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}}, "df": 20}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 13}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 25, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1.4142135623730951}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 44, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.cli.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1.4142135623730951}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_personal_agent_team": {"tf": 1.7320508075688772}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.7320508075688772}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.7320508075688772}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_finance_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_calculator_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_file_operations_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_pubmed_agent": {"tf": 1.7320508075688772}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}}, "df": 20}}}}}, "n": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.SimpleMCPClient.call_tool_sync": {"tf": 1}, "personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.cleanup": {"tf": 1}}, "df": 15, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 1}}, "e": {"docs": {"personal_agent.utils.set_logger_level": {"tf": 1.4142135623730951}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 7}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.StructuredResponseParser": {"tf": 1}}, "df": 6}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}}, "df": 5, "s": {"docs": {"personal_agent.core.get_ollama_format_schema": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.7320508075688772}}, "df": 4}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent": {"tf": 1.4142135623730951}, "personal_agent.web": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.utils": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.utils.setup_logging": {"tf": 1.7320508075688772}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.configure_master_logger": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level": {"tf": 2}, "personal_agent.utils.set_logger_level_for_module": {"tf": 2.449489742783178}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 2}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 10}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1.7320508075688772}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 5, "s": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.configure_master_logger": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level_for_module": {"tf": 2.23606797749979}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1.4142135623730951}, "personal_agent.utils.cleanup": {"tf": 1}}, "df": 14}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1.7320508075688772}, "personal_agent.utils.configure_master_logger": {"tf": 1.4142135623730951}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1.4142135623730951}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 9, "s": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1.7320508075688772}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}}, "df": 8}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli": {"tf": 1}}, "df": 1}, "k": {"docs": {"personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.extract_relationships": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1.4142135623730951}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 2.8284271247461903}, "personal_agent.config.load_user_from_file": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 2}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 2}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 2}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.LightRAGManager": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 31, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.UserManager.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SimpleMCPClient.list_tools_sync": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 33, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 7}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.MultiAgentSystem.__init__": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 19}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent": {"tf": 1.7320508075688772}, "personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.create_agent_executor": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.initialize": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1.7320508075688772}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.ResponseMetadata": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1.4142135623730951}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.UserManager": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}, "personal_agent.team.main": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 73, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_userid": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1.7320508075688772}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 14}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 5}}}, "e": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1.4142135623730951}, "personal_agent.core.is_weaviate_connected": {"tf": 1.4142135623730951}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}}, "df": 8}}}}}}, "b": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.readers.web_reader": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.web": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.readers.web_reader": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.readers.web_reader": {"tf": 1}, "personal_agent.readers.web_reader.create_web_reader": {"tf": 1}}, "df": 2}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.switch_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.delete_user": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}}, "df": 16}}}}, "n": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.team": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 14}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.MultiAgentSystem.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_multi_agent_system": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1.4142135623730951}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}}, "df": 6}}}}, "b": {"docs": {"personal_agent.core.extract_relationships": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "w": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_var": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_env_bool": {"tf": 2}, "personal_agent.config.get_env_var": {"tf": 2}, "personal_agent.config.get_user_storage_paths": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.streamlit.dashboard.initialize_session_state": {"tf": 1}}, "df": 3}}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.delete_user": {"tf": 2.23606797749979}, "personal_agent.core.UserRegistry.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 9, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 25}}}}}, "e": {"docs": {"personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.streamlit.dashboard": {"tf": 1.4142135623730951}, "personal_agent.streamlit.dashboard.main": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}}, "df": 6}}, "s": {"docs": {"personal_agent.core.UserManager.get_user_details": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 8}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 2}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}}, "df": 13, "d": {"docs": {"personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 5}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_var": {"tf": 1.4142135623730951}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1.7320508075688772}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1.7320508075688772}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.configure_master_logger": {"tf": 1.4142135623730951}}, "df": 15}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.format_smollm2_system_prompt": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.utils.inject_dependencies": {"tf": 1}, "personal_agent.utils.cleanup.inject_dependencies": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"personal_agent.core.extract_relationships": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1.4142135623730951}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1.4142135623730951}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_finance_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_calculator_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 18, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1.4142135623730951}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1.4142135623730951}}, "df": 10}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AntiDuplicateMemory": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.config.get_userid": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"personal_agent.config.get_env_var": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1.4142135623730951}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 11}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1.4142135623730951}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1.4142135623730951}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}}, "df": 30}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 7}}}}}}}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 2.6457513110645907}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 14, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1.4142135623730951}, "personal_agent.config.load_user_from_file": {"tf": 1.7320508075688772}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 19}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 1}}}}}, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}}, "df": 3}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"personal_agent.core.KnowledgeCoordinator": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.utils.configure_master_logger": {"tf": 1.4142135623730951}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}}, "df": 2}, "s": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.toggle_stream_handler": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "b": {"docs": {"personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}}, "df": 20}, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.UserManager.delete_user": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1.4142135623730951}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}}, "df": 4}}}}, "t": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}}, "df": 6, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}}, "df": 12}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 1, "d": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.UserManager.switch_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1.7320508075688772}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1.4142135623730951}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1.4142135623730951}}, "df": 7}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.7320508075688772}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.StructuredResponse": {"tf": 1}, "personal_agent.core.StructuredResponse.has_tool_calls": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1.7320508075688772}, "personal_agent.core.ResponseMetadata": {"tf": 1}, "personal_agent.core.ResponseError": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 2}, "personal_agent.core.parse_smollm2_response": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}}, "df": 12, "s": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.StructuredResponseParser": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.extract_relationships": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.team.cleanup_team": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.cleanup": {"tf": 1}}, "df": 4}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.team.cleanup_team": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent": {"tf": 1}, "personal_agent.core.create_agent_executor": {"tf": 1}}, "df": 2}}, "d": {"docs": {"personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.readers.web_reader.read_website": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}}, "df": 2}, "y": {"docs": {"personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.readers.web_reader": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.team": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.UserRegistry.remove_user": {"tf": 1}}, "df": 1, "d": {"docs": {"personal_agent.core.UserRegistry.remove_user": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.core.load_agent_knowledge": {"tf": 1.4142135623730951}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 7, "s": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.setup_weaviate": {"tf": 1.4142135623730951}, "personal_agent.core.is_weaviate_connected": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.is_agno_storage_connected": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.create_multi_agent_system": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_smolagents_model": {"tf": 1}, "personal_agent.core.create_agno_storage": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.create_anti_duplicate_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.core.LightRAGManager.stop_services": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.validate_system_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.initialize": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.web.create_app": {"tf": 1}, "personal_agent.web.create_smol_app": {"tf": 1}}, "df": 141}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.get_userid": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1.4142135623730951}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.config.get_userid": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}}, "df": 6, "s": {"docs": {"personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"personal_agent.core.ToolCall": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentModelManager.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_userid": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.create_semantic_memory_manager": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.create_structured_instructions": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.get_userid": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 2}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}}, "df": 3, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1.7320508075688772}, "personal_agent.core.extract_relationships": {"tf": 1}}, "df": 5}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.utils.setup_agno_rich_logging": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1.4142135623730951}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.user_exists": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 11}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1.4142135623730951}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 3}}, "s": {"docs": {"personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.main": {"tf": 1}}, "df": 9, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_agno_memory": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.RuleSet": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1.4142135623730951}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}}, "df": 6, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.setup_logging": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1.4142135623730951}, "personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.utils.configure_master_logger": {"tf": 1}}, "df": 5, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.reset_stats": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1}, "personal_agent.web.register_smol_routes": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1}, "personal_agent.team.create_web_research_agent": {"tf": 1}, "personal_agent.team.create_finance_agent": {"tf": 1}, "personal_agent.team.create_calculator_agent": {"tf": 1}, "personal_agent.team.create_file_operations_agent": {"tf": 1}, "personal_agent.team.create_pubmed_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.utils.setup_logging": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}}, "df": 21, "d": {"docs": {"personal_agent.cli_main": {"tf": 1}, "personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}}, "df": 7}, "r": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.config.get_current_user_id": {"tf": 1.7320508075688772}, "personal_agent.config.get_user_storage_paths": {"tf": 1.7320508075688772}, "personal_agent.config.get_userid": {"tf": 2.23606797749979}, "personal_agent.config.load_user_from_file": {"tf": 2.6457513110645907}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 2.6457513110645907}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1.7320508075688772}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.delete_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.clear_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.get_user": {"tf": 2}, "personal_agent.core.UserManager.create_user": {"tf": 2.8284271247461903}, "personal_agent.core.UserManager.switch_user": {"tf": 2}, "personal_agent.core.UserManager.delete_user": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.restart_lightrag_for_current_user": {"tf": 1}, "personal_agent.core.UserManager.ensure_current_user_registered": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.update_user": {"tf": 2.23606797749979}, "personal_agent.core.UserManager.get_user_details": {"tf": 2}, "personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.UserRegistry.__init__": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 3.1622776601683795}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 2}, "personal_agent.core.UserRegistry.remove_user": {"tf": 2.23606797749979}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 2.23606797749979}, "personal_agent.core.UserRegistry.update_user": {"tf": 2.6457513110645907}, "personal_agent.core.UserRegistry.user_exists": {"tf": 2}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1.7320508075688772}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1.7320508075688772}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1.7320508075688772}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1.4142135623730951}, "personal_agent.core.DockerIntegrationManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.DockerIntegrationManager.check_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.check_docker_user_consistency": {"tf": 2}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 2}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 74, "i": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1.7320508075688772}, "personal_agent.config.get_userid": {"tf": 1.4142135623730951}, "personal_agent.config.load_user_from_file": {"tf": 1.4142135623730951}}, "df": 3}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {"personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry": {"tf": 1}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.streamlit.dashboard": {"tf": 1}}, "df": 4}}, "s": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.team.create_memory_agent": {"tf": 1}}, "df": 15}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.cli.show_all_memories": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.show_memory_analysis": {"tf": 1}, "personal_agent.cli.show_memory_stats": {"tf": 1}, "personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector": {"tf": 1}, "personal_agent.core.extract_entities": {"tf": 1}, "personal_agent.core.extract_relationships": {"tf": 1}, "personal_agent.readers.web_reader": {"tf": 1}, "personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_model": {"tf": 1}, "personal_agent.team.create_openai_model": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}}, "df": 25}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.cli.run_agno_cli": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 2}, "personal_agent.core.AgentMemoryManager.__init__": {"tf": 2}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1.4142135623730951}, "personal_agent.readers.web_reader.read_website": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_finance_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_calculator_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 20}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 1}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.cli": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"personal_agent.tools": {"tf": 1}, "personal_agent.utils": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {"personal_agent.config.load_user_from_file": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.cleanup.cleanup": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.update_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1.4142135623730951}, "personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}, "personal_agent.utils": {"tf": 1}}, "df": 11, "d": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}}, "df": 4}, "s": {"docs": {"personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentMemoryManager": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.cli_main": {"tf": 1}, "personal_agent.cli.show_memories_by_topic_cli": {"tf": 1}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.create_smolagents_executor": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1.4142135623730951}, "personal_agent.core.create_semantic_memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.add_memory": {"tf": 1}}, "df": 15, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManagerConfig.model_config": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.utils.configure_master_logger": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.run_agno_cli": {"tf": 1}, "personal_agent.cli.run_agno_cli": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.create_user_memories": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.UserManager.delete_user": {"tf": 1}, "personal_agent.core.LightRAGManager.start_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.utils.list_all_loggers": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.load_agent_knowledge": {"tf": 2}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1.7320508075688772}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 2}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1.4142135623730951}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_finance_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_calculator_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.7320508075688772}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 32, "d": {"docs": {"personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.core.SimpleMCPClient": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.AgentModelManager.create_model": {"tf": 1}, "personal_agent.core.create_agno_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.web": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"personal_agent.core.RuleSet": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"personal_agent.config.get_env_var": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}, "personal_agent.core.is_memory_connected": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.UserRegistry.__init__": {"tf": 1.7320508075688772}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.UserManager.delete_user": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.cli.clear_all_memories": {"tf": 1}, "personal_agent.cli.store_immediate_memory": {"tf": 1.4142135623730951}, "personal_agent.cli.delete_memory_by_id_cli": {"tf": 1}, "personal_agent.cli.delete_memories_by_topic_cli": {"tf": 1}, "personal_agent.config.get_package_version": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.web": {"tf": 1}}, "df": 11}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.config.get_env_bool": {"tf": 2.23606797749979}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.team.create_knowledge_memory_agent": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.delete_memory": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 2}, "personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 2.8284271247461903}, "personal_agent.core.MultiAgentSystem.run": {"tf": 1.7320508075688772}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1.7320508075688772}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 2}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1.7320508075688772}, "personal_agent.web.register_routes": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 14}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"3": {"docs": {"personal_agent.core.AgentModelManager.create_model": {"tf": 1}}, "df": 1}, "docs": {"personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {"personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.run_agno_cli_wrapper": {"tf": 1}, "personal_agent.config.get_user_storage_paths": {"tf": 1.4142135623730951}, "personal_agent.core.create_simple_personal_agent": {"tf": 2.449489742783178}, "personal_agent.core.load_agent_knowledge": {"tf": 2.23606797749979}, "personal_agent.core.AgentKnowledgeManager": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.add_fact": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.clear_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.MultiAgentSystem": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 2}, "personal_agent.core.load_combined_knowledge_base": {"tf": 1.7320508075688772}, "personal_agent.core.load_lightrag_knowledge_base": {"tf": 1.4142135623730951}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.__init__": {"tf": 1.7320508075688772}, "personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1.7320508075688772}, "personal_agent.core.create_knowledge_coordinator": {"tf": 1.7320508075688772}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 2}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}, "personal_agent.utils.store_fact_in_knowledge_base": {"tf": 1}, "personal_agent.web.register_routes": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 27, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.create_knowledge_coordinator": {"tf": 1}}, "df": 1}}}}}}}}}}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1.4142135623730951}}, "df": 4}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {"personal_agent.web.register_routes": {"tf": 1.4142135623730951}, "personal_agent.web.register_smol_routes": {"tf": 1.4142135623730951}}, "df": 2}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.utils.cleanup.signal_handler": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}}, "df": 1}, "r": {"docs": {"personal_agent.utils.setup_logging_filters": {"tf": 1}, "personal_agent.utils.list_handlers": {"tf": 1}}, "df": 2, "s": {"docs": {"personal_agent.utils.register_cleanup_handlers": {"tf": 1}, "personal_agent.utils.setup_agno_rich_logging": {"tf": 1}, "personal_agent.utils.configure_all_rich_logging": {"tf": 1}, "personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1.4142135623730951}, "personal_agent.utils.list_handlers": {"tf": 1}, "personal_agent.utils.set_logging_level_for_all_handlers": {"tf": 1}, "personal_agent.utils.cleanup": {"tf": 1}, "personal_agent.utils.cleanup.register_cleanup_handlers": {"tf": 1}}, "df": 8}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"personal_agent.config.get_package_version": {"tf": 1.4142135623730951}, "personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}}, "df": 2}}, "s": {"docs": {"personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}}, "df": 1}, "d": {"docs": {"personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.SemanticMemoryManager.process_input": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.tools": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.core.prepare_smollm2_messages": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "g": {"docs": {"personal_agent.core.AgentKnowledgeManager.set_preference": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"personal_agent.cli.store_immediate_memory": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.sync_with_graph": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.query_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.restate_user_fact": {"tf": 1}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}, "personal_agent.core.AgentMemoryManager.clear_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_graph_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 2}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1.7320508075688772}, "personal_agent.core.AgentMemoryManager.delete_memories_by_topic": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.sync_memory_to_graph": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_memory_sync_status": {"tf": 1}}, "df": 15, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"personal_agent.utils.cleanup.signal_handler": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}}, "df": 1, "s": {"docs": {"personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.config.get_current_user_id": {"tf": 1.4142135623730951}, "personal_agent.config.get_mcp_servers": {"tf": 1}, "personal_agent.config.get_qwen_instruct_settings": {"tf": 1}, "personal_agent.config.get_qwen_thinking_settings": {"tf": 1}, "personal_agent.config.get_settings": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_facts": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_preference": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_all_preferences": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_relationships": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memory_graph_labels": {"tf": 1}, "personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_all_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memory_stats": {"tf": 1}, "personal_agent.core.KnowledgeCoordinator.get_routing_stats": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.UserManager.get_all_users": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserManager.get_lightrag_status": {"tf": 1}, "personal_agent.core.UserManager.get_user_details": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.get_all_users": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.LightRAGManager.get_service_status": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_last_tool_calls": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.get_agent_info": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.get_all_memories": {"tf": 1}}, "df": 34, "s": {"docs": {"personal_agent.tools.StreamlitMemoryHelper.memory_manager": {"tf": 1}, "personal_agent.tools.StreamlitMemoryHelper.db": {"tf": 1}, "personal_agent.tools.StreamlitKnowledgeHelper.knowledge_manager": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}}, "df": 1, "d": {"docs": {"personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}}, "df": 2}}}, "l": {"docs": {"personal_agent.config.get_user_storage_paths": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"personal_agent.core.MultiAgentSystem": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}, "personal_agent.core.UserManager.switch_user": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}}, "df": 1}, "t": {"docs": {"personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.LightRAGManager.update_docker_compose_user_id": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.team.create_ollama_model": {"tf": 1}, "personal_agent.team.create_team": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1}, "personal_agent.config.get_env_var": {"tf": 1}, "personal_agent.core.create_simple_personal_agent": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.add_entity": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.update_entity": {"tf": 1.4142135623730951}, "personal_agent.core.AgentKnowledgeManager.add_relationship": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.seed_entity_in_graph": {"tf": 1.4142135623730951}, "personal_agent.core.AgentMemoryManager.check_entity_exists": {"tf": 1.4142135623730951}, "personal_agent.core.AgentModelManager.__init__": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.create_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1.4142135623730951}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.is_smollm2_model": {"tf": 1.7320508075688772}, "personal_agent.team.create_basic_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team": {"tf": 1.4142135623730951}, "personal_agent.team.create_personal_agent_team_async": {"tf": 1.4142135623730951}, "personal_agent.team.PersonalAgentTeamWrapper.__init__": {"tf": 1.4142135623730951}, "personal_agent.team.create_web_research_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_finance_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_calculator_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_file_operations_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_pubmed_agent": {"tf": 1.4142135623730951}, "personal_agent.team.create_knowledge_memory_agent": {"tf": 1.4142135623730951}, "personal_agent.utils.setup_logging": {"tf": 1.7320508075688772}, "personal_agent.utils.list_handlers": {"tf": 1.7320508075688772}, "personal_agent.utils.set_logger_level": {"tf": 1.7320508075688772}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.4142135623730951}, "personal_agent.utils.toggle_stream_handler": {"tf": 1.7320508075688772}}, "df": 30, "s": {"docs": {"personal_agent.core.MultiAgentSystem.get_agent_info": {"tf": 1}, "personal_agent.core.MultiAgentSystem.list_available_tools": {"tf": 1}, "personal_agent.core.TopicClassifier.classify": {"tf": 1}, "personal_agent.utils.list_all_loggers": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.utils.disable_stream_handlers_for_namespace": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "d": {"docs": {"personal_agent.core.extract_entities": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.KnowledgeCoordinator.query_knowledge_base": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 3, "t": {"docs": {"personal_agent.config.get_env_bool": {"tf": 1.4142135623730951}, "personal_agent.config.get_env_var": {"tf": 1.7320508075688772}, "personal_agent.config.refresh_user_dependent_settings": {"tf": 1}, "personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.add_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.create_or_update_memories": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.run_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1.4142135623730951}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.remove_user": {"tf": 1}, "personal_agent.core.UserRegistry.update_last_seen": {"tf": 1}, "personal_agent.core.UserRegistry.update_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.core.UserRegistry.ensure_current_user_registered": {"tf": 1}, "personal_agent.core.LightRAGManager.restart_lightrag_services": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.ensure_docker_consistency": {"tf": 1}, "personal_agent.core.DockerIntegrationManager.pre_initialization_check": {"tf": 1}, "personal_agent.core.ensure_docker_user_consistency": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.run": {"tf": 1}, "personal_agent.utils.set_logger_level": {"tf": 1}, "personal_agent.utils.set_logger_level_for_module": {"tf": 1.4142135623730951}}, "df": 24}, "n": {"docs": {}, "df": 0, "e": {"docs": {"personal_agent.core.create_simple_personal_agent": {"tf": 1}, "personal_agent.core.load_agent_knowledge": {"tf": 1}, "personal_agent.core.AgentKnowledgeManager.get_entity": {"tf": 1}, "personal_agent.core.AgentMemoryManager.store_user_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.create_combined_knowledge_base": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.add_user_memory": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.delete_user_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.UserManager.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_user": {"tf": 1}, "personal_agent.core.UserRegistry.get_current_user": {"tf": 1}, "personal_agent.team.PersonalAgentTeamWrapper.cleanup": {"tf": 1}}, "df": 13}}, "w": {"docs": {"personal_agent.core.UserManager.__init__": {"tf": 1}, "personal_agent.core.LightRAGManager.__init__": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.utils.add_src_to_path": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"personal_agent.core.reset_weaviate_if_corrupted": {"tf": 1}, "personal_agent.core.AntiDuplicateMemory.__init__": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {"personal_agent.core.AgentMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.update_memory": {"tf": 1}, "personal_agent.core.SemanticDuplicateDetector.is_duplicate": {"tf": 1.7320508075688772}, "personal_agent.core.UserManager.create_user": {"tf": 1}, "personal_agent.core.UserRegistry.add_user": {"tf": 1}}, "df": 5}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"personal_agent.core.AgentMemoryManager.direct_search_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_memory": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_recent_memories": {"tf": 1}, "personal_agent.core.AgentMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.AgentMemoryManager.query_graph_memory": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.search_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.get_memories_by_topic": {"tf": 1}, "personal_agent.core.StructuredResponse.tool_calls_count": {"tf": 1}}, "df": 8}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"personal_agent.core.AgentMemoryManager.list_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.acreate_or_update_memories": {"tf": 1}, "personal_agent.core.SemanticMemoryManager.arun_memory_task": {"tf": 1}, "personal_agent.team.create_basic_memory_agent": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"personal_agent.core.StructuredResponseParser": {"tf": 1}, "personal_agent.core.StructuredResponseParser.parse": {"tf": 1}, "personal_agent.core.StructuredResponseParser.create_system_prompt": {"tf": 1}, "personal_agent.core.get_ollama_format_schema": {"tf": 1}, "personal_agent.core.create_structured_instructions": {"tf": 1}, "personal_agent.core.format_smollm2_system_prompt": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}, "personal_agent.core.prepare_smollm2_messages": {"tf": 1}}, "df": 8}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"personal_agent.core.extract_content_from_smollm2_response": {"tf": 1}, "personal_agent.core.parse_smollm2_response": {"tf": 1}}, "df": 2}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();