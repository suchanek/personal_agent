# Personal AI Agent Environment Variables
# Copy this file to .env and fill in your actual API keys


# Directories for the Personal AI Agent
DATA_DIR=/Users/Shared/personal_agent_data     # Data directory for vector database

#OLLAMA_URL=http://tesla.local:11434
OLLAMA_URL=http://localhost:11434
OLLAMA_DOCKER_URL=http://host.docker.internal:11434


# LLM Model configuration - use actual model names, not dictionary references
# Upgraded to more capable model for better PDF processing
LLM_MODEL=qwen2.5:latest
#LLM_MODEL=llama3.1:8b-instruct-q8_0
#LLM_MODEL=qwen3:1.7b
EMBEDDING_MODEL=nomic-embed-text

# Agno Storage Configuration
# Storage backend: "weaviate" or "agno"
STORAGE_BACKEND=agno

# USER CONFIGURATION
USER_ID=Eric

# Agno Storage Configuration
# Storage backend: "weaviate" or "agno"
STORAGE_BACKEND=agno
AGNO_STORAGE_DIR=${DATA_DIR}/${STORAGE_BACKEND}/${USER_ID}

# Knowledge directory for Agno
AGNO_KNOWLEDGE_DIR=${AGNO_STORAGE_DIR}/knowledge

# MODEL CONTEXT SIZE OVERRIDES
# Override context sizes for specific models (optional)
# Format: MODEL_NAME_CTX_SIZE (replace : with _ and . with _)
# Examples:
QWEN3_1_7B_CTX_SIZE=32768
QWEN3_4B_CTX_SIZE=32768

# LLAMA3_1_8B_INSTRUCT_Q8_0_CTX_SIZE=65536
DEFAULT_MODEL_CTX_SIZE=32768


# Embedding model (also via Ollama)

EMBEDDING_MODEL=nomic-embed-text
EMBEDDING_BINDING=ollama
EMBEDDING_BINDING_HOST=http://host.docker.internal:11434
EMBEDDING_DIM=768
# EMBEDDING_BINDING_API_KEY=your_api_key
# Optional LightRAG REST server configuration
# LLM Binding Configuration
LLM_BINDING_HOST=http://host.docker.internal:11434

# GUI Endpoint
LIGHTRAG_SERVER=http://localhost:9621
LIGHTRAG_SERVER_URL=http://localhost:9621/webui

# LLM_BINDING_API_KEY=your_api_key

# LIGHTRAG TIMEOUT SETTINGS FOR PDF PROCESSING
LLM_TIMEOUT=7200          # 120 minutes for LLM processing (increased for remote Ollama)
EMBEDDING_TIMEOUT=3600    # 60 minutes for embedding processing (increased for remote)
PDF_CHUNK_SIZE=1024       # Reduced chunk size for better reliability
HTTP_TIMEOUT=7200         # 120 minutes for HTTP client timeout
CONNECTION_TIMEOUT=600    # 10 minutes for initial connection timeout
READ_TIMEOUT=7200         # 120 minutes for read operations
WRITE_TIMEOUT=600         # 10 minutes for write operations
POOL_TIMEOUT=600          # 10 minutes for connection pool timeout

# HTTPX CLIENT TIMEOUT SETTINGS (for Ollama client)
HTTPX_TIMEOUT=7200        # 120 minutes for httpx client operations
HTTPX_CONNECT_TIMEOUT=600 # 10 minutes for httpx connection timeout
HTTPX_READ_TIMEOUT=7200   # 120 minutes for httpx read timeout
HTTPX_WRITE_TIMEOUT=600   # 10 minutes for httpx write timeout
HTTPX_POOL_TIMEOUT=600    # 10 minutes for httpx pool timeout

# OLLAMA CLIENT SPECIFIC SETTINGS
OLLAMA_TIMEOUT=7200       # 120 minutes for Ollama operations
OLLAMA_KEEP_ALIVE=3600    # Keep model loaded for 1 hour
OLLAMA_NUM_PREDICT=16384  # Maximum tokens to generate
OLLAMA_TEMPERATURE=0.1    # Lower temperature for more consistent processing
