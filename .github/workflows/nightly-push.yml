name: Nightly Branch Push

on:
  schedule:
    # Run at 12:01 AM UTC every day
    - cron: '1 0 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  push-to-nightly:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch all branches and history
        fetch-depth: 0
        # Explicitly checkout the default branch
        ref: ${{ github.event.repository.default_branch }}
        # Use the built-in GITHUB_TOKEN with write permissions
        token: ${{ github.token }}
    
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Get source branch information
      id: branch
      run: |
        # Use the default branch as source (usually main or master)
        SOURCE_BRANCH="${{ github.event.repository.default_branch }}"
        
        # Fallback: try to get the actual branch name if available
        if [ "${{ github.ref_name }}" != "" ]; then
          SOURCE_BRANCH="${{ github.ref_name }}"
        fi
        
        # Store the current commit hash
        CURRENT_COMMIT=$(git rev-parse HEAD)
        
        echo "source_branch=$SOURCE_BRANCH" >> $GITHUB_OUTPUT
        echo "current_commit=$CURRENT_COMMIT" >> $GITHUB_OUTPUT
        echo "Source branch: $SOURCE_BRANCH"
        echo "Current commit: $CURRENT_COMMIT"
    
    - name: Push to nightly branch
      run: |
        SOURCE_BRANCH="${{ steps.branch.outputs.source_branch }}"
        CURRENT_COMMIT="${{ steps.branch.outputs.current_commit }}"
        
        echo "Preparing to push $SOURCE_BRANCH (commit: $CURRENT_COMMIT) to nightly branch"
        
        # Ensure we're on the source branch
        git checkout $SOURCE_BRANCH
        
        # Check if nightly branch exists remotely
        if git ls-remote --exit-code --heads origin nightly >/dev/null 2>&1; then
          echo "Nightly branch exists remotely"
          # Fetch the nightly branch
          git fetch origin nightly:nightly || true
        else
          echo "Nightly branch does not exist remotely"
        fi
        
        # Create or reset the nightly branch to current commit
        git checkout -B nightly $CURRENT_COMMIT
        
        # Push to nightly branch (force push to ensure it matches source)
        git push origin nightly --force
        
        echo "âœ… Successfully pushed $SOURCE_BRANCH (commit: $CURRENT_COMMIT) to nightly branch"
    
    - name: Summary
      run: |
        echo "âœ… Nightly push completed successfully"
        echo "ðŸ“… Timestamp: $(date)"
        echo "ðŸŒ™ Current branch content has been pushed to nightly branch"
